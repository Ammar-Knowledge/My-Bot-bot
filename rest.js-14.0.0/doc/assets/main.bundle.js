(()=>{var Xa={9781:(T,b,s)=>{"use strict";const f=s(6049),i=Symbol("max"),r=Symbol("length"),p=Symbol("lengthCalculator"),c=Symbol("allowStale"),l=Symbol("maxAge"),o=Symbol("dispose"),u=Symbol("noDisposeOnSet"),m=Symbol("lruList"),n=Symbol("cache"),h=Symbol("updateAgeOnGet"),d=()=>1;class g{constructor(R){if(typeof R=="number"&&(R={max:R}),R||(R={}),R.max&&(typeof R.max!="number"||R.max<0))throw new TypeError("max must be a non-negative number");const j=this[i]=R.max||1/0,D=R.length||d;if(this[p]=typeof D!="function"?d:D,this[c]=R.stale||!1,R.maxAge&&typeof R.maxAge!="number")throw new TypeError("maxAge must be a number");this[l]=R.maxAge||0,this[o]=R.dispose,this[u]=R.noDisposeOnSet||!1,this[h]=R.updateAgeOnGet||!1,this.reset()}set max(R){if(typeof R!="number"||R<0)throw new TypeError("max must be a non-negative number");this[i]=R||1/0,P(this)}get max(){return this[i]}set allowStale(R){this[c]=!!R}get allowStale(){return this[c]}set maxAge(R){if(typeof R!="number")throw new TypeError("maxAge must be a non-negative number");this[l]=R,P(this)}get maxAge(){return this[l]}set lengthCalculator(R){typeof R!="function"&&(R=d),R!==this[p]&&(this[p]=R,this[r]=0,this[m].forEach(j=>{j.length=this[p](j.value,j.key),this[r]+=j.length})),P(this)}get lengthCalculator(){return this[p]}get length(){return this[r]}get itemCount(){return this[m].length}rforEach(R,j){j=j||this;for(let D=this[m].tail;D!==null;){const k=D.prev;C(this,R,D,j),D=k}}forEach(R,j){j=j||this;for(let D=this[m].head;D!==null;){const k=D.next;C(this,R,D,j),D=k}}keys(){return this[m].toArray().map(R=>R.key)}values(){return this[m].toArray().map(R=>R.value)}reset(){this[o]&&this[m]&&this[m].length&&this[m].forEach(R=>this[o](R.key,R.value)),this[n]=new Map,this[m]=new f,this[r]=0}dump(){return this[m].map(R=>y(this,R)?!1:{k:R.key,v:R.value,e:R.now+(R.maxAge||0)}).toArray().filter(R=>R)}dumpLru(){return this[m]}set(R,j,D){if(D=D||this[l],D&&typeof D!="number")throw new TypeError("maxAge must be a number");const k=D?Date.now():0,x=this[p](j,R);if(this[n].has(R)){if(x>this[i])return A(this,this[n].get(R)),!1;const O=this[n].get(R).value;return this[o]&&(this[u]||this[o](R,O.value)),O.now=k,O.maxAge=D,O.value=j,this[r]+=x-O.length,O.length=x,this.get(R),P(this),!0}const I=new E(R,j,x,k,D);return I.length>this[i]?(this[o]&&this[o](R,j),!1):(this[r]+=I.length,this[m].unshift(I),this[n].set(R,this[m].head),P(this),!0)}has(R){if(!this[n].has(R))return!1;const j=this[n].get(R).value;return!y(this,j)}get(R){return v(this,R,!0)}peek(R){return v(this,R,!1)}pop(){const R=this[m].tail;return R?(A(this,R),R.value):null}del(R){A(this,this[n].get(R))}load(R){this.reset();const j=Date.now();for(let D=R.length-1;D>=0;D--){const k=R[D],x=k.e||0;if(x===0)this.set(k.k,k.v);else{const I=x-j;I>0&&this.set(k.k,k.v,I)}}}prune(){this[n].forEach((R,j)=>v(this,j,!1))}}const v=(_,R,j)=>{const D=_[n].get(R);if(D){const k=D.value;if(y(_,k)){if(A(_,D),!_[c])return}else j&&(_[h]&&(D.value.now=Date.now()),_[m].unshiftNode(D));return k.value}},y=(_,R)=>{if(!R||!R.maxAge&&!_[l])return!1;const j=Date.now()-R.now;return R.maxAge?j>R.maxAge:_[l]&&j>_[l]},P=_=>{if(_[r]>_[i])for(let R=_[m].tail;_[r]>_[i]&&R!==null;){const j=R.prev;A(_,R),R=j}},A=(_,R)=>{if(R){const j=R.value;_[o]&&_[o](j.key,j.value),_[r]-=j.length,_[n].delete(j.key),_[m].removeNode(R)}};class E{constructor(R,j,D,k,x){this.key=R,this.value=j,this.length=D,this.now=k,this.maxAge=x||0}}const C=(_,R,j,D)=>{let k=j.value;y(_,k)&&(A(_,j),_[c]||(k=void 0)),k&&R.call(D,k.value,k.key,_)};T.exports=g},8325:(T,b,s)=>{const f=Symbol("SemVer ANY");class i{static get ANY(){return f}constructor(h,d){if(d=r(d),h instanceof i){if(h.loose===!!d.loose)return h;h=h.value}o("comparator",h,d),this.options=d,this.loose=!!d.loose,this.parse(h),this.semver===f?this.value="":this.value=this.operator+this.semver.version,o("comp",this)}parse(h){const d=this.options.loose?p[c.COMPARATORLOOSE]:p[c.COMPARATOR],g=h.match(d);if(!g)throw new TypeError(`Invalid comparator: ${h}`);this.operator=g[1]!==void 0?g[1]:"",this.operator==="="&&(this.operator=""),g[2]?this.semver=new u(g[2],this.options.loose):this.semver=f}toString(){return this.value}test(h){if(o("Comparator.test",h,this.options.loose),this.semver===f||h===f)return!0;if(typeof h=="string")try{h=new u(h,this.options)}catch(d){return!1}return l(h,this.operator,this.semver,this.options)}intersects(h,d){if(!(h instanceof i))throw new TypeError("a Comparator is required");if((!d||typeof d!="object")&&(d={loose:!!d,includePrerelease:!1}),this.operator==="")return this.value===""?!0:new m(h.value,d).test(this.value);if(h.operator==="")return h.value===""?!0:new m(this.value,d).test(h.semver);const g=(this.operator===">="||this.operator===">")&&(h.operator===">="||h.operator===">"),v=(this.operator==="<="||this.operator==="<")&&(h.operator==="<="||h.operator==="<"),y=this.semver.version===h.semver.version,P=(this.operator===">="||this.operator==="<=")&&(h.operator===">="||h.operator==="<="),A=l(this.semver,"<",h.semver,d)&&(this.operator===">="||this.operator===">")&&(h.operator==="<="||h.operator==="<"),E=l(this.semver,">",h.semver,d)&&(this.operator==="<="||this.operator==="<")&&(h.operator===">="||h.operator===">");return g||v||y&&P||A||E}}T.exports=i;const r=s(349),{re:p,t:c}=s(3259),l=s(5609),o=s(4903),u=s(1630),m=s(1459)},1459:(T,b,s)=>{class f{constructor(U,B){if(B=p(B),U instanceof f)return U.loose===!!B.loose&&U.includePrerelease===!!B.includePrerelease?U:new f(U.raw,B);if(U instanceof c)return this.raw=U.value,this.set=[[U]],this.format(),this;if(this.options=B,this.loose=!!B.loose,this.includePrerelease=!!B.includePrerelease,this.raw=U,this.set=U.split("||").map(z=>this.parseRange(z.trim())).filter(z=>z.length),!this.set.length)throw new TypeError(`Invalid SemVer Range: ${U}`);if(this.set.length>1){const z=this.set[0];if(this.set=this.set.filter(F=>!g(F[0])),this.set.length===0)this.set=[z];else if(this.set.length>1){for(const F of this.set)if(F.length===1&&v(F[0])){this.set=[F];break}}}this.format()}format(){return this.range=this.set.map(U=>U.join(" ").trim()).join("||").trim(),this.range}toString(){return this.range}parseRange(U){U=U.trim();const z=`parseRange:${Object.keys(this.options).join(",")}:${U}`,F=r.get(z);if(F)return F;const K=this.options.loose,W=K?u[m.HYPHENRANGELOOSE]:u[m.HYPHENRANGE];U=U.replace(W,I(this.options.includePrerelease)),l("hyphen replace",U),U=U.replace(u[m.COMPARATORTRIM],n),l("comparator trim",U),U=U.replace(u[m.TILDETRIM],h),U=U.replace(u[m.CARETTRIM],d),U=U.split(/\s+/).join(" ");let re=U.split(" ").map(fe=>P(fe,this.options)).join(" ").split(/\s+/).map(fe=>x(fe,this.options));K&&(re=re.filter(fe=>(l("loose invalid filter",fe,this.options),!!fe.match(u[m.COMPARATORLOOSE])))),l("range list",re);const ne=new Map,pe=re.map(fe=>new c(fe,this.options));for(const fe of pe){if(g(fe))return[fe];ne.set(fe.value,fe)}ne.size>1&&ne.has("")&&ne.delete("");const te=[...ne.values()];return r.set(z,te),te}intersects(U,B){if(!(U instanceof f))throw new TypeError("a Range is required");return this.set.some(z=>y(z,B)&&U.set.some(F=>y(F,B)&&z.every(K=>F.every(W=>K.intersects(W,B)))))}test(U){if(!U)return!1;if(typeof U=="string")try{U=new o(U,this.options)}catch(B){return!1}for(let B=0;B<this.set.length;B++)if(G(this.set[B],U,this.options))return!0;return!1}}T.exports=f;const i=s(9781),r=new i({max:1e3}),p=s(349),c=s(8325),l=s(4903),o=s(1630),{re:u,t:m,comparatorTrimReplace:n,tildeTrimReplace:h,caretTrimReplace:d}=s(3259),g=O=>O.value==="<0.0.0-0",v=O=>O.value==="",y=(O,U)=>{let B=!0;const z=O.slice();let F=z.pop();for(;B&&z.length;)B=z.every(K=>F.intersects(K,U)),F=z.pop();return B},P=(O,U)=>(l("comp",O,U),O=_(O,U),l("caret",O),O=E(O,U),l("tildes",O),O=j(O,U),l("xrange",O),O=k(O,U),l("stars",O),O),A=O=>!O||O.toLowerCase()==="x"||O==="*",E=(O,U)=>O.trim().split(/\s+/).map(B=>C(B,U)).join(" "),C=(O,U)=>{const B=U.loose?u[m.TILDELOOSE]:u[m.TILDE];return O.replace(B,(z,F,K,W,re)=>{l("tilde",O,z,F,K,W,re);let ne;return A(F)?ne="":A(K)?ne=`>=${F}.0.0 <${+F+1}.0.0-0`:A(W)?ne=`>=${F}.${K}.0 <${F}.${+K+1}.0-0`:re?(l("replaceTilde pr",re),ne=`>=${F}.${K}.${W}-${re} <${F}.${+K+1}.0-0`):ne=`>=${F}.${K}.${W} <${F}.${+K+1}.0-0`,l("tilde return",ne),ne})},_=(O,U)=>O.trim().split(/\s+/).map(B=>R(B,U)).join(" "),R=(O,U)=>{l("caret",O,U);const B=U.loose?u[m.CARETLOOSE]:u[m.CARET],z=U.includePrerelease?"-0":"";return O.replace(B,(F,K,W,re,ne)=>{l("caret",O,F,K,W,re,ne);let pe;return A(K)?pe="":A(W)?pe=`>=${K}.0.0${z} <${+K+1}.0.0-0`:A(re)?K==="0"?pe=`>=${K}.${W}.0${z} <${K}.${+W+1}.0-0`:pe=`>=${K}.${W}.0${z} <${+K+1}.0.0-0`:ne?(l("replaceCaret pr",ne),K==="0"?W==="0"?pe=`>=${K}.${W}.${re}-${ne} <${K}.${W}.${+re+1}-0`:pe=`>=${K}.${W}.${re}-${ne} <${K}.${+W+1}.0-0`:pe=`>=${K}.${W}.${re}-${ne} <${+K+1}.0.0-0`):(l("no pr"),K==="0"?W==="0"?pe=`>=${K}.${W}.${re}${z} <${K}.${W}.${+re+1}-0`:pe=`>=${K}.${W}.${re}${z} <${K}.${+W+1}.0-0`:pe=`>=${K}.${W}.${re} <${+K+1}.0.0-0`),l("caret return",pe),pe})},j=(O,U)=>(l("replaceXRanges",O,U),O.split(/\s+/).map(B=>D(B,U)).join(" ")),D=(O,U)=>{O=O.trim();const B=U.loose?u[m.XRANGELOOSE]:u[m.XRANGE];return O.replace(B,(z,F,K,W,re,ne)=>{l("xRange",O,z,F,K,W,re,ne);const pe=A(K),te=pe||A(W),fe=te||A(re),Pe=fe;return F==="="&&Pe&&(F=""),ne=U.includePrerelease?"-0":"",pe?F===">"||F==="<"?z="<0.0.0-0":z="*":F&&Pe?(te&&(W=0),re=0,F===">"?(F=">=",te?(K=+K+1,W=0,re=0):(W=+W+1,re=0)):F==="<="&&(F="<",te?K=+K+1:W=+W+1),F==="<"&&(ne="-0"),z=`${F+K}.${W}.${re}${ne}`):te?z=`>=${K}.0.0${ne} <${+K+1}.0.0-0`:fe&&(z=`>=${K}.${W}.0${ne} <${K}.${+W+1}.0-0`),l("xRange return",z),z})},k=(O,U)=>(l("replaceStars",O,U),O.trim().replace(u[m.STAR],"")),x=(O,U)=>(l("replaceGTE0",O,U),O.trim().replace(u[U.includePrerelease?m.GTE0PRE:m.GTE0],"")),I=O=>(U,B,z,F,K,W,re,ne,pe,te,fe,Pe,Le)=>(A(z)?B="":A(F)?B=`>=${z}.0.0${O?"-0":""}`:A(K)?B=`>=${z}.${F}.0${O?"-0":""}`:W?B=`>=${B}`:B=`>=${B}${O?"-0":""}`,A(pe)?ne="":A(te)?ne=`<${+pe+1}.0.0-0`:A(fe)?ne=`<${pe}.${+te+1}.0-0`:Pe?ne=`<=${pe}.${te}.${fe}-${Pe}`:O?ne=`<${pe}.${te}.${+fe+1}-0`:ne=`<=${ne}`,`${B} ${ne}`.trim()),G=(O,U,B)=>{for(let z=0;z<O.length;z++)if(!O[z].test(U))return!1;if(U.prerelease.length&&!B.includePrerelease){for(let z=0;z<O.length;z++)if(l(O[z].semver),O[z].semver!==c.ANY&&O[z].semver.prerelease.length>0){const F=O[z].semver;if(F.major===U.major&&F.minor===U.minor&&F.patch===U.patch)return!0}return!1}return!0}},1630:(T,b,s)=>{const f=s(4903),{MAX_LENGTH:i,MAX_SAFE_INTEGER:r}=s(3325),{re:p,t:c}=s(3259),l=s(349),{compareIdentifiers:o}=s(7342);class u{constructor(n,h){if(h=l(h),n instanceof u){if(n.loose===!!h.loose&&n.includePrerelease===!!h.includePrerelease)return n;n=n.version}else if(typeof n!="string")throw new TypeError(`Invalid Version: ${n}`);if(n.length>i)throw new TypeError(`version is longer than ${i} characters`);f("SemVer",n,h),this.options=h,this.loose=!!h.loose,this.includePrerelease=!!h.includePrerelease;const d=n.trim().match(h.loose?p[c.LOOSE]:p[c.FULL]);if(!d)throw new TypeError(`Invalid Version: ${n}`);if(this.raw=n,this.major=+d[1],this.minor=+d[2],this.patch=+d[3],this.major>r||this.major<0)throw new TypeError("Invalid major version");if(this.minor>r||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>r||this.patch<0)throw new TypeError("Invalid patch version");d[4]?this.prerelease=d[4].split(".").map(g=>{if(/^[0-9]+$/.test(g)){const v=+g;if(v>=0&&v<r)return v}return g}):this.prerelease=[],this.build=d[5]?d[5].split("."):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(n){if(f("SemVer.compare",this.version,this.options,n),!(n instanceof u)){if(typeof n=="string"&&n===this.version)return 0;n=new u(n,this.options)}return n.version===this.version?0:this.compareMain(n)||this.comparePre(n)}compareMain(n){return n instanceof u||(n=new u(n,this.options)),o(this.major,n.major)||o(this.minor,n.minor)||o(this.patch,n.patch)}comparePre(n){if(n instanceof u||(n=new u(n,this.options)),this.prerelease.length&&!n.prerelease.length)return-1;if(!this.prerelease.length&&n.prerelease.length)return 1;if(!this.prerelease.length&&!n.prerelease.length)return 0;let h=0;do{const d=this.prerelease[h],g=n.prerelease[h];if(f("prerelease compare",h,d,g),d===void 0&&g===void 0)return 0;if(g===void 0)return 1;if(d===void 0)return-1;if(d===g)continue;return o(d,g)}while(++h)}compareBuild(n){n instanceof u||(n=new u(n,this.options));let h=0;do{const d=this.build[h],g=n.build[h];if(f("prerelease compare",h,d,g),d===void 0&&g===void 0)return 0;if(g===void 0)return 1;if(d===void 0)return-1;if(d===g)continue;return o(d,g)}while(++h)}inc(n,h){switch(n){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",h);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",h);break;case"prepatch":this.prerelease.length=0,this.inc("patch",h),this.inc("pre",h);break;case"prerelease":this.prerelease.length===0&&this.inc("patch",h),this.inc("pre",h);break;case"major":(this.minor!==0||this.patch!==0||this.prerelease.length===0)&&this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":(this.patch!==0||this.prerelease.length===0)&&this.minor++,this.patch=0,this.prerelease=[];break;case"patch":this.prerelease.length===0&&this.patch++,this.prerelease=[];break;case"pre":if(this.prerelease.length===0)this.prerelease=[0];else{let d=this.prerelease.length;for(;--d>=0;)typeof this.prerelease[d]=="number"&&(this.prerelease[d]++,d=-2);d===-1&&this.prerelease.push(0)}h&&(o(this.prerelease[0],h)===0?isNaN(this.prerelease[1])&&(this.prerelease=[h,0]):this.prerelease=[h,0]);break;default:throw new Error(`invalid increment argument: ${n}`)}return this.format(),this.raw=this.version,this}}T.exports=u},7200:(T,b,s)=>{const f=s(8216),i=(r,p)=>{const c=f(r.trim().replace(/^[=v]+/,""),p);return c?c.version:null};T.exports=i},5609:(T,b,s)=>{const f=s(4594),i=s(3228),r=s(145),p=s(9778),c=s(5429),l=s(7888),o=(u,m,n,h)=>{switch(m){case"===":return typeof u=="object"&&(u=u.version),typeof n=="object"&&(n=n.version),u===n;case"!==":return typeof u=="object"&&(u=u.version),typeof n=="object"&&(n=n.version),u!==n;case"":case"=":case"==":return f(u,n,h);case"!=":return i(u,n,h);case">":return r(u,n,h);case">=":return p(u,n,h);case"<":return c(u,n,h);case"<=":return l(u,n,h);default:throw new TypeError(`Invalid operator: ${m}`)}};T.exports=o},9485:(T,b,s)=>{const f=s(1630),i=s(8216),{re:r,t:p}=s(3259),c=(l,o)=>{if(l instanceof f)return l;if(typeof l=="number"&&(l=String(l)),typeof l!="string")return null;o=o||{};let u=null;if(!o.rtl)u=l.match(r[p.COERCE]);else{let m;for(;(m=r[p.COERCERTL].exec(l))&&(!u||u.index+u[0].length!==l.length);)(!u||m.index+m[0].length!==u.index+u[0].length)&&(u=m),r[p.COERCERTL].lastIndex=m.index+m[1].length+m[2].length;r[p.COERCERTL].lastIndex=-1}return u===null?null:i(`${u[2]}.${u[3]||"0"}.${u[4]||"0"}`,o)};T.exports=c},7548:(T,b,s)=>{const f=s(1630),i=(r,p,c)=>{const l=new f(r,c),o=new f(p,c);return l.compare(o)||l.compareBuild(o)};T.exports=i},7317:(T,b,s)=>{const f=s(9123),i=(r,p)=>f(r,p,!0);T.exports=i},9123:(T,b,s)=>{const f=s(1630),i=(r,p,c)=>new f(r,c).compare(new f(p,c));T.exports=i},3444:(T,b,s)=>{const f=s(8216),i=s(4594),r=(p,c)=>{if(i(p,c))return null;{const l=f(p),o=f(c),u=l.prerelease.length||o.prerelease.length,m=u?"pre":"",n=u?"prerelease":"";for(const h in l)if((h==="major"||h==="minor"||h==="patch")&&l[h]!==o[h])return m+h;return n}};T.exports=r},4594:(T,b,s)=>{const f=s(9123),i=(r,p,c)=>f(r,p,c)===0;T.exports=i},145:(T,b,s)=>{const f=s(9123),i=(r,p,c)=>f(r,p,c)>0;T.exports=i},9778:(T,b,s)=>{const f=s(9123),i=(r,p,c)=>f(r,p,c)>=0;T.exports=i},288:(T,b,s)=>{const f=s(1630),i=(r,p,c,l)=>{typeof c=="string"&&(l=c,c=void 0);try{return new f(r instanceof f?r.version:r,c).inc(p,l).version}catch(o){return null}};T.exports=i},5429:(T,b,s)=>{const f=s(9123),i=(r,p,c)=>f(r,p,c)<0;T.exports=i},7888:(T,b,s)=>{const f=s(9123),i=(r,p,c)=>f(r,p,c)<=0;T.exports=i},5254:(T,b,s)=>{const f=s(1630),i=(r,p)=>new f(r,p).major;T.exports=i},9887:(T,b,s)=>{const f=s(1630),i=(r,p)=>new f(r,p).minor;T.exports=i},3228:(T,b,s)=>{const f=s(9123),i=(r,p,c)=>f(r,p,c)!==0;T.exports=i},8216:(T,b,s)=>{const{MAX_LENGTH:f}=s(3325),{re:i,t:r}=s(3259),p=s(1630),c=s(349),l=(o,u)=>{if(u=c(u),o instanceof p)return o;if(typeof o!="string"||o.length>f||!(u.loose?i[r.LOOSE]:i[r.FULL]).test(o))return null;try{return new p(o,u)}catch(n){return null}};T.exports=l},8571:(T,b,s)=>{const f=s(1630),i=(r,p)=>new f(r,p).patch;T.exports=i},2115:(T,b,s)=>{const f=s(8216),i=(r,p)=>{const c=f(r,p);return c&&c.prerelease.length?c.prerelease:null};T.exports=i},6822:(T,b,s)=>{const f=s(9123),i=(r,p,c)=>f(p,r,c);T.exports=i},2490:(T,b,s)=>{const f=s(7548),i=(r,p)=>r.sort((c,l)=>f(l,c,p));T.exports=i},5374:(T,b,s)=>{const f=s(1459),i=(r,p,c)=>{try{p=new f(p,c)}catch(l){return!1}return p.test(r)};T.exports=i},6401:(T,b,s)=>{const f=s(7548),i=(r,p)=>r.sort((c,l)=>f(c,l,p));T.exports=i},5665:(T,b,s)=>{const f=s(8216),i=(r,p)=>{const c=f(r,p);return c?c.version:null};T.exports=i},7154:(T,b,s)=>{const f=s(3259),i=s(3325),r=s(1630),p=s(7342),c=s(8216),l=s(5665),o=s(7200),u=s(288),m=s(3444),n=s(5254),h=s(9887),d=s(8571),g=s(2115),v=s(9123),y=s(6822),P=s(7317),A=s(7548),E=s(6401),C=s(2490),_=s(145),R=s(5429),j=s(4594),D=s(3228),k=s(9778),x=s(7888),I=s(5609),G=s(9485),O=s(8325),U=s(1459),B=s(5374),z=s(6607),F=s(7530),K=s(7527),W=s(1346),re=s(3478),ne=s(841),pe=s(8951),te=s(4666),fe=s(6024),Pe=s(2277),Le=s(8784);T.exports={parse:c,valid:l,clean:o,inc:u,diff:m,major:n,minor:h,patch:d,prerelease:g,compare:v,rcompare:y,compareLoose:P,compareBuild:A,sort:E,rsort:C,gt:_,lt:R,eq:j,neq:D,gte:k,lte:x,cmp:I,coerce:G,Comparator:O,Range:U,satisfies:B,toComparators:z,maxSatisfying:F,minSatisfying:K,minVersion:W,validRange:re,outside:ne,gtr:pe,ltr:te,intersects:fe,simplifyRange:Pe,subset:Le,SemVer:r,re:f.re,src:f.src,tokens:f.t,SEMVER_SPEC_VERSION:i.SEMVER_SPEC_VERSION,compareIdentifiers:p.compareIdentifiers,rcompareIdentifiers:p.rcompareIdentifiers}},3325:T=>{const b="2.0.0",f=Number.MAX_SAFE_INTEGER||9007199254740991,i=16;T.exports={SEMVER_SPEC_VERSION:b,MAX_LENGTH:256,MAX_SAFE_INTEGER:f,MAX_SAFE_COMPONENT_LENGTH:i}},4903:T=>{const b=typeof process=="object"&&process.env&&process.env.NODE_DEBUG&&/\bsemver\b/i.test(process.env.NODE_DEBUG)?(...s)=>console.error("SEMVER",...s):()=>{};T.exports=b},7342:T=>{const b=/^[0-9]+$/,s=(i,r)=>{const p=b.test(i),c=b.test(r);return p&&c&&(i=+i,r=+r),i===r?0:p&&!c?-1:c&&!p?1:i<r?-1:1},f=(i,r)=>s(r,i);T.exports={compareIdentifiers:s,rcompareIdentifiers:f}},349:T=>{const b=["includePrerelease","loose","rtl"],s=f=>f?typeof f!="object"?{loose:!0}:b.filter(i=>f[i]).reduce((i,r)=>(i[r]=!0,i),{}):{};T.exports=s},3259:(T,b,s)=>{const{MAX_SAFE_COMPONENT_LENGTH:f}=s(3325),i=s(4903);b=T.exports={};const r=b.re=[],p=b.src=[],c=b.t={};let l=0;const o=(u,m,n)=>{const h=l++;i(u,h,m),c[u]=h,p[h]=m,r[h]=new RegExp(m,n?"g":void 0)};o("NUMERICIDENTIFIER","0|[1-9]\\d*"),o("NUMERICIDENTIFIERLOOSE","[0-9]+"),o("NONNUMERICIDENTIFIER","\\d*[a-zA-Z-][a-zA-Z0-9-]*"),o("MAINVERSION",`(${p[c.NUMERICIDENTIFIER]})\\.(${p[c.NUMERICIDENTIFIER]})\\.(${p[c.NUMERICIDENTIFIER]})`),o("MAINVERSIONLOOSE",`(${p[c.NUMERICIDENTIFIERLOOSE]})\\.(${p[c.NUMERICIDENTIFIERLOOSE]})\\.(${p[c.NUMERICIDENTIFIERLOOSE]})`),o("PRERELEASEIDENTIFIER",`(?:${p[c.NUMERICIDENTIFIER]}|${p[c.NONNUMERICIDENTIFIER]})`),o("PRERELEASEIDENTIFIERLOOSE",`(?:${p[c.NUMERICIDENTIFIERLOOSE]}|${p[c.NONNUMERICIDENTIFIER]})`),o("PRERELEASE",`(?:-(${p[c.PRERELEASEIDENTIFIER]}(?:\\.${p[c.PRERELEASEIDENTIFIER]})*))`),o("PRERELEASELOOSE",`(?:-?(${p[c.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${p[c.PRERELEASEIDENTIFIERLOOSE]})*))`),o("BUILDIDENTIFIER","[0-9A-Za-z-]+"),o("BUILD",`(?:\\+(${p[c.BUILDIDENTIFIER]}(?:\\.${p[c.BUILDIDENTIFIER]})*))`),o("FULLPLAIN",`v?${p[c.MAINVERSION]}${p[c.PRERELEASE]}?${p[c.BUILD]}?`),o("FULL",`^${p[c.FULLPLAIN]}$`),o("LOOSEPLAIN",`[v=\\s]*${p[c.MAINVERSIONLOOSE]}${p[c.PRERELEASELOOSE]}?${p[c.BUILD]}?`),o("LOOSE",`^${p[c.LOOSEPLAIN]}$`),o("GTLT","((?:<|>)?=?)"),o("XRANGEIDENTIFIERLOOSE",`${p[c.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),o("XRANGEIDENTIFIER",`${p[c.NUMERICIDENTIFIER]}|x|X|\\*`),o("XRANGEPLAIN",`[v=\\s]*(${p[c.XRANGEIDENTIFIER]})(?:\\.(${p[c.XRANGEIDENTIFIER]})(?:\\.(${p[c.XRANGEIDENTIFIER]})(?:${p[c.PRERELEASE]})?${p[c.BUILD]}?)?)?`),o("XRANGEPLAINLOOSE",`[v=\\s]*(${p[c.XRANGEIDENTIFIERLOOSE]})(?:\\.(${p[c.XRANGEIDENTIFIERLOOSE]})(?:\\.(${p[c.XRANGEIDENTIFIERLOOSE]})(?:${p[c.PRERELEASELOOSE]})?${p[c.BUILD]}?)?)?`),o("XRANGE",`^${p[c.GTLT]}\\s*${p[c.XRANGEPLAIN]}$`),o("XRANGELOOSE",`^${p[c.GTLT]}\\s*${p[c.XRANGEPLAINLOOSE]}$`),o("COERCE",`(^|[^\\d])(\\d{1,${f}})(?:\\.(\\d{1,${f}}))?(?:\\.(\\d{1,${f}}))?(?:$|[^\\d])`),o("COERCERTL",p[c.COERCE],!0),o("LONETILDE","(?:~>?)"),o("TILDETRIM",`(\\s*)${p[c.LONETILDE]}\\s+`,!0),b.tildeTrimReplace="$1~",o("TILDE",`^${p[c.LONETILDE]}${p[c.XRANGEPLAIN]}$`),o("TILDELOOSE",`^${p[c.LONETILDE]}${p[c.XRANGEPLAINLOOSE]}$`),o("LONECARET","(?:\\^)"),o("CARETTRIM",`(\\s*)${p[c.LONECARET]}\\s+`,!0),b.caretTrimReplace="$1^",o("CARET",`^${p[c.LONECARET]}${p[c.XRANGEPLAIN]}$`),o("CARETLOOSE",`^${p[c.LONECARET]}${p[c.XRANGEPLAINLOOSE]}$`),o("COMPARATORLOOSE",`^${p[c.GTLT]}\\s*(${p[c.LOOSEPLAIN]})$|^$`),o("COMPARATOR",`^${p[c.GTLT]}\\s*(${p[c.FULLPLAIN]})$|^$`),o("COMPARATORTRIM",`(\\s*)${p[c.GTLT]}\\s*(${p[c.LOOSEPLAIN]}|${p[c.XRANGEPLAIN]})`,!0),b.comparatorTrimReplace="$1$2$3",o("HYPHENRANGE",`^\\s*(${p[c.XRANGEPLAIN]})\\s+-\\s+(${p[c.XRANGEPLAIN]})\\s*$`),o("HYPHENRANGELOOSE",`^\\s*(${p[c.XRANGEPLAINLOOSE]})\\s+-\\s+(${p[c.XRANGEPLAINLOOSE]})\\s*$`),o("STAR","(<|>)?=?\\s*\\*"),o("GTE0","^\\s*>=\\s*0\\.0\\.0\\s*$"),o("GTE0PRE","^\\s*>=\\s*0\\.0\\.0-0\\s*$")},8951:(T,b,s)=>{const f=s(841),i=(r,p,c)=>f(r,p,">",c);T.exports=i},6024:(T,b,s)=>{const f=s(1459),i=(r,p,c)=>(r=new f(r,c),p=new f(p,c),r.intersects(p));T.exports=i},4666:(T,b,s)=>{const f=s(841),i=(r,p,c)=>f(r,p,"<",c);T.exports=i},7530:(T,b,s)=>{const f=s(1630),i=s(1459),r=(p,c,l)=>{let o=null,u=null,m=null;try{m=new i(c,l)}catch(n){return null}return p.forEach(n=>{m.test(n)&&(!o||u.compare(n)===-1)&&(o=n,u=new f(o,l))}),o};T.exports=r},7527:(T,b,s)=>{const f=s(1630),i=s(1459),r=(p,c,l)=>{let o=null,u=null,m=null;try{m=new i(c,l)}catch(n){return null}return p.forEach(n=>{m.test(n)&&(!o||u.compare(n)===1)&&(o=n,u=new f(o,l))}),o};T.exports=r},1346:(T,b,s)=>{const f=s(1630),i=s(1459),r=s(145),p=(c,l)=>{c=new i(c,l);let o=new f("0.0.0");if(c.test(o)||(o=new f("0.0.0-0"),c.test(o)))return o;o=null;for(let u=0;u<c.set.length;++u){const m=c.set[u];let n=null;m.forEach(h=>{const d=new f(h.semver.version);switch(h.operator){case">":d.prerelease.length===0?d.patch++:d.prerelease.push(0),d.raw=d.format();case"":case">=":(!n||r(d,n))&&(n=d);break;case"<":case"<=":break;default:throw new Error(`Unexpected operation: ${h.operator}`)}}),n&&(!o||r(o,n))&&(o=n)}return o&&c.test(o)?o:null};T.exports=p},841:(T,b,s)=>{const f=s(1630),i=s(8325),{ANY:r}=i,p=s(1459),c=s(5374),l=s(145),o=s(5429),u=s(7888),m=s(9778),n=(h,d,g,v)=>{h=new f(h,v),d=new p(d,v);let y,P,A,E,C;switch(g){case">":y=l,P=u,A=o,E=">",C=">=";break;case"<":y=o,P=m,A=l,E="<",C="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(c(h,d,v))return!1;for(let _=0;_<d.set.length;++_){const R=d.set[_];let j=null,D=null;if(R.forEach(k=>{k.semver===r&&(k=new i(">=0.0.0")),j=j||k,D=D||k,y(k.semver,j.semver,v)?j=k:A(k.semver,D.semver,v)&&(D=k)}),j.operator===E||j.operator===C||(!D.operator||D.operator===E)&&P(h,D.semver))return!1;if(D.operator===C&&A(h,D.semver))return!1}return!0};T.exports=n},2277:(T,b,s)=>{const f=s(5374),i=s(9123);T.exports=(r,p,c)=>{const l=[];let o=null,u=null;const m=r.sort((g,v)=>i(g,v,c));for(const g of m)f(g,p,c)?(u=g,o||(o=g)):(u&&l.push([o,u]),u=null,o=null);o&&l.push([o,null]);const n=[];for(const[g,v]of l)g===v?n.push(g):!v&&g===m[0]?n.push("*"):v?g===m[0]?n.push(`<=${v}`):n.push(`${g} - ${v}`):n.push(`>=${g}`);const h=n.join(" || "),d=typeof p.raw=="string"?p.raw:String(p);return h.length<d.length?h:p}},8784:(T,b,s)=>{const f=s(1459),i=s(8325),{ANY:r}=i,p=s(5374),c=s(9123),l=(n,h,d={})=>{if(n===h)return!0;n=new f(n,d),h=new f(h,d);let g=!1;e:for(const v of n.set){for(const y of h.set){const P=o(v,y,d);if(g=g||P!==null,P)continue e}if(g)return!1}return!0},o=(n,h,d)=>{if(n===h)return!0;if(n.length===1&&n[0].semver===r){if(h.length===1&&h[0].semver===r)return!0;d.includePrerelease?n=[new i(">=0.0.0-0")]:n=[new i(">=0.0.0")]}if(h.length===1&&h[0].semver===r){if(d.includePrerelease)return!0;h=[new i(">=0.0.0")]}const g=new Set;let v,y;for(const D of n)D.operator===">"||D.operator===">="?v=u(v,D,d):D.operator==="<"||D.operator==="<="?y=m(y,D,d):g.add(D.semver);if(g.size>1)return null;let P;if(v&&y){if(P=c(v.semver,y.semver,d),P>0)return null;if(P===0&&(v.operator!==">="||y.operator!=="<="))return null}for(const D of g){if(v&&!p(D,String(v),d)||y&&!p(D,String(y),d))return null;for(const k of h)if(!p(D,String(k),d))return!1;return!0}let A,E,C,_,R=y&&!d.includePrerelease&&y.semver.prerelease.length?y.semver:!1,j=v&&!d.includePrerelease&&v.semver.prerelease.length?v.semver:!1;R&&R.prerelease.length===1&&y.operator==="<"&&R.prerelease[0]===0&&(R=!1);for(const D of h){if(_=_||D.operator===">"||D.operator===">=",C=C||D.operator==="<"||D.operator==="<=",v){if(j&&D.semver.prerelease&&D.semver.prerelease.length&&D.semver.major===j.major&&D.semver.minor===j.minor&&D.semver.patch===j.patch&&(j=!1),D.operator===">"||D.operator===">="){if(A=u(v,D,d),A===D&&A!==v)return!1}else if(v.operator===">="&&!p(v.semver,String(D),d))return!1}if(y){if(R&&D.semver.prerelease&&D.semver.prerelease.length&&D.semver.major===R.major&&D.semver.minor===R.minor&&D.semver.patch===R.patch&&(R=!1),D.operator==="<"||D.operator==="<="){if(E=m(y,D,d),E===D&&E!==y)return!1}else if(y.operator==="<="&&!p(y.semver,String(D),d))return!1}if(!D.operator&&(y||v)&&P!==0)return!1}return!(v&&C&&!y&&P!==0||y&&_&&!v&&P!==0||j||R)},u=(n,h,d)=>{if(!n)return h;const g=c(n.semver,h.semver,d);return g>0?n:g<0||h.operator===">"&&n.operator===">="?h:n},m=(n,h,d)=>{if(!n)return h;const g=c(n.semver,h.semver,d);return g<0?n:g>0||h.operator==="<"&&n.operator==="<="?h:n};T.exports=l},6607:(T,b,s)=>{const f=s(1459),i=(r,p)=>new f(r,p).set.map(c=>c.map(l=>l.value).join(" ").trim().split(" "));T.exports=i},3478:(T,b,s)=>{const f=s(1459),i=(r,p)=>{try{return new f(r,p).range||"*"}catch(c){return null}};T.exports=i},45:T=>{"use strict";T.exports=function(b){b.prototype[Symbol.iterator]=function*(){for(let s=this.head;s;s=s.next)yield s.value}}},6049:(T,b,s)=>{"use strict";T.exports=f,f.Node=c,f.create=f;function f(l){var o=this;if(o instanceof f||(o=new f),o.tail=null,o.head=null,o.length=0,l&&typeof l.forEach=="function")l.forEach(function(n){o.push(n)});else if(arguments.length>0)for(var u=0,m=arguments.length;u<m;u++)o.push(arguments[u]);return o}f.prototype.removeNode=function(l){if(l.list!==this)throw new Error("removing node which does not belong to this list");var o=l.next,u=l.prev;return o&&(o.prev=u),u&&(u.next=o),l===this.head&&(this.head=o),l===this.tail&&(this.tail=u),l.list.length--,l.next=null,l.prev=null,l.list=null,o},f.prototype.unshiftNode=function(l){if(l!==this.head){l.list&&l.list.removeNode(l);var o=this.head;l.list=this,l.next=o,o&&(o.prev=l),this.head=l,this.tail||(this.tail=l),this.length++}},f.prototype.pushNode=function(l){if(l!==this.tail){l.list&&l.list.removeNode(l);var o=this.tail;l.list=this,l.prev=o,o&&(o.next=l),this.tail=l,this.head||(this.head=l),this.length++}},f.prototype.push=function(){for(var l=0,o=arguments.length;l<o;l++)r(this,arguments[l]);return this.length},f.prototype.unshift=function(){for(var l=0,o=arguments.length;l<o;l++)p(this,arguments[l]);return this.length},f.prototype.pop=function(){if(!!this.tail){var l=this.tail.value;return this.tail=this.tail.prev,this.tail?this.tail.next=null:this.head=null,this.length--,l}},f.prototype.shift=function(){if(!!this.head){var l=this.head.value;return this.head=this.head.next,this.head?this.head.prev=null:this.tail=null,this.length--,l}},f.prototype.forEach=function(l,o){o=o||this;for(var u=this.head,m=0;u!==null;m++)l.call(o,u.value,m,this),u=u.next},f.prototype.forEachReverse=function(l,o){o=o||this;for(var u=this.tail,m=this.length-1;u!==null;m--)l.call(o,u.value,m,this),u=u.prev},f.prototype.get=function(l){for(var o=0,u=this.head;u!==null&&o<l;o++)u=u.next;if(o===l&&u!==null)return u.value},f.prototype.getReverse=function(l){for(var o=0,u=this.tail;u!==null&&o<l;o++)u=u.prev;if(o===l&&u!==null)return u.value},f.prototype.map=function(l,o){o=o||this;for(var u=new f,m=this.head;m!==null;)u.push(l.call(o,m.value,this)),m=m.next;return u},f.prototype.mapReverse=function(l,o){o=o||this;for(var u=new f,m=this.tail;m!==null;)u.push(l.call(o,m.value,this)),m=m.prev;return u},f.prototype.reduce=function(l,o){var u,m=this.head;if(arguments.length>1)u=o;else if(this.head)m=this.head.next,u=this.head.value;else throw new TypeError("Reduce of empty list with no initial value");for(var n=0;m!==null;n++)u=l(u,m.value,n),m=m.next;return u},f.prototype.reduceReverse=function(l,o){var u,m=this.tail;if(arguments.length>1)u=o;else if(this.tail)m=this.tail.prev,u=this.tail.value;else throw new TypeError("Reduce of empty list with no initial value");for(var n=this.length-1;m!==null;n--)u=l(u,m.value,n),m=m.prev;return u},f.prototype.toArray=function(){for(var l=new Array(this.length),o=0,u=this.head;u!==null;o++)l[o]=u.value,u=u.next;return l},f.prototype.toArrayReverse=function(){for(var l=new Array(this.length),o=0,u=this.tail;u!==null;o++)l[o]=u.value,u=u.prev;return l},f.prototype.slice=function(l,o){o=o||this.length,o<0&&(o+=this.length),l=l||0,l<0&&(l+=this.length);var u=new f;if(o<l||o<0)return u;l<0&&(l=0),o>this.length&&(o=this.length);for(var m=0,n=this.head;n!==null&&m<l;m++)n=n.next;for(;n!==null&&m<o;m++,n=n.next)u.push(n.value);return u},f.prototype.sliceReverse=function(l,o){o=o||this.length,o<0&&(o+=this.length),l=l||0,l<0&&(l+=this.length);var u=new f;if(o<l||o<0)return u;l<0&&(l=0),o>this.length&&(o=this.length);for(var m=this.length,n=this.tail;n!==null&&m>o;m--)n=n.prev;for(;n!==null&&m>l;m--,n=n.prev)u.push(n.value);return u},f.prototype.splice=function(l,o,...u){l>this.length&&(l=this.length-1),l<0&&(l=this.length+l);for(var m=0,n=this.head;n!==null&&m<l;m++)n=n.next;for(var h=[],m=0;n&&m<o;m++)h.push(n.value),n=this.removeNode(n);n===null&&(n=this.tail),n!==this.head&&n!==this.tail&&(n=n.prev);for(var m=0;m<u.length;m++)n=i(this,n,u[m]);return h},f.prototype.reverse=function(){for(var l=this.head,o=this.tail,u=l;u!==null;u=u.prev){var m=u.prev;u.prev=u.next,u.next=m}return this.head=o,this.tail=l,this};function i(l,o,u){var m=o===l.head?new c(u,null,o,l):new c(u,o,o.next,l);return m.next===null&&(l.tail=m),m.prev===null&&(l.head=m),l.length++,m}function r(l,o){l.tail=new c(o,l.tail,null,l),l.head||(l.head=l.tail),l.length++}function p(l,o){l.head=new c(o,null,l.head,l),l.tail||(l.tail=l.head),l.length++}function c(l,o,u,m){if(!(this instanceof c))return new c(l,o,u,m);this.list=m,this.value=l,o?(o.next=this,this.prev=o):this.prev=null,u?(u.prev=this,this.next=u):this.next=null}try{s(45)(f)}catch(l){}},9737:()=>{+function(T){"use strict";var b=".dropdown-backdrop",s='[data-toggle="dropdown"]',f=function(l){T(l).on("click.bs.dropdown",this.toggle)};f.VERSION="3.4.1";function i(l){var o=l.attr("data-target");o||(o=l.attr("href"),o=o&&/#[A-Za-z]/.test(o)&&o.replace(/.*(?=#[^\s]*$)/,""));var u=o!=="#"?T(document).find(o):null;return u&&u.length?u:l.parent()}function r(l){l&&l.which===3||(T(b).remove(),T(s).each(function(){var o=T(this),u=i(o),m={relatedTarget:this};!u.hasClass("open")||l&&l.type=="click"&&/input|textarea/i.test(l.target.tagName)&&T.contains(u[0],l.target)||(u.trigger(l=T.Event("hide.bs.dropdown",m)),!l.isDefaultPrevented()&&(o.attr("aria-expanded","false"),u.removeClass("open").trigger(T.Event("hidden.bs.dropdown",m))))}))}f.prototype.toggle=function(l){var o=T(this);if(!o.is(".disabled, :disabled")){var u=i(o),m=u.hasClass("open");if(r(),!m){"ontouchstart"in document.documentElement&&!u.closest(".navbar-nav").length&&T(document.createElement("div")).addClass("dropdown-backdrop").insertAfter(T(this)).on("click",r);var n={relatedTarget:this};if(u.trigger(l=T.Event("show.bs.dropdown",n)),l.isDefaultPrevented())return;o.trigger("focus").attr("aria-expanded","true"),u.toggleClass("open").trigger(T.Event("shown.bs.dropdown",n))}return!1}},f.prototype.keydown=function(l){if(!(!/(38|40|27|32)/.test(l.which)||/input|textarea/i.test(l.target.tagName))){var o=T(this);if(l.preventDefault(),l.stopPropagation(),!o.is(".disabled, :disabled")){var u=i(o),m=u.hasClass("open");if(!m&&l.which!=27||m&&l.which==27)return l.which==27&&u.find(s).trigger("focus"),o.trigger("click");var n=" li:not(.disabled):visible a",h=u.find(".dropdown-menu"+n);if(!!h.length){var d=h.index(l.target);l.which==38&&d>0&&d--,l.which==40&&d<h.length-1&&d++,~d||(d=0),h.eq(d).trigger("focus")}}}};function p(l){return this.each(function(){var o=T(this),u=o.data("bs.dropdown");u||o.data("bs.dropdown",u=new f(this)),typeof l=="string"&&u[l].call(o)})}var c=T.fn.dropdown;T.fn.dropdown=p,T.fn.dropdown.Constructor=f,T.fn.dropdown.noConflict=function(){return T.fn.dropdown=c,this},T(document).on("click.bs.dropdown.data-api",r).on("click.bs.dropdown.data-api",".dropdown form",function(l){l.stopPropagation()}).on("click.bs.dropdown.data-api",s,f.prototype.toggle).on("keydown.bs.dropdown.data-api",s,f.prototype.keydown).on("keydown.bs.dropdown.data-api",".dropdown-menu",f.prototype.keydown)}(jQuery)},6927:()=>{+function(T){"use strict";var b=function(i,r){this.init("popover",i,r)};if(!T.fn.tooltip)throw new Error("Popover requires tooltip.js");b.VERSION="3.4.1",b.DEFAULTS=T.extend({},T.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),b.prototype=T.extend({},T.fn.tooltip.Constructor.prototype),b.prototype.constructor=b,b.prototype.getDefaults=function(){return b.DEFAULTS},b.prototype.setContent=function(){var i=this.tip(),r=this.getTitle(),p=this.getContent();if(this.options.html){var c=typeof p;this.options.sanitize&&(r=this.sanitizeHtml(r),c==="string"&&(p=this.sanitizeHtml(p))),i.find(".popover-title").html(r),i.find(".popover-content").children().detach().end()[c==="string"?"html":"append"](p)}else i.find(".popover-title").text(r),i.find(".popover-content").children().detach().end().text(p);i.removeClass("fade top bottom left right in"),i.find(".popover-title").html()||i.find(".popover-title").hide()},b.prototype.hasContent=function(){return this.getTitle()||this.getContent()},b.prototype.getContent=function(){var i=this.$element,r=this.options;return i.attr("data-content")||(typeof r.content=="function"?r.content.call(i[0]):r.content)},b.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")};function s(i){return this.each(function(){var r=T(this),p=r.data("bs.popover"),c=typeof i=="object"&&i;!p&&/destroy|hide/.test(i)||(p||r.data("bs.popover",p=new b(this,c)),typeof i=="string"&&p[i]())})}var f=T.fn.popover;T.fn.popover=s,T.fn.popover.Constructor=b,T.fn.popover.noConflict=function(){return T.fn.popover=f,this}}(jQuery)},3497:()=>{+function(T){"use strict";function b(i,r){this.$body=T(document.body),this.$scrollElement=T(i).is(document.body)?T(window):T(i),this.options=T.extend({},b.DEFAULTS,r),this.selector=(this.options.target||"")+" .nav li > a",this.offsets=[],this.targets=[],this.activeTarget=null,this.scrollHeight=0,this.$scrollElement.on("scroll.bs.scrollspy",T.proxy(this.process,this)),this.refresh(),this.process()}b.VERSION="3.4.1",b.DEFAULTS={offset:10},b.prototype.getScrollHeight=function(){return this.$scrollElement[0].scrollHeight||Math.max(this.$body[0].scrollHeight,document.documentElement.scrollHeight)},b.prototype.refresh=function(){var i=this,r="offset",p=0;this.offsets=[],this.targets=[],this.scrollHeight=this.getScrollHeight(),T.isWindow(this.$scrollElement[0])||(r="position",p=this.$scrollElement.scrollTop()),this.$body.find(this.selector).map(function(){var c=T(this),l=c.data("target")||c.attr("href"),o=/^#./.test(l)&&T(l);return o&&o.length&&o.is(":visible")&&[[o[r]().top+p,l]]||null}).sort(function(c,l){return c[0]-l[0]}).each(function(){i.offsets.push(this[0]),i.targets.push(this[1])})},b.prototype.process=function(){var i=this.$scrollElement.scrollTop()+this.options.offset,r=this.getScrollHeight(),p=this.options.offset+r-this.$scrollElement.height(),c=this.offsets,l=this.targets,o=this.activeTarget,u;if(this.scrollHeight!=r&&this.refresh(),i>=p)return o!=(u=l[l.length-1])&&this.activate(u);if(o&&i<c[0])return this.activeTarget=null,this.clear();for(u=c.length;u--;)o!=l[u]&&i>=c[u]&&(c[u+1]===void 0||i<c[u+1])&&this.activate(l[u])},b.prototype.activate=function(i){this.activeTarget=i,this.clear();var r=this.selector+'[data-target="'+i+'"],'+this.selector+'[href="'+i+'"]',p=T(r).parents("li").addClass("active");p.parent(".dropdown-menu").length&&(p=p.closest("li.dropdown").addClass("active")),p.trigger("activate.bs.scrollspy")},b.prototype.clear=function(){T(this.selector).parentsUntil(this.options.target,".active").removeClass("active")};function s(i){return this.each(function(){var r=T(this),p=r.data("bs.scrollspy"),c=typeof i=="object"&&i;p||r.data("bs.scrollspy",p=new b(this,c)),typeof i=="string"&&p[i]()})}var f=T.fn.scrollspy;T.fn.scrollspy=s,T.fn.scrollspy.Constructor=b,T.fn.scrollspy.noConflict=function(){return T.fn.scrollspy=f,this},T(window).on("load.bs.scrollspy.data-api",function(){T('[data-spy="scroll"]').each(function(){var i=T(this);s.call(i,i.data())})})}(jQuery)},7814:()=>{+function(T){"use strict";var b=function(r){this.element=T(r)};b.VERSION="3.4.1",b.TRANSITION_DURATION=150,b.prototype.show=function(){var r=this.element,p=r.closest("ul:not(.dropdown-menu)"),c=r.data("target");if(c||(c=r.attr("href"),c=c&&c.replace(/.*(?=#[^\s]*$)/,"")),!r.parent("li").hasClass("active")){var l=p.find(".active:last a"),o=T.Event("hide.bs.tab",{relatedTarget:r[0]}),u=T.Event("show.bs.tab",{relatedTarget:l[0]});if(l.trigger(o),r.trigger(u),!(u.isDefaultPrevented()||o.isDefaultPrevented())){var m=T(document).find(c);this.activate(r.closest("li"),p),this.activate(m,m.parent(),function(){l.trigger({type:"hidden.bs.tab",relatedTarget:r[0]}),r.trigger({type:"shown.bs.tab",relatedTarget:l[0]})})}}},b.prototype.activate=function(r,p,c){var l=p.find("> .active"),o=c&&T.support.transition&&(l.length&&l.hasClass("fade")||!!p.find("> .fade").length);function u(){l.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!1),r.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded",!0),o?(r[0].offsetWidth,r.addClass("in")):r.removeClass("fade"),r.parent(".dropdown-menu").length&&r.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!0),c&&c()}l.length&&o?l.one("bsTransitionEnd",u).emulateTransitionEnd(b.TRANSITION_DURATION):u(),l.removeClass("in")};function s(r){return this.each(function(){var p=T(this),c=p.data("bs.tab");c||p.data("bs.tab",c=new b(this)),typeof r=="string"&&c[r]()})}var f=T.fn.tab;T.fn.tab=s,T.fn.tab.Constructor=b,T.fn.tab.noConflict=function(){return T.fn.tab=f,this};var i=function(r){r.preventDefault(),s.call(T(this),"show")};T(document).on("click.bs.tab.data-api",'[data-toggle="tab"]',i).on("click.bs.tab.data-api",'[data-toggle="pill"]',i)}(jQuery)},6278:()=>{+function(T){"use strict";var b=["sanitize","whiteList","sanitizeFn"],s=["background","cite","href","itemtype","longdesc","poster","src","xlink:href"],f=/^aria-[\w-]*$/i,i={"*":["class","dir","id","lang","role",f],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]},r=/^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi,p=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i;function c(n,h){var d=n.nodeName.toLowerCase();if(T.inArray(d,h)!==-1)return T.inArray(d,s)!==-1?Boolean(n.nodeValue.match(r)||n.nodeValue.match(p)):!0;for(var g=T(h).filter(function(P,A){return A instanceof RegExp}),v=0,y=g.length;v<y;v++)if(d.match(g[v]))return!0;return!1}function l(n,h,d){if(n.length===0)return n;if(d&&typeof d=="function")return d(n);if(!document.implementation||!document.implementation.createHTMLDocument)return n;var g=document.implementation.createHTMLDocument("sanitization");g.body.innerHTML=n;for(var v=T.map(h,function(k,x){return x}),y=T(g.body).find("*"),P=0,A=y.length;P<A;P++){var E=y[P],C=E.nodeName.toLowerCase();if(T.inArray(C,v)===-1){E.parentNode.removeChild(E);continue}for(var _=T.map(E.attributes,function(k){return k}),R=[].concat(h["*"]||[],h[C]||[]),j=0,D=_.length;j<D;j++)c(_[j],R)||E.removeAttribute(_[j].nodeName)}return g.body.innerHTML}var o=function(n,h){this.type=null,this.options=null,this.enabled=null,this.timeout=null,this.hoverState=null,this.$element=null,this.inState=null,this.init("tooltip",n,h)};o.VERSION="3.4.1",o.TRANSITION_DURATION=150,o.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1,viewport:{selector:"body",padding:0},sanitize:!0,sanitizeFn:null,whiteList:i},o.prototype.init=function(n,h,d){if(this.enabled=!0,this.type=n,this.$element=T(h),this.options=this.getOptions(d),this.$viewport=this.options.viewport&&T(document).find(T.isFunction(this.options.viewport)?this.options.viewport.call(this,this.$element):this.options.viewport.selector||this.options.viewport),this.inState={click:!1,hover:!1,focus:!1},this.$element[0]instanceof document.constructor&&!this.options.selector)throw new Error("`selector` option must be specified when initializing "+this.type+" on the window.document object!");for(var g=this.options.trigger.split(" "),v=g.length;v--;){var y=g[v];if(y=="click")this.$element.on("click."+this.type,this.options.selector,T.proxy(this.toggle,this));else if(y!="manual"){var P=y=="hover"?"mouseenter":"focusin",A=y=="hover"?"mouseleave":"focusout";this.$element.on(P+"."+this.type,this.options.selector,T.proxy(this.enter,this)),this.$element.on(A+"."+this.type,this.options.selector,T.proxy(this.leave,this))}}this.options.selector?this._options=T.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},o.prototype.getDefaults=function(){return o.DEFAULTS},o.prototype.getOptions=function(n){var h=this.$element.data();for(var d in h)h.hasOwnProperty(d)&&T.inArray(d,b)!==-1&&delete h[d];return n=T.extend({},this.getDefaults(),h,n),n.delay&&typeof n.delay=="number"&&(n.delay={show:n.delay,hide:n.delay}),n.sanitize&&(n.template=l(n.template,n.whiteList,n.sanitizeFn)),n},o.prototype.getDelegateOptions=function(){var n={},h=this.getDefaults();return this._options&&T.each(this._options,function(d,g){h[d]!=g&&(n[d]=g)}),n},o.prototype.enter=function(n){var h=n instanceof this.constructor?n:T(n.currentTarget).data("bs."+this.type);if(h||(h=new this.constructor(n.currentTarget,this.getDelegateOptions()),T(n.currentTarget).data("bs."+this.type,h)),n instanceof T.Event&&(h.inState[n.type=="focusin"?"focus":"hover"]=!0),h.tip().hasClass("in")||h.hoverState=="in"){h.hoverState="in";return}if(clearTimeout(h.timeout),h.hoverState="in",!h.options.delay||!h.options.delay.show)return h.show();h.timeout=setTimeout(function(){h.hoverState=="in"&&h.show()},h.options.delay.show)},o.prototype.isInStateTrue=function(){for(var n in this.inState)if(this.inState[n])return!0;return!1},o.prototype.leave=function(n){var h=n instanceof this.constructor?n:T(n.currentTarget).data("bs."+this.type);if(h||(h=new this.constructor(n.currentTarget,this.getDelegateOptions()),T(n.currentTarget).data("bs."+this.type,h)),n instanceof T.Event&&(h.inState[n.type=="focusout"?"focus":"hover"]=!1),!h.isInStateTrue()){if(clearTimeout(h.timeout),h.hoverState="out",!h.options.delay||!h.options.delay.hide)return h.hide();h.timeout=setTimeout(function(){h.hoverState=="out"&&h.hide()},h.options.delay.hide)}},o.prototype.show=function(){var n=T.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){this.$element.trigger(n);var h=T.contains(this.$element[0].ownerDocument.documentElement,this.$element[0]);if(n.isDefaultPrevented()||!h)return;var d=this,g=this.tip(),v=this.getUID(this.type);this.setContent(),g.attr("id",v),this.$element.attr("aria-describedby",v),this.options.animation&&g.addClass("fade");var y=typeof this.options.placement=="function"?this.options.placement.call(this,g[0],this.$element[0]):this.options.placement,P=/\s?auto?\s?/i,A=P.test(y);A&&(y=y.replace(P,"")||"top"),g.detach().css({top:0,left:0,display:"block"}).addClass(y).data("bs."+this.type,this),this.options.container?g.appendTo(T(document).find(this.options.container)):g.insertAfter(this.$element),this.$element.trigger("inserted.bs."+this.type);var E=this.getPosition(),C=g[0].offsetWidth,_=g[0].offsetHeight;if(A){var R=y,j=this.getPosition(this.$viewport);y=y=="bottom"&&E.bottom+_>j.bottom?"top":y=="top"&&E.top-_<j.top?"bottom":y=="right"&&E.right+C>j.width?"left":y=="left"&&E.left-C<j.left?"right":y,g.removeClass(R).addClass(y)}var D=this.getCalculatedOffset(y,E,C,_);this.applyPlacement(D,y);var k=function(){var x=d.hoverState;d.$element.trigger("shown.bs."+d.type),d.hoverState=null,x=="out"&&d.leave(d)};T.support.transition&&this.$tip.hasClass("fade")?g.one("bsTransitionEnd",k).emulateTransitionEnd(o.TRANSITION_DURATION):k()}},o.prototype.applyPlacement=function(n,h){var d=this.tip(),g=d[0].offsetWidth,v=d[0].offsetHeight,y=parseInt(d.css("margin-top"),10),P=parseInt(d.css("margin-left"),10);isNaN(y)&&(y=0),isNaN(P)&&(P=0),n.top+=y,n.left+=P,T.offset.setOffset(d[0],T.extend({using:function(D){d.css({top:Math.round(D.top),left:Math.round(D.left)})}},n),0),d.addClass("in");var A=d[0].offsetWidth,E=d[0].offsetHeight;h=="top"&&E!=v&&(n.top=n.top+v-E);var C=this.getViewportAdjustedDelta(h,n,A,E);C.left?n.left+=C.left:n.top+=C.top;var _=/top|bottom/.test(h),R=_?C.left*2-g+A:C.top*2-v+E,j=_?"offsetWidth":"offsetHeight";d.offset(n),this.replaceArrow(R,d[0][j],_)},o.prototype.replaceArrow=function(n,h,d){this.arrow().css(d?"left":"top",50*(1-n/h)+"%").css(d?"top":"left","")},o.prototype.setContent=function(){var n=this.tip(),h=this.getTitle();this.options.html?(this.options.sanitize&&(h=l(h,this.options.whiteList,this.options.sanitizeFn)),n.find(".tooltip-inner").html(h)):n.find(".tooltip-inner").text(h),n.removeClass("fade in top bottom left right")},o.prototype.hide=function(n){var h=this,d=T(this.$tip),g=T.Event("hide.bs."+this.type);function v(){h.hoverState!="in"&&d.detach(),h.$element&&h.$element.removeAttr("aria-describedby").trigger("hidden.bs."+h.type),n&&n()}if(this.$element.trigger(g),!g.isDefaultPrevented())return d.removeClass("in"),T.support.transition&&d.hasClass("fade")?d.one("bsTransitionEnd",v).emulateTransitionEnd(o.TRANSITION_DURATION):v(),this.hoverState=null,this},o.prototype.fixTitle=function(){var n=this.$element;(n.attr("title")||typeof n.attr("data-original-title")!="string")&&n.attr("data-original-title",n.attr("title")||"").attr("title","")},o.prototype.hasContent=function(){return this.getTitle()},o.prototype.getPosition=function(n){n=n||this.$element;var h=n[0],d=h.tagName=="BODY",g=h.getBoundingClientRect();g.width==null&&(g=T.extend({},g,{width:g.right-g.left,height:g.bottom-g.top}));var v=window.SVGElement&&h instanceof window.SVGElement,y=d?{top:0,left:0}:v?null:n.offset(),P={scroll:d?document.documentElement.scrollTop||document.body.scrollTop:n.scrollTop()},A=d?{width:T(window).width(),height:T(window).height()}:null;return T.extend({},g,P,A,y)},o.prototype.getCalculatedOffset=function(n,h,d,g){return n=="bottom"?{top:h.top+h.height,left:h.left+h.width/2-d/2}:n=="top"?{top:h.top-g,left:h.left+h.width/2-d/2}:n=="left"?{top:h.top+h.height/2-g/2,left:h.left-d}:{top:h.top+h.height/2-g/2,left:h.left+h.width}},o.prototype.getViewportAdjustedDelta=function(n,h,d,g){var v={top:0,left:0};if(!this.$viewport)return v;var y=this.options.viewport&&this.options.viewport.padding||0,P=this.getPosition(this.$viewport);if(/right|left/.test(n)){var A=h.top-y-P.scroll,E=h.top+y-P.scroll+g;A<P.top?v.top=P.top-A:E>P.top+P.height&&(v.top=P.top+P.height-E)}else{var C=h.left-y,_=h.left+y+d;C<P.left?v.left=P.left-C:_>P.right&&(v.left=P.left+P.width-_)}return v},o.prototype.getTitle=function(){var n,h=this.$element,d=this.options;return n=h.attr("data-original-title")||(typeof d.title=="function"?d.title.call(h[0]):d.title),n},o.prototype.getUID=function(n){do n+=~~(Math.random()*1e6);while(document.getElementById(n));return n},o.prototype.tip=function(){if(!this.$tip&&(this.$tip=T(this.options.template),this.$tip.length!=1))throw new Error(this.type+" `template` option must consist of exactly 1 top-level element!");return this.$tip},o.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},o.prototype.enable=function(){this.enabled=!0},o.prototype.disable=function(){this.enabled=!1},o.prototype.toggleEnabled=function(){this.enabled=!this.enabled},o.prototype.toggle=function(n){var h=this;n&&(h=T(n.currentTarget).data("bs."+this.type),h||(h=new this.constructor(n.currentTarget,this.getDelegateOptions()),T(n.currentTarget).data("bs."+this.type,h))),n?(h.inState.click=!h.inState.click,h.isInStateTrue()?h.enter(h):h.leave(h)):h.tip().hasClass("in")?h.leave(h):h.enter(h)},o.prototype.destroy=function(){var n=this;clearTimeout(this.timeout),this.hide(function(){n.$element.off("."+n.type).removeData("bs."+n.type),n.$tip&&n.$tip.detach(),n.$tip=null,n.$arrow=null,n.$viewport=null,n.$element=null})},o.prototype.sanitizeHtml=function(n){return l(n,this.options.whiteList,this.options.sanitizeFn)};function u(n){return this.each(function(){var h=T(this),d=h.data("bs.tooltip"),g=typeof n=="object"&&n;!d&&/destroy|hide/.test(n)||(d||h.data("bs.tooltip",d=new o(this,g)),typeof n=="string"&&d[n]())})}var m=T.fn.tooltip;T.fn.tooltip=u,T.fn.tooltip.Constructor=o,T.fn.tooltip.noConflict=function(){return T.fn.tooltip=m,this}}(jQuery)},2027:T=>{var b=function(){this.Diff_Timeout=1,this.Diff_EditCost=4,this.Match_Threshold=.5,this.Match_Distance=1e3,this.Patch_DeleteThreshold=.5,this.Patch_Margin=4,this.Match_MaxBits=32},s=-1,f=1,i=0;b.Diff=function(r,p){return[r,p]},b.prototype.diff_main=function(r,p,c,l){typeof l=="undefined"&&(this.Diff_Timeout<=0?l=Number.MAX_VALUE:l=new Date().getTime()+this.Diff_Timeout*1e3);var o=l;if(r==null||p==null)throw new Error("Null input. (diff_main)");if(r==p)return r?[new b.Diff(i,r)]:[];typeof c=="undefined"&&(c=!0);var u=c,m=this.diff_commonPrefix(r,p),n=r.substring(0,m);r=r.substring(m),p=p.substring(m),m=this.diff_commonSuffix(r,p);var h=r.substring(r.length-m);r=r.substring(0,r.length-m),p=p.substring(0,p.length-m);var d=this.diff_compute_(r,p,u,o);return n&&d.unshift(new b.Diff(i,n)),h&&d.push(new b.Diff(i,h)),this.diff_cleanupMerge(d),d},b.prototype.diff_compute_=function(r,p,c,l){var o;if(!r)return[new b.Diff(f,p)];if(!p)return[new b.Diff(s,r)];var u=r.length>p.length?r:p,m=r.length>p.length?p:r,n=u.indexOf(m);if(n!=-1)return o=[new b.Diff(f,u.substring(0,n)),new b.Diff(i,m),new b.Diff(f,u.substring(n+m.length))],r.length>p.length&&(o[0][0]=o[2][0]=s),o;if(m.length==1)return[new b.Diff(s,r),new b.Diff(f,p)];var h=this.diff_halfMatch_(r,p);if(h){var d=h[0],g=h[1],v=h[2],y=h[3],P=h[4],A=this.diff_main(d,v,c,l),E=this.diff_main(g,y,c,l);return A.concat([new b.Diff(i,P)],E)}return c&&r.length>100&&p.length>100?this.diff_lineMode_(r,p,l):this.diff_bisect_(r,p,l)},b.prototype.diff_lineMode_=function(r,p,c){var l=this.diff_linesToChars_(r,p);r=l.chars1,p=l.chars2;var o=l.lineArray,u=this.diff_main(r,p,!1,c);this.diff_charsToLines_(u,o),this.diff_cleanupSemantic(u),u.push(new b.Diff(i,""));for(var m=0,n=0,h=0,d="",g="";m<u.length;){switch(u[m][0]){case f:h++,g+=u[m][1];break;case s:n++,d+=u[m][1];break;case i:if(n>=1&&h>=1){u.splice(m-n-h,n+h),m=m-n-h;for(var v=this.diff_main(d,g,!1,c),y=v.length-1;y>=0;y--)u.splice(m,0,v[y]);m=m+v.length}h=0,n=0,d="",g="";break}m++}return u.pop(),u},b.prototype.diff_bisect_=function(r,p,c){for(var l=r.length,o=p.length,u=Math.ceil((l+o)/2),m=u,n=2*u,h=new Array(n),d=new Array(n),g=0;g<n;g++)h[g]=-1,d[g]=-1;h[m+1]=0,d[m+1]=0;for(var v=l-o,y=v%2!=0,P=0,A=0,E=0,C=0,_=0;_<u&&!(new Date().getTime()>c);_++){for(var R=-_+P;R<=_-A;R+=2){var j=m+R,D;R==-_||R!=_&&h[j-1]<h[j+1]?D=h[j+1]:D=h[j-1]+1;for(var k=D-R;D<l&&k<o&&r.charAt(D)==p.charAt(k);)D++,k++;if(h[j]=D,D>l)A+=2;else if(k>o)P+=2;else if(y){var x=m+v-R;if(x>=0&&x<n&&d[x]!=-1){var I=l-d[x];if(D>=I)return this.diff_bisectSplit_(r,p,D,k,c)}}}for(var G=-_+E;G<=_-C;G+=2){var x=m+G,I;G==-_||G!=_&&d[x-1]<d[x+1]?I=d[x+1]:I=d[x-1]+1;for(var O=I-G;I<l&&O<o&&r.charAt(l-I-1)==p.charAt(o-O-1);)I++,O++;if(d[x]=I,I>l)C+=2;else if(O>o)E+=2;else if(!y){var j=m+v-G;if(j>=0&&j<n&&h[j]!=-1){var D=h[j],k=m+D-j;if(I=l-I,D>=I)return this.diff_bisectSplit_(r,p,D,k,c)}}}}return[new b.Diff(s,r),new b.Diff(f,p)]},b.prototype.diff_bisectSplit_=function(r,p,c,l,o){var u=r.substring(0,c),m=p.substring(0,l),n=r.substring(c),h=p.substring(l),d=this.diff_main(u,m,!1,o),g=this.diff_main(n,h,!1,o);return d.concat(g)},b.prototype.diff_linesToChars_=function(r,p){var c=[],l={};c[0]="";function o(h){for(var d="",g=0,v=-1,y=c.length;v<h.length-1;){v=h.indexOf(`
`,g),v==-1&&(v=h.length-1);var P=h.substring(g,v+1);(l.hasOwnProperty?l.hasOwnProperty(P):l[P]!==void 0)?d+=String.fromCharCode(l[P]):(y==u&&(P=h.substring(g),v=h.length),d+=String.fromCharCode(y),l[P]=y,c[y++]=P),g=v+1}return d}var u=4e4,m=o(r);u=65535;var n=o(p);return{chars1:m,chars2:n,lineArray:c}},b.prototype.diff_charsToLines_=function(r,p){for(var c=0;c<r.length;c++){for(var l=r[c][1],o=[],u=0;u<l.length;u++)o[u]=p[l.charCodeAt(u)];r[c][1]=o.join("")}},b.prototype.diff_commonPrefix=function(r,p){if(!r||!p||r.charAt(0)!=p.charAt(0))return 0;for(var c=0,l=Math.min(r.length,p.length),o=l,u=0;c<o;)r.substring(u,o)==p.substring(u,o)?(c=o,u=c):l=o,o=Math.floor((l-c)/2+c);return o},b.prototype.diff_commonSuffix=function(r,p){if(!r||!p||r.charAt(r.length-1)!=p.charAt(p.length-1))return 0;for(var c=0,l=Math.min(r.length,p.length),o=l,u=0;c<o;)r.substring(r.length-o,r.length-u)==p.substring(p.length-o,p.length-u)?(c=o,u=c):l=o,o=Math.floor((l-c)/2+c);return o},b.prototype.diff_commonOverlap_=function(r,p){var c=r.length,l=p.length;if(c==0||l==0)return 0;c>l?r=r.substring(c-l):c<l&&(p=p.substring(0,c));var o=Math.min(c,l);if(r==p)return o;for(var u=0,m=1;;){var n=r.substring(o-m),h=p.indexOf(n);if(h==-1)return u;m+=h,(h==0||r.substring(o-m)==p.substring(0,m))&&(u=m,m++)}},b.prototype.diff_halfMatch_=function(r,p){if(this.Diff_Timeout<=0)return null;var c=r.length>p.length?r:p,l=r.length>p.length?p:r;if(c.length<4||l.length*2<c.length)return null;var o=this;function u(A,E,C){for(var _=A.substring(C,C+Math.floor(A.length/4)),R=-1,j="",D,k,x,I;(R=E.indexOf(_,R+1))!=-1;){var G=o.diff_commonPrefix(A.substring(C),E.substring(R)),O=o.diff_commonSuffix(A.substring(0,C),E.substring(0,R));j.length<O+G&&(j=E.substring(R-O,R)+E.substring(R,R+G),D=A.substring(0,C-O),k=A.substring(C+G),x=E.substring(0,R-O),I=E.substring(R+G))}return j.length*2>=A.length?[D,k,x,I,j]:null}var m=u(c,l,Math.ceil(c.length/4)),n=u(c,l,Math.ceil(c.length/2)),h;if(!m&&!n)return null;n?m?h=m[4].length>n[4].length?m:n:h=n:h=m;var d,g,v,y;r.length>p.length?(d=h[0],g=h[1],v=h[2],y=h[3]):(v=h[0],y=h[1],d=h[2],g=h[3]);var P=h[4];return[d,g,v,y,P]},b.prototype.diff_cleanupSemantic=function(r){for(var p=!1,c=[],l=0,o=null,u=0,m=0,n=0,h=0,d=0;u<r.length;)r[u][0]==i?(c[l++]=u,m=h,n=d,h=0,d=0,o=r[u][1]):(r[u][0]==f?h+=r[u][1].length:d+=r[u][1].length,o&&o.length<=Math.max(m,n)&&o.length<=Math.max(h,d)&&(r.splice(c[l-1],0,new b.Diff(s,o)),r[c[l-1]+1][0]=f,l--,l--,u=l>0?c[l-1]:-1,m=0,n=0,h=0,d=0,o=null,p=!0)),u++;for(p&&this.diff_cleanupMerge(r),this.diff_cleanupSemanticLossless(r),u=1;u<r.length;){if(r[u-1][0]==s&&r[u][0]==f){var g=r[u-1][1],v=r[u][1],y=this.diff_commonOverlap_(g,v),P=this.diff_commonOverlap_(v,g);y>=P?(y>=g.length/2||y>=v.length/2)&&(r.splice(u,0,new b.Diff(i,v.substring(0,y))),r[u-1][1]=g.substring(0,g.length-y),r[u+1][1]=v.substring(y),u++):(P>=g.length/2||P>=v.length/2)&&(r.splice(u,0,new b.Diff(i,g.substring(0,P))),r[u-1][0]=f,r[u-1][1]=v.substring(0,v.length-P),r[u+1][0]=s,r[u+1][1]=g.substring(P),u++),u++}u++}},b.prototype.diff_cleanupSemanticLossless=function(r){function p(P,A){if(!P||!A)return 6;var E=P.charAt(P.length-1),C=A.charAt(0),_=E.match(b.nonAlphaNumericRegex_),R=C.match(b.nonAlphaNumericRegex_),j=_&&E.match(b.whitespaceRegex_),D=R&&C.match(b.whitespaceRegex_),k=j&&E.match(b.linebreakRegex_),x=D&&C.match(b.linebreakRegex_),I=k&&P.match(b.blanklineEndRegex_),G=x&&A.match(b.blanklineStartRegex_);return I||G?5:k||x?4:_&&!j&&D?3:j||D?2:_||R?1:0}for(var c=1;c<r.length-1;){if(r[c-1][0]==i&&r[c+1][0]==i){var l=r[c-1][1],o=r[c][1],u=r[c+1][1],m=this.diff_commonSuffix(l,o);if(m){var n=o.substring(o.length-m);l=l.substring(0,l.length-m),o=n+o.substring(0,o.length-m),u=n+u}for(var h=l,d=o,g=u,v=p(l,o)+p(o,u);o.charAt(0)===u.charAt(0);){l+=o.charAt(0),o=o.substring(1)+u.charAt(0),u=u.substring(1);var y=p(l,o)+p(o,u);y>=v&&(v=y,h=l,d=o,g=u)}r[c-1][1]!=h&&(h?r[c-1][1]=h:(r.splice(c-1,1),c--),r[c][1]=d,g?r[c+1][1]=g:(r.splice(c+1,1),c--))}c++}},b.nonAlphaNumericRegex_=/[^a-zA-Z0-9]/,b.whitespaceRegex_=/\s/,b.linebreakRegex_=/[\r\n]/,b.blanklineEndRegex_=/\n\r?\n$/,b.blanklineStartRegex_=/^\r?\n\r?\n/,b.prototype.diff_cleanupEfficiency=function(r){for(var p=!1,c=[],l=0,o=null,u=0,m=!1,n=!1,h=!1,d=!1;u<r.length;)r[u][0]==i?(r[u][1].length<this.Diff_EditCost&&(h||d)?(c[l++]=u,m=h,n=d,o=r[u][1]):(l=0,o=null),h=d=!1):(r[u][0]==s?d=!0:h=!0,o&&(m&&n&&h&&d||o.length<this.Diff_EditCost/2&&m+n+h+d==3)&&(r.splice(c[l-1],0,new b.Diff(s,o)),r[c[l-1]+1][0]=f,l--,o=null,m&&n?(h=d=!0,l=0):(l--,u=l>0?c[l-1]:-1,h=d=!1),p=!0)),u++;p&&this.diff_cleanupMerge(r)},b.prototype.diff_cleanupMerge=function(r){r.push(new b.Diff(i,""));for(var p=0,c=0,l=0,o="",u="",m;p<r.length;)switch(r[p][0]){case f:l++,u+=r[p][1],p++;break;case s:c++,o+=r[p][1],p++;break;case i:c+l>1?(c!==0&&l!==0&&(m=this.diff_commonPrefix(u,o),m!==0&&(p-c-l>0&&r[p-c-l-1][0]==i?r[p-c-l-1][1]+=u.substring(0,m):(r.splice(0,0,new b.Diff(i,u.substring(0,m))),p++),u=u.substring(m),o=o.substring(m)),m=this.diff_commonSuffix(u,o),m!==0&&(r[p][1]=u.substring(u.length-m)+r[p][1],u=u.substring(0,u.length-m),o=o.substring(0,o.length-m))),p-=c+l,r.splice(p,c+l),o.length&&(r.splice(p,0,new b.Diff(s,o)),p++),u.length&&(r.splice(p,0,new b.Diff(f,u)),p++),p++):p!==0&&r[p-1][0]==i?(r[p-1][1]+=r[p][1],r.splice(p,1)):p++,l=0,c=0,o="",u="";break}r[r.length-1][1]===""&&r.pop();var n=!1;for(p=1;p<r.length-1;)r[p-1][0]==i&&r[p+1][0]==i&&(r[p][1].substring(r[p][1].length-r[p-1][1].length)==r[p-1][1]?(r[p][1]=r[p-1][1]+r[p][1].substring(0,r[p][1].length-r[p-1][1].length),r[p+1][1]=r[p-1][1]+r[p+1][1],r.splice(p-1,1),n=!0):r[p][1].substring(0,r[p+1][1].length)==r[p+1][1]&&(r[p-1][1]+=r[p+1][1],r[p][1]=r[p][1].substring(r[p+1][1].length)+r[p+1][1],r.splice(p+1,1),n=!0)),p++;n&&this.diff_cleanupMerge(r)},b.prototype.diff_xIndex=function(r,p){var c=0,l=0,o=0,u=0,m;for(m=0;m<r.length&&(r[m][0]!==f&&(c+=r[m][1].length),r[m][0]!==s&&(l+=r[m][1].length),!(c>p));m++)o=c,u=l;return r.length!=m&&r[m][0]===s?u:u+(p-o)},b.prototype.diff_prettyHtml=function(r){for(var p=[],c=/&/g,l=/</g,o=/>/g,u=/\n/g,m=0;m<r.length;m++){var n=r[m][0],h=r[m][1],d=h.replace(c,"&amp;").replace(l,"&lt;").replace(o,"&gt;").replace(u,"&para;<br>");switch(n){case f:p[m]='<ins style="background:#e6ffe6;">'+d+"</ins>";break;case s:p[m]='<del style="background:#ffe6e6;">'+d+"</del>";break;case i:p[m]="<span>"+d+"</span>";break}}return p.join("")},b.prototype.diff_text1=function(r){for(var p=[],c=0;c<r.length;c++)r[c][0]!==f&&(p[c]=r[c][1]);return p.join("")},b.prototype.diff_text2=function(r){for(var p=[],c=0;c<r.length;c++)r[c][0]!==s&&(p[c]=r[c][1]);return p.join("")},b.prototype.diff_levenshtein=function(r){for(var p=0,c=0,l=0,o=0;o<r.length;o++){var u=r[o][0],m=r[o][1];switch(u){case f:c+=m.length;break;case s:l+=m.length;break;case i:p+=Math.max(c,l),c=0,l=0;break}}return p+=Math.max(c,l),p},b.prototype.diff_toDelta=function(r){for(var p=[],c=0;c<r.length;c++)switch(r[c][0]){case f:p[c]="+"+encodeURI(r[c][1]);break;case s:p[c]="-"+r[c][1].length;break;case i:p[c]="="+r[c][1].length;break}return p.join("	").replace(/%20/g," ")},b.prototype.diff_fromDelta=function(r,p){for(var c=[],l=0,o=0,u=p.split(/\t/g),m=0;m<u.length;m++){var n=u[m].substring(1);switch(u[m].charAt(0)){case"+":try{c[l++]=new b.Diff(f,decodeURI(n))}catch(g){throw new Error("Illegal escape in diff_fromDelta: "+n)}break;case"-":case"=":var h=parseInt(n,10);if(isNaN(h)||h<0)throw new Error("Invalid number in diff_fromDelta: "+n);var d=r.substring(o,o+=h);u[m].charAt(0)=="="?c[l++]=new b.Diff(i,d):c[l++]=new b.Diff(s,d);break;default:if(u[m])throw new Error("Invalid diff operation in diff_fromDelta: "+u[m])}}if(o!=r.length)throw new Error("Delta length ("+o+") does not equal source text length ("+r.length+").");return c},b.prototype.match_main=function(r,p,c){if(r==null||p==null||c==null)throw new Error("Null input. (match_main)");return c=Math.max(0,Math.min(c,r.length)),r==p?0:r.length?r.substring(c,c+p.length)==p?c:this.match_bitap_(r,p,c):-1},b.prototype.match_bitap_=function(r,p,c){if(p.length>this.Match_MaxBits)throw new Error("Pattern too long for this browser.");var l=this.match_alphabet_(p),o=this;function u(D,k){var x=D/p.length,I=Math.abs(c-k);return o.Match_Distance?x+I/o.Match_Distance:I?1:x}var m=this.Match_Threshold,n=r.indexOf(p,c);n!=-1&&(m=Math.min(u(0,n),m),n=r.lastIndexOf(p,c+p.length),n!=-1&&(m=Math.min(u(0,n),m)));var h=1<<p.length-1;n=-1;for(var d,g,v=p.length+r.length,y,P=0;P<p.length;P++){for(d=0,g=v;d<g;)u(P,c+g)<=m?d=g:v=g,g=Math.floor((v-d)/2+d);v=g;var A=Math.max(1,c-g+1),E=Math.min(c+g,r.length)+p.length,C=Array(E+2);C[E+1]=(1<<P)-1;for(var _=E;_>=A;_--){var R=l[r.charAt(_-1)];if(P===0?C[_]=(C[_+1]<<1|1)&R:C[_]=(C[_+1]<<1|1)&R|((y[_+1]|y[_])<<1|1)|y[_+1],C[_]&h){var j=u(P,_-1);if(j<=m)if(m=j,n=_-1,n>c)A=Math.max(1,2*c-n);else break}}if(u(P+1,c)>m)break;y=C}return n},b.prototype.match_alphabet_=function(r){for(var p={},c=0;c<r.length;c++)p[r.charAt(c)]=0;for(var c=0;c<r.length;c++)p[r.charAt(c)]|=1<<r.length-c-1;return p},b.prototype.patch_addContext_=function(r,p){if(p.length!=0){if(r.start2===null)throw Error("patch not initialized");for(var c=p.substring(r.start2,r.start2+r.length1),l=0;p.indexOf(c)!=p.lastIndexOf(c)&&c.length<this.Match_MaxBits-this.Patch_Margin-this.Patch_Margin;)l+=this.Patch_Margin,c=p.substring(r.start2-l,r.start2+r.length1+l);l+=this.Patch_Margin;var o=p.substring(r.start2-l,r.start2);o&&r.diffs.unshift(new b.Diff(i,o));var u=p.substring(r.start2+r.length1,r.start2+r.length1+l);u&&r.diffs.push(new b.Diff(i,u)),r.start1-=o.length,r.start2-=o.length,r.length1+=o.length+u.length,r.length2+=o.length+u.length}},b.prototype.patch_make=function(r,p,c){var l,o;if(typeof r=="string"&&typeof p=="string"&&typeof c=="undefined")l=r,o=this.diff_main(l,p,!0),o.length>2&&(this.diff_cleanupSemantic(o),this.diff_cleanupEfficiency(o));else if(r&&typeof r=="object"&&typeof p=="undefined"&&typeof c=="undefined")o=r,l=this.diff_text1(o);else if(typeof r=="string"&&p&&typeof p=="object"&&typeof c=="undefined")l=r,o=p;else if(typeof r=="string"&&typeof p=="string"&&c&&typeof c=="object")l=r,o=c;else throw new Error("Unknown call format to patch_make.");if(o.length===0)return[];for(var u=[],m=new b.patch_obj,n=0,h=0,d=0,g=l,v=l,y=0;y<o.length;y++){var P=o[y][0],A=o[y][1];switch(!n&&P!==i&&(m.start1=h,m.start2=d),P){case f:m.diffs[n++]=o[y],m.length2+=A.length,v=v.substring(0,d)+A+v.substring(d);break;case s:m.length1+=A.length,m.diffs[n++]=o[y],v=v.substring(0,d)+v.substring(d+A.length);break;case i:A.length<=2*this.Patch_Margin&&n&&o.length!=y+1?(m.diffs[n++]=o[y],m.length1+=A.length,m.length2+=A.length):A.length>=2*this.Patch_Margin&&n&&(this.patch_addContext_(m,g),u.push(m),m=new b.patch_obj,n=0,g=v,h=d);break}P!==f&&(h+=A.length),P!==s&&(d+=A.length)}return n&&(this.patch_addContext_(m,g),u.push(m)),u},b.prototype.patch_deepCopy=function(r){for(var p=[],c=0;c<r.length;c++){var l=r[c],o=new b.patch_obj;o.diffs=[];for(var u=0;u<l.diffs.length;u++)o.diffs[u]=new b.Diff(l.diffs[u][0],l.diffs[u][1]);o.start1=l.start1,o.start2=l.start2,o.length1=l.length1,o.length2=l.length2,p[c]=o}return p},b.prototype.patch_apply=function(r,p){if(r.length==0)return[p,[]];r=this.patch_deepCopy(r);var c=this.patch_addPadding(r);p=c+p+c,this.patch_splitMax(r);for(var l=0,o=[],u=0;u<r.length;u++){var m=r[u].start2+l,n=this.diff_text1(r[u].diffs),h,d=-1;if(n.length>this.Match_MaxBits?(h=this.match_main(p,n.substring(0,this.Match_MaxBits),m),h!=-1&&(d=this.match_main(p,n.substring(n.length-this.Match_MaxBits),m+n.length-this.Match_MaxBits),(d==-1||h>=d)&&(h=-1))):h=this.match_main(p,n,m),h==-1)o[u]=!1,l-=r[u].length2-r[u].length1;else{o[u]=!0,l=h-m;var g;if(d==-1?g=p.substring(h,h+n.length):g=p.substring(h,d+this.Match_MaxBits),n==g)p=p.substring(0,h)+this.diff_text2(r[u].diffs)+p.substring(h+n.length);else{var v=this.diff_main(n,g,!1);if(n.length>this.Match_MaxBits&&this.diff_levenshtein(v)/n.length>this.Patch_DeleteThreshold)o[u]=!1;else{this.diff_cleanupSemanticLossless(v);for(var y=0,P,A=0;A<r[u].diffs.length;A++){var E=r[u].diffs[A];E[0]!==i&&(P=this.diff_xIndex(v,y)),E[0]===f?p=p.substring(0,h+P)+E[1]+p.substring(h+P):E[0]===s&&(p=p.substring(0,h+P)+p.substring(h+this.diff_xIndex(v,y+E[1].length))),E[0]!==s&&(y+=E[1].length)}}}}}return p=p.substring(c.length,p.length-c.length),[p,o]},b.prototype.patch_addPadding=function(r){for(var p=this.Patch_Margin,c="",l=1;l<=p;l++)c+=String.fromCharCode(l);for(var l=0;l<r.length;l++)r[l].start1+=p,r[l].start2+=p;var o=r[0],u=o.diffs;if(u.length==0||u[0][0]!=i)u.unshift(new b.Diff(i,c)),o.start1-=p,o.start2-=p,o.length1+=p,o.length2+=p;else if(p>u[0][1].length){var m=p-u[0][1].length;u[0][1]=c.substring(u[0][1].length)+u[0][1],o.start1-=m,o.start2-=m,o.length1+=m,o.length2+=m}if(o=r[r.length-1],u=o.diffs,u.length==0||u[u.length-1][0]!=i)u.push(new b.Diff(i,c)),o.length1+=p,o.length2+=p;else if(p>u[u.length-1][1].length){var m=p-u[u.length-1][1].length;u[u.length-1][1]+=c.substring(0,m),o.length1+=m,o.length2+=m}return c},b.prototype.patch_splitMax=function(r){for(var p=this.Match_MaxBits,c=0;c<r.length;c++)if(!(r[c].length1<=p)){var l=r[c];r.splice(c--,1);for(var o=l.start1,u=l.start2,m="";l.diffs.length!==0;){var n=new b.patch_obj,h=!0;for(n.start1=o-m.length,n.start2=u-m.length,m!==""&&(n.length1=n.length2=m.length,n.diffs.push(new b.Diff(i,m)));l.diffs.length!==0&&n.length1<p-this.Patch_Margin;){var d=l.diffs[0][0],g=l.diffs[0][1];d===f?(n.length2+=g.length,u+=g.length,n.diffs.push(l.diffs.shift()),h=!1):d===s&&n.diffs.length==1&&n.diffs[0][0]==i&&g.length>2*p?(n.length1+=g.length,o+=g.length,h=!1,n.diffs.push(new b.Diff(d,g)),l.diffs.shift()):(g=g.substring(0,p-n.length1-this.Patch_Margin),n.length1+=g.length,o+=g.length,d===i?(n.length2+=g.length,u+=g.length):h=!1,n.diffs.push(new b.Diff(d,g)),g==l.diffs[0][1]?l.diffs.shift():l.diffs[0][1]=l.diffs[0][1].substring(g.length))}m=this.diff_text2(n.diffs),m=m.substring(m.length-this.Patch_Margin);var v=this.diff_text1(l.diffs).substring(0,this.Patch_Margin);v!==""&&(n.length1+=v.length,n.length2+=v.length,n.diffs.length!==0&&n.diffs[n.diffs.length-1][0]===i?n.diffs[n.diffs.length-1][1]+=v:n.diffs.push(new b.Diff(i,v))),h||r.splice(++c,0,n)}}},b.prototype.patch_toText=function(r){for(var p=[],c=0;c<r.length;c++)p[c]=r[c];return p.join("")},b.prototype.patch_fromText=function(r){var p=[];if(!r)return p;for(var c=r.split(`
`),l=0,o=/^@@ -(\d+),?(\d*) \+(\d+),?(\d*) @@$/;l<c.length;){var u=c[l].match(o);if(!u)throw new Error("Invalid patch string: "+c[l]);var m=new b.patch_obj;for(p.push(m),m.start1=parseInt(u[1],10),u[2]===""?(m.start1--,m.length1=1):u[2]=="0"?m.length1=0:(m.start1--,m.length1=parseInt(u[2],10)),m.start2=parseInt(u[3],10),u[4]===""?(m.start2--,m.length2=1):u[4]=="0"?m.length2=0:(m.start2--,m.length2=parseInt(u[4],10)),l++;l<c.length;){var n=c[l].charAt(0);try{var h=decodeURI(c[l].substring(1))}catch(d){throw new Error("Illegal escape in patch_fromText: "+h)}if(n=="-")m.diffs.push(new b.Diff(s,h));else if(n=="+")m.diffs.push(new b.Diff(f,h));else if(n==" ")m.diffs.push(new b.Diff(i,h));else{if(n=="@")break;if(n!=="")throw new Error('Invalid patch mode "'+n+'" in: '+h)}l++}}return p},b.patch_obj=function(){this.diffs=[],this.start1=null,this.start2=null,this.length1=0,this.length2=0},b.patch_obj.prototype.toString=function(){var r,p;this.length1===0?r=this.start1+",0":this.length1==1?r=this.start1+1:r=this.start1+1+","+this.length1,this.length2===0?p=this.start2+",0":this.length2==1?p=this.start2+1:p=this.start2+1+","+this.length2;for(var c=["@@ -"+r+" +"+p+` @@
`],l,o=0;o<this.diffs.length;o++){switch(this.diffs[o][0]){case f:l="+";break;case s:l="-";break;case i:l=" ";break}c[o+1]=l+encodeURI(this.diffs[o][1])+`
`}return c.join("").replace(/%20/g," ")},T.exports=b,T.exports.diff_match_patch=b,T.exports.DIFF_DELETE=s,T.exports.DIFF_INSERT=f,T.exports.DIFF_EQUAL=i},177:function(T){/**!

 @license
 handlebars v4.7.7

Copyright (C) 2011-2019 by Yehuda Katz

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

*/(function(b,s){T.exports=s()})(this,function(){return function(b){function s(i){if(f[i])return f[i].exports;var r=f[i]={exports:{},id:i,loaded:!1};return b[i].call(r.exports,r,r.exports,s),r.loaded=!0,r.exports}var f={};return s.m=b,s.c=f,s.p="",s(0)}([function(b,s,f){"use strict";function i(){var E=P();return E.compile=function(C,_){return m.compile(C,_,E)},E.precompile=function(C,_){return m.precompile(C,_,E)},E.AST=o.default,E.Compiler=m.Compiler,E.JavaScriptCompiler=h.default,E.Parser=u.parser,E.parse=u.parse,E.parseWithoutProcessing=u.parseWithoutProcessing,E}var r=f(1).default;s.__esModule=!0;var p=f(2),c=r(p),l=f(45),o=r(l),u=f(46),m=f(51),n=f(52),h=r(n),d=f(49),g=r(d),v=f(44),y=r(v),P=c.default.create,A=i();A.create=i,y.default(A),A.Visitor=g.default,A.default=A,s.default=A,b.exports=s.default},function(b,s){"use strict";s.default=function(f){return f&&f.__esModule?f:{default:f}},s.__esModule=!0},function(b,s,f){"use strict";function i(){var E=new l.HandlebarsEnvironment;return d.extend(E,l),E.SafeString=u.default,E.Exception=n.default,E.Utils=d,E.escapeExpression=d.escapeExpression,E.VM=v,E.template=function(C){return v.template(C,E)},E}var r=f(3).default,p=f(1).default;s.__esModule=!0;var c=f(4),l=r(c),o=f(37),u=p(o),m=f(6),n=p(m),h=f(5),d=r(h),g=f(38),v=r(g),y=f(44),P=p(y),A=i();A.create=i,P.default(A),A.default=A,s.default=A,b.exports=s.default},function(b,s){"use strict";s.default=function(f){if(f&&f.__esModule)return f;var i={};if(f!=null)for(var r in f)Object.prototype.hasOwnProperty.call(f,r)&&(i[r]=f[r]);return i.default=f,i},s.__esModule=!0},function(b,s,f){"use strict";function i(E,C,_){this.helpers=E||{},this.partials=C||{},this.decorators=_||{},o.registerDefaultHelpers(this),u.registerDefaultDecorators(this)}var r=f(1).default;s.__esModule=!0,s.HandlebarsEnvironment=i;var p=f(5),c=f(6),l=r(c),o=f(10),u=f(30),m=f(32),n=r(m),h=f(33),d="4.7.7";s.VERSION=d;var g=8;s.COMPILER_REVISION=g;var v=7;s.LAST_COMPATIBLE_COMPILER_REVISION=v;var y={1:"<= 1.0.rc.2",2:"== 1.0.0-rc.3",3:"== 1.0.0-rc.4",4:"== 1.x.x",5:"== 2.0.0-alpha.x",6:">= 2.0.0-beta.1",7:">= 4.0.0 <4.3.0",8:">= 4.3.0"};s.REVISION_CHANGES=y;var P="[object Object]";i.prototype={constructor:i,logger:n.default,log:n.default.log,registerHelper:function(E,C){if(p.toString.call(E)===P){if(C)throw new l.default("Arg not supported with multiple helpers");p.extend(this.helpers,E)}else this.helpers[E]=C},unregisterHelper:function(E){delete this.helpers[E]},registerPartial:function(E,C){if(p.toString.call(E)===P)p.extend(this.partials,E);else{if(typeof C=="undefined")throw new l.default('Attempting to register a partial called "'+E+'" as undefined');this.partials[E]=C}},unregisterPartial:function(E){delete this.partials[E]},registerDecorator:function(E,C){if(p.toString.call(E)===P){if(C)throw new l.default("Arg not supported with multiple decorators");p.extend(this.decorators,E)}else this.decorators[E]=C},unregisterDecorator:function(E){delete this.decorators[E]},resetLoggedPropertyAccesses:function(){h.resetLoggedProperties()}};var A=n.default.log;s.log=A,s.createFrame=p.createFrame,s.logger=n.default},function(b,s){"use strict";function f(y){return m[y]}function i(y){for(var P=1;P<arguments.length;P++)for(var A in arguments[P])Object.prototype.hasOwnProperty.call(arguments[P],A)&&(y[A]=arguments[P][A]);return y}function r(y,P){for(var A=0,E=y.length;A<E;A++)if(y[A]===P)return A;return-1}function p(y){if(typeof y!="string"){if(y&&y.toHTML)return y.toHTML();if(y==null)return"";if(!y)return y+"";y=""+y}return h.test(y)?y.replace(n,f):y}function c(y){return!y&&y!==0||!(!v(y)||y.length!==0)}function l(y){var P=i({},y);return P._parent=y,P}function o(y,P){return y.path=P,y}function u(y,P){return(y?y+".":"")+P}s.__esModule=!0,s.extend=i,s.indexOf=r,s.escapeExpression=p,s.isEmpty=c,s.createFrame=l,s.blockParams=o,s.appendContextPath=u;var m={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;","=":"&#x3D;"},n=/[&<>"'`=]/g,h=/[&<>"'`=]/,d=Object.prototype.toString;s.toString=d;var g=function(y){return typeof y=="function"};g(/x/)&&(s.isFunction=g=function(y){return typeof y=="function"&&d.call(y)==="[object Function]"}),s.isFunction=g;var v=Array.isArray||function(y){return!(!y||typeof y!="object")&&d.call(y)==="[object Array]"};s.isArray=v},function(b,s,f){"use strict";function i(c,l){var o=l&&l.loc,u=void 0,m=void 0,n=void 0,h=void 0;o&&(u=o.start.line,m=o.end.line,n=o.start.column,h=o.end.column,c+=" - "+u+":"+n);for(var d=Error.prototype.constructor.call(this,c),g=0;g<p.length;g++)this[p[g]]=d[p[g]];Error.captureStackTrace&&Error.captureStackTrace(this,i);try{o&&(this.lineNumber=u,this.endLineNumber=m,r?(Object.defineProperty(this,"column",{value:n,enumerable:!0}),Object.defineProperty(this,"endColumn",{value:h,enumerable:!0})):(this.column=n,this.endColumn=h))}catch(v){}}var r=f(7).default;s.__esModule=!0;var p=["description","fileName","lineNumber","endLineNumber","message","name","number","stack"];i.prototype=new Error,s.default=i,b.exports=s.default},function(b,s,f){b.exports={default:f(8),__esModule:!0}},function(b,s,f){var i=f(9);b.exports=function(r,p,c){return i.setDesc(r,p,c)}},function(b,s){var f=Object;b.exports={create:f.create,getProto:f.getPrototypeOf,isEnum:{}.propertyIsEnumerable,getDesc:f.getOwnPropertyDescriptor,setDesc:f.defineProperty,setDescs:f.defineProperties,getKeys:f.keys,getNames:f.getOwnPropertyNames,getSymbols:f.getOwnPropertySymbols,each:[].forEach}},function(b,s,f){"use strict";function i(C){l.default(C),u.default(C),n.default(C),d.default(C),v.default(C),P.default(C),E.default(C)}function r(C,_,R){C.helpers[_]&&(C.hooks[_]=C.helpers[_],R||delete C.helpers[_])}var p=f(1).default;s.__esModule=!0,s.registerDefaultHelpers=i,s.moveHelperToHooks=r;var c=f(11),l=p(c),o=f(12),u=p(o),m=f(25),n=p(m),h=f(26),d=p(h),g=f(27),v=p(g),y=f(28),P=p(y),A=f(29),E=p(A)},function(b,s,f){"use strict";s.__esModule=!0;var i=f(5);s.default=function(r){r.registerHelper("blockHelperMissing",function(p,c){var l=c.inverse,o=c.fn;if(p===!0)return o(this);if(p===!1||p==null)return l(this);if(i.isArray(p))return p.length>0?(c.ids&&(c.ids=[c.name]),r.helpers.each(p,c)):l(this);if(c.data&&c.ids){var u=i.createFrame(c.data);u.contextPath=i.appendContextPath(c.data.contextPath,c.name),c={data:u}}return o(p,c)})},b.exports=s.default},function(b,s,f){(function(i){"use strict";var r=f(13).default,p=f(1).default;s.__esModule=!0;var c=f(5),l=f(6),o=p(l);s.default=function(u){u.registerHelper("each",function(m,n){function h(j,D,k){P&&(P.key=j,P.index=D,P.first=D===0,P.last=!!k,A&&(P.contextPath=A+j)),y+=d(m[j],{data:P,blockParams:c.blockParams([m[j],j],[A+j,null])})}if(!n)throw new o.default("Must pass iterator to #each");var d=n.fn,g=n.inverse,v=0,y="",P=void 0,A=void 0;if(n.data&&n.ids&&(A=c.appendContextPath(n.data.contextPath,n.ids[0])+"."),c.isFunction(m)&&(m=m.call(this)),n.data&&(P=c.createFrame(n.data)),m&&typeof m=="object")if(c.isArray(m))for(var E=m.length;v<E;v++)v in m&&h(v,v,v===m.length-1);else if(i.Symbol&&m[i.Symbol.iterator]){for(var C=[],_=m[i.Symbol.iterator](),R=_.next();!R.done;R=_.next())C.push(R.value);m=C;for(var E=m.length;v<E;v++)h(v,v,v===m.length-1)}else(function(){var j=void 0;r(m).forEach(function(D){j!==void 0&&h(j,v-1),j=D,v++}),j!==void 0&&h(j,v-1,!0)})();return v===0&&(y=g(this)),y})},b.exports=s.default}).call(s,function(){return this}())},function(b,s,f){b.exports={default:f(14),__esModule:!0}},function(b,s,f){f(15),b.exports=f(21).Object.keys},function(b,s,f){var i=f(16);f(18)("keys",function(r){return function(p){return r(i(p))}})},function(b,s,f){var i=f(17);b.exports=function(r){return Object(i(r))}},function(b,s){b.exports=function(f){if(f==null)throw TypeError("Can't call method on  "+f);return f}},function(b,s,f){var i=f(19),r=f(21),p=f(24);b.exports=function(c,l){var o=(r.Object||{})[c]||Object[c],u={};u[c]=l(o),i(i.S+i.F*p(function(){o(1)}),"Object",u)}},function(b,s,f){var i=f(20),r=f(21),p=f(22),c="prototype",l=function(o,u,m){var n,h,d,g=o&l.F,v=o&l.G,y=o&l.S,P=o&l.P,A=o&l.B,E=o&l.W,C=v?r:r[u]||(r[u]={}),_=v?i:y?i[u]:(i[u]||{})[c];v&&(m=u);for(n in m)h=!g&&_&&n in _,h&&n in C||(d=h?_[n]:m[n],C[n]=v&&typeof _[n]!="function"?m[n]:A&&h?p(d,i):E&&_[n]==d?function(R){var j=function(D){return this instanceof R?new R(D):R(D)};return j[c]=R[c],j}(d):P&&typeof d=="function"?p(Function.call,d):d,P&&((C[c]||(C[c]={}))[n]=d))};l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,b.exports=l},function(b,s){var f=b.exports=typeof window!="undefined"&&window.Math==Math?window:typeof self!="undefined"&&self.Math==Math?self:Function("return this")();typeof __g=="number"&&(__g=f)},function(b,s){var f=b.exports={version:"1.2.6"};typeof __e=="number"&&(__e=f)},function(b,s,f){var i=f(23);b.exports=function(r,p,c){if(i(r),p===void 0)return r;switch(c){case 1:return function(l){return r.call(p,l)};case 2:return function(l,o){return r.call(p,l,o)};case 3:return function(l,o,u){return r.call(p,l,o,u)}}return function(){return r.apply(p,arguments)}}},function(b,s){b.exports=function(f){if(typeof f!="function")throw TypeError(f+" is not a function!");return f}},function(b,s){b.exports=function(f){try{return!!f()}catch(i){return!0}}},function(b,s,f){"use strict";var i=f(1).default;s.__esModule=!0;var r=f(6),p=i(r);s.default=function(c){c.registerHelper("helperMissing",function(){if(arguments.length!==1)throw new p.default('Missing helper: "'+arguments[arguments.length-1].name+'"')})},b.exports=s.default},function(b,s,f){"use strict";var i=f(1).default;s.__esModule=!0;var r=f(5),p=f(6),c=i(p);s.default=function(l){l.registerHelper("if",function(o,u){if(arguments.length!=2)throw new c.default("#if requires exactly one argument");return r.isFunction(o)&&(o=o.call(this)),!u.hash.includeZero&&!o||r.isEmpty(o)?u.inverse(this):u.fn(this)}),l.registerHelper("unless",function(o,u){if(arguments.length!=2)throw new c.default("#unless requires exactly one argument");return l.helpers.if.call(this,o,{fn:u.inverse,inverse:u.fn,hash:u.hash})})},b.exports=s.default},function(b,s){"use strict";s.__esModule=!0,s.default=function(f){f.registerHelper("log",function(){for(var i=[void 0],r=arguments[arguments.length-1],p=0;p<arguments.length-1;p++)i.push(arguments[p]);var c=1;r.hash.level!=null?c=r.hash.level:r.data&&r.data.level!=null&&(c=r.data.level),i[0]=c,f.log.apply(f,i)})},b.exports=s.default},function(b,s){"use strict";s.__esModule=!0,s.default=function(f){f.registerHelper("lookup",function(i,r,p){return i&&p.lookupProperty(i,r)})},b.exports=s.default},function(b,s,f){"use strict";var i=f(1).default;s.__esModule=!0;var r=f(5),p=f(6),c=i(p);s.default=function(l){l.registerHelper("with",function(o,u){if(arguments.length!=2)throw new c.default("#with requires exactly one argument");r.isFunction(o)&&(o=o.call(this));var m=u.fn;if(r.isEmpty(o))return u.inverse(this);var n=u.data;return u.data&&u.ids&&(n=r.createFrame(u.data),n.contextPath=r.appendContextPath(u.data.contextPath,u.ids[0])),m(o,{data:n,blockParams:r.blockParams([o],[n&&n.contextPath])})})},b.exports=s.default},function(b,s,f){"use strict";function i(l){c.default(l)}var r=f(1).default;s.__esModule=!0,s.registerDefaultDecorators=i;var p=f(31),c=r(p)},function(b,s,f){"use strict";s.__esModule=!0;var i=f(5);s.default=function(r){r.registerDecorator("inline",function(p,c,l,o){var u=p;return c.partials||(c.partials={},u=function(m,n){var h=l.partials;l.partials=i.extend({},h,c.partials);var d=p(m,n);return l.partials=h,d}),c.partials[o.args[0]]=o.fn,u})},b.exports=s.default},function(b,s,f){"use strict";s.__esModule=!0;var i=f(5),r={methodMap:["debug","info","warn","error"],level:"info",lookupLevel:function(p){if(typeof p=="string"){var c=i.indexOf(r.methodMap,p.toLowerCase());p=c>=0?c:parseInt(p,10)}return p},log:function(p){if(p=r.lookupLevel(p),typeof console!="undefined"&&r.lookupLevel(r.level)<=p){var c=r.methodMap[p];console[c]||(c="log");for(var l=arguments.length,o=Array(l>1?l-1:0),u=1;u<l;u++)o[u-1]=arguments[u];console[c].apply(console,o)}}};s.default=r,b.exports=s.default},function(b,s,f){"use strict";function i(v){var y=o(null);y.constructor=!1,y.__defineGetter__=!1,y.__defineSetter__=!1,y.__lookupGetter__=!1;var P=o(null);return P.__proto__=!1,{properties:{whitelist:n.createNewLookupObject(P,v.allowedProtoProperties),defaultValue:v.allowProtoPropertiesByDefault},methods:{whitelist:n.createNewLookupObject(y,v.allowedProtoMethods),defaultValue:v.allowProtoMethodsByDefault}}}function r(v,y,P){return p(typeof v=="function"?y.methods:y.properties,P)}function p(v,y){return v.whitelist[y]!==void 0?v.whitelist[y]===!0:v.defaultValue!==void 0?v.defaultValue:(c(y),!1)}function c(v){g[v]!==!0&&(g[v]=!0,d.log("error",'Handlebars: Access has been denied to resolve the property "'+v+`" because it is not an "own property" of its parent.
You can add a runtime option to disable the check or this warning:
See https://handlebarsjs.com/api-reference/runtime-options.html#options-to-control-prototype-access for details`))}function l(){u(g).forEach(function(v){delete g[v]})}var o=f(34).default,u=f(13).default,m=f(3).default;s.__esModule=!0,s.createProtoAccessControl=i,s.resultIsAllowed=r,s.resetLoggedProperties=l;var n=f(36),h=f(32),d=m(h),g=o(null)},function(b,s,f){b.exports={default:f(35),__esModule:!0}},function(b,s,f){var i=f(9);b.exports=function(r,p){return i.create(r,p)}},function(b,s,f){"use strict";function i(){for(var c=arguments.length,l=Array(c),o=0;o<c;o++)l[o]=arguments[o];return p.extend.apply(void 0,[r(null)].concat(l))}var r=f(34).default;s.__esModule=!0,s.createNewLookupObject=i;var p=f(5)},function(b,s){"use strict";function f(i){this.string=i}s.__esModule=!0,f.prototype.toString=f.prototype.toHTML=function(){return""+this.string},s.default=f,b.exports=s.default},function(b,s,f){"use strict";function i(k){var x=k&&k[0]||1,I=_.COMPILER_REVISION;if(!(x>=_.LAST_COMPATIBLE_COMPILER_REVISION&&x<=_.COMPILER_REVISION)){if(x<_.LAST_COMPATIBLE_COMPILER_REVISION){var G=_.REVISION_CHANGES[I],O=_.REVISION_CHANGES[x];throw new C.default("Template was precompiled with an older version of Handlebars than the current runtime. Please update your precompiler to a newer version ("+G+") or downgrade your runtime to an older version ("+O+").")}throw new C.default("Template was precompiled with a newer version of Handlebars than the current runtime. Please update your runtime to a newer version ("+k[1]+").")}}function r(k,x){function I(B,z,F){F.hash&&(z=A.extend({},z,F.hash),F.ids&&(F.ids[0]=!0)),B=x.VM.resolvePartial.call(this,B,z,F);var K=A.extend({},F,{hooks:this.hooks,protoAccessControl:this.protoAccessControl}),W=x.VM.invokePartial.call(this,B,z,K);if(W==null&&x.compile&&(F.partials[F.name]=x.compile(B,k.compilerOptions,x),W=F.partials[F.name](z,K)),W!=null){if(F.indent){for(var re=W.split(`
`),ne=0,pe=re.length;ne<pe&&(re[ne]||ne+1!==pe);ne++)re[ne]=F.indent+re[ne];W=re.join(`
`)}return W}throw new C.default("The partial "+F.name+" could not be compiled when running in runtime-only mode")}function G(B){function z(ne){return""+k.main(U,ne,U.helpers,U.partials,K,re,W)}var F=arguments.length<=1||arguments[1]===void 0?{}:arguments[1],K=F.data;G._setup(F),!F.partial&&k.useData&&(K=u(B,K));var W=void 0,re=k.useBlockParams?[]:void 0;return k.useDepths&&(W=F.depths?B!=F.depths[0]?[B].concat(F.depths):F.depths:[B]),(z=m(k.main,z,U,F.depths||[],K,re))(B,F)}if(!x)throw new C.default("No environment passed to template");if(!k||!k.main)throw new C.default("Unknown template object: "+typeof k);k.main.decorator=k.main_d,x.VM.checkRevision(k.compiler);var O=k.compiler&&k.compiler[0]===7,U={strict:function(B,z,F){if(!(B&&z in B))throw new C.default('"'+z+'" not defined in '+B,{loc:F});return U.lookupProperty(B,z)},lookupProperty:function(B,z){var F=B[z];return F==null||Object.prototype.hasOwnProperty.call(B,z)||D.resultIsAllowed(F,U.protoAccessControl,z)?F:void 0},lookup:function(B,z){for(var F=B.length,K=0;K<F;K++){var W=B[K]&&U.lookupProperty(B[K],z);if(W!=null)return B[K][z]}},lambda:function(B,z){return typeof B=="function"?B.call(z):B},escapeExpression:A.escapeExpression,invokePartial:I,fn:function(B){var z=k[B];return z.decorator=k[B+"_d"],z},programs:[],program:function(B,z,F,K,W){var re=this.programs[B],ne=this.fn(B);return z||W||K||F?re=p(this,B,ne,z,F,K,W):re||(re=this.programs[B]=p(this,B,ne)),re},data:function(B,z){for(;B&&z--;)B=B._parent;return B},mergeIfNeeded:function(B,z){var F=B||z;return B&&z&&B!==z&&(F=A.extend({},z,B)),F},nullContext:d({}),noop:x.VM.noop,compilerInfo:k.compiler};return G.isTop=!0,G._setup=function(B){if(B.partial)U.protoAccessControl=B.protoAccessControl,U.helpers=B.helpers,U.partials=B.partials,U.decorators=B.decorators,U.hooks=B.hooks;else{var z=A.extend({},x.helpers,B.helpers);n(z,U),U.helpers=z,k.usePartial&&(U.partials=U.mergeIfNeeded(B.partials,x.partials)),(k.usePartial||k.useDecorators)&&(U.decorators=A.extend({},x.decorators,B.decorators)),U.hooks={},U.protoAccessControl=D.createProtoAccessControl(B);var F=B.allowCallsToHelperMissing||O;R.moveHelperToHooks(U,"helperMissing",F),R.moveHelperToHooks(U,"blockHelperMissing",F)}},G._child=function(B,z,F,K){if(k.useBlockParams&&!F)throw new C.default("must pass block params");if(k.useDepths&&!K)throw new C.default("must pass parent depths");return p(U,B,k[B],z,0,F,K)},G}function p(k,x,I,G,O,U,B){function z(F){var K=arguments.length<=1||arguments[1]===void 0?{}:arguments[1],W=B;return!B||F==B[0]||F===k.nullContext&&B[0]===null||(W=[F].concat(B)),I(k,F,k.helpers,k.partials,K.data||G,U&&[K.blockParams].concat(U),W)}return z=m(I,z,k,B,G,U),z.program=x,z.depth=B?B.length:0,z.blockParams=O||0,z}function c(k,x,I){return k?k.call||I.name||(I.name=k,k=I.partials[k]):k=I.name==="@partial-block"?I.data["partial-block"]:I.partials[I.name],k}function l(k,x,I){var G=I.data&&I.data["partial-block"];I.partial=!0,I.ids&&(I.data.contextPath=I.ids[0]||I.data.contextPath);var O=void 0;if(I.fn&&I.fn!==o&&function(){I.data=_.createFrame(I.data);var U=I.fn;O=I.data["partial-block"]=function(B){var z=arguments.length<=1||arguments[1]===void 0?{}:arguments[1];return z.data=_.createFrame(z.data),z.data["partial-block"]=G,U(B,z)},U.partials&&(I.partials=A.extend({},I.partials,U.partials))}(),k===void 0&&O&&(k=O),k===void 0)throw new C.default("The partial "+I.name+" could not be found");if(k instanceof Function)return k(x,I)}function o(){return""}function u(k,x){return x&&"root"in x||(x=x?_.createFrame(x):{},x.root=k),x}function m(k,x,I,G,O,U){if(k.decorator){var B={};x=k.decorator(x,B,I,G&&G[0],O,U,G),A.extend(x,B)}return x}function n(k,x){g(k).forEach(function(I){var G=k[I];k[I]=h(G,x)})}function h(k,x){var I=x.lookupProperty;return j.wrapHelper(k,function(G){return A.extend({lookupProperty:I},G)})}var d=f(39).default,g=f(13).default,v=f(3).default,y=f(1).default;s.__esModule=!0,s.checkRevision=i,s.template=r,s.wrapProgram=p,s.resolvePartial=c,s.invokePartial=l,s.noop=o;var P=f(5),A=v(P),E=f(6),C=y(E),_=f(4),R=f(10),j=f(43),D=f(33)},function(b,s,f){b.exports={default:f(40),__esModule:!0}},function(b,s,f){f(41),b.exports=f(21).Object.seal},function(b,s,f){var i=f(42);f(18)("seal",function(r){return function(p){return r&&i(p)?r(p):p}})},function(b,s){b.exports=function(f){return typeof f=="object"?f!==null:typeof f=="function"}},function(b,s){"use strict";function f(i,r){if(typeof i!="function")return i;var p=function(){var c=arguments[arguments.length-1];return arguments[arguments.length-1]=r(c),i.apply(this,arguments)};return p}s.__esModule=!0,s.wrapHelper=f},function(b,s){(function(f){"use strict";s.__esModule=!0,s.default=function(i){var r=typeof f!="undefined"?f:window,p=r.Handlebars;i.noConflict=function(){return r.Handlebars===i&&(r.Handlebars=p),i}},b.exports=s.default}).call(s,function(){return this}())},function(b,s){"use strict";s.__esModule=!0;var f={helpers:{helperExpression:function(i){return i.type==="SubExpression"||(i.type==="MustacheStatement"||i.type==="BlockStatement")&&!!(i.params&&i.params.length||i.hash)},scopedId:function(i){return/^\.|this\b/.test(i.original)},simpleId:function(i){return i.parts.length===1&&!f.helpers.scopedId(i)&&!i.depth}}};s.default=f,b.exports=s.default},function(b,s,f){"use strict";function i(v,y){if(v.type==="Program")return v;o.default.yy=g,g.locInfo=function(A){return new g.SourceLocation(y&&y.srcName,A)};var P=o.default.parse(v);return P}function r(v,y){var P=i(v,y),A=new m.default(y);return A.accept(P)}var p=f(1).default,c=f(3).default;s.__esModule=!0,s.parseWithoutProcessing=i,s.parse=r;var l=f(47),o=p(l),u=f(48),m=p(u),n=f(50),h=c(n),d=f(5);s.parser=o.default;var g={};d.extend(g,h)},function(b,s){"use strict";s.__esModule=!0;var f=function(){function i(){this.yy={}}var r={trace:function(){},yy:{},symbols_:{error:2,root:3,program:4,EOF:5,program_repetition0:6,statement:7,mustache:8,block:9,rawBlock:10,partial:11,partialBlock:12,content:13,COMMENT:14,CONTENT:15,openRawBlock:16,rawBlock_repetition0:17,END_RAW_BLOCK:18,OPEN_RAW_BLOCK:19,helperName:20,openRawBlock_repetition0:21,openRawBlock_option0:22,CLOSE_RAW_BLOCK:23,openBlock:24,block_option0:25,closeBlock:26,openInverse:27,block_option1:28,OPEN_BLOCK:29,openBlock_repetition0:30,openBlock_option0:31,openBlock_option1:32,CLOSE:33,OPEN_INVERSE:34,openInverse_repetition0:35,openInverse_option0:36,openInverse_option1:37,openInverseChain:38,OPEN_INVERSE_CHAIN:39,openInverseChain_repetition0:40,openInverseChain_option0:41,openInverseChain_option1:42,inverseAndProgram:43,INVERSE:44,inverseChain:45,inverseChain_option0:46,OPEN_ENDBLOCK:47,OPEN:48,mustache_repetition0:49,mustache_option0:50,OPEN_UNESCAPED:51,mustache_repetition1:52,mustache_option1:53,CLOSE_UNESCAPED:54,OPEN_PARTIAL:55,partialName:56,partial_repetition0:57,partial_option0:58,openPartialBlock:59,OPEN_PARTIAL_BLOCK:60,openPartialBlock_repetition0:61,openPartialBlock_option0:62,param:63,sexpr:64,OPEN_SEXPR:65,sexpr_repetition0:66,sexpr_option0:67,CLOSE_SEXPR:68,hash:69,hash_repetition_plus0:70,hashSegment:71,ID:72,EQUALS:73,blockParams:74,OPEN_BLOCK_PARAMS:75,blockParams_repetition_plus0:76,CLOSE_BLOCK_PARAMS:77,path:78,dataName:79,STRING:80,NUMBER:81,BOOLEAN:82,UNDEFINED:83,NULL:84,DATA:85,pathSegments:86,SEP:87,$accept:0,$end:1},terminals_:{2:"error",5:"EOF",14:"COMMENT",15:"CONTENT",18:"END_RAW_BLOCK",19:"OPEN_RAW_BLOCK",23:"CLOSE_RAW_BLOCK",29:"OPEN_BLOCK",33:"CLOSE",34:"OPEN_INVERSE",39:"OPEN_INVERSE_CHAIN",44:"INVERSE",47:"OPEN_ENDBLOCK",48:"OPEN",51:"OPEN_UNESCAPED",54:"CLOSE_UNESCAPED",55:"OPEN_PARTIAL",60:"OPEN_PARTIAL_BLOCK",65:"OPEN_SEXPR",68:"CLOSE_SEXPR",72:"ID",73:"EQUALS",75:"OPEN_BLOCK_PARAMS",77:"CLOSE_BLOCK_PARAMS",80:"STRING",81:"NUMBER",82:"BOOLEAN",83:"UNDEFINED",84:"NULL",85:"DATA",87:"SEP"},productions_:[0,[3,2],[4,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[13,1],[10,3],[16,5],[9,4],[9,4],[24,6],[27,6],[38,6],[43,2],[45,3],[45,1],[26,3],[8,5],[8,5],[11,5],[12,3],[59,5],[63,1],[63,1],[64,5],[69,1],[71,3],[74,3],[20,1],[20,1],[20,1],[20,1],[20,1],[20,1],[20,1],[56,1],[56,1],[79,2],[78,1],[86,3],[86,1],[6,0],[6,2],[17,0],[17,2],[21,0],[21,2],[22,0],[22,1],[25,0],[25,1],[28,0],[28,1],[30,0],[30,2],[31,0],[31,1],[32,0],[32,1],[35,0],[35,2],[36,0],[36,1],[37,0],[37,1],[40,0],[40,2],[41,0],[41,1],[42,0],[42,1],[46,0],[46,1],[49,0],[49,2],[50,0],[50,1],[52,0],[52,2],[53,0],[53,1],[57,0],[57,2],[58,0],[58,1],[61,0],[61,2],[62,0],[62,1],[66,0],[66,2],[67,0],[67,1],[70,1],[70,2],[76,1],[76,2]],performAction:function(c,l,o,u,m,n,h){var d=n.length-1;switch(m){case 1:return n[d-1];case 2:this.$=u.prepareProgram(n[d]);break;case 3:this.$=n[d];break;case 4:this.$=n[d];break;case 5:this.$=n[d];break;case 6:this.$=n[d];break;case 7:this.$=n[d];break;case 8:this.$=n[d];break;case 9:this.$={type:"CommentStatement",value:u.stripComment(n[d]),strip:u.stripFlags(n[d],n[d]),loc:u.locInfo(this._$)};break;case 10:this.$={type:"ContentStatement",original:n[d],value:n[d],loc:u.locInfo(this._$)};break;case 11:this.$=u.prepareRawBlock(n[d-2],n[d-1],n[d],this._$);break;case 12:this.$={path:n[d-3],params:n[d-2],hash:n[d-1]};break;case 13:this.$=u.prepareBlock(n[d-3],n[d-2],n[d-1],n[d],!1,this._$);break;case 14:this.$=u.prepareBlock(n[d-3],n[d-2],n[d-1],n[d],!0,this._$);break;case 15:this.$={open:n[d-5],path:n[d-4],params:n[d-3],hash:n[d-2],blockParams:n[d-1],strip:u.stripFlags(n[d-5],n[d])};break;case 16:this.$={path:n[d-4],params:n[d-3],hash:n[d-2],blockParams:n[d-1],strip:u.stripFlags(n[d-5],n[d])};break;case 17:this.$={path:n[d-4],params:n[d-3],hash:n[d-2],blockParams:n[d-1],strip:u.stripFlags(n[d-5],n[d])};break;case 18:this.$={strip:u.stripFlags(n[d-1],n[d-1]),program:n[d]};break;case 19:var g=u.prepareBlock(n[d-2],n[d-1],n[d],n[d],!1,this._$),v=u.prepareProgram([g],n[d-1].loc);v.chained=!0,this.$={strip:n[d-2].strip,program:v,chain:!0};break;case 20:this.$=n[d];break;case 21:this.$={path:n[d-1],strip:u.stripFlags(n[d-2],n[d])};break;case 22:this.$=u.prepareMustache(n[d-3],n[d-2],n[d-1],n[d-4],u.stripFlags(n[d-4],n[d]),this._$);break;case 23:this.$=u.prepareMustache(n[d-3],n[d-2],n[d-1],n[d-4],u.stripFlags(n[d-4],n[d]),this._$);break;case 24:this.$={type:"PartialStatement",name:n[d-3],params:n[d-2],hash:n[d-1],indent:"",strip:u.stripFlags(n[d-4],n[d]),loc:u.locInfo(this._$)};break;case 25:this.$=u.preparePartialBlock(n[d-2],n[d-1],n[d],this._$);break;case 26:this.$={path:n[d-3],params:n[d-2],hash:n[d-1],strip:u.stripFlags(n[d-4],n[d])};break;case 27:this.$=n[d];break;case 28:this.$=n[d];break;case 29:this.$={type:"SubExpression",path:n[d-3],params:n[d-2],hash:n[d-1],loc:u.locInfo(this._$)};break;case 30:this.$={type:"Hash",pairs:n[d],loc:u.locInfo(this._$)};break;case 31:this.$={type:"HashPair",key:u.id(n[d-2]),value:n[d],loc:u.locInfo(this._$)};break;case 32:this.$=u.id(n[d-1]);break;case 33:this.$=n[d];break;case 34:this.$=n[d];break;case 35:this.$={type:"StringLiteral",value:n[d],original:n[d],loc:u.locInfo(this._$)};break;case 36:this.$={type:"NumberLiteral",value:Number(n[d]),original:Number(n[d]),loc:u.locInfo(this._$)};break;case 37:this.$={type:"BooleanLiteral",value:n[d]==="true",original:n[d]==="true",loc:u.locInfo(this._$)};break;case 38:this.$={type:"UndefinedLiteral",original:void 0,value:void 0,loc:u.locInfo(this._$)};break;case 39:this.$={type:"NullLiteral",original:null,value:null,loc:u.locInfo(this._$)};break;case 40:this.$=n[d];break;case 41:this.$=n[d];break;case 42:this.$=u.preparePath(!0,n[d],this._$);break;case 43:this.$=u.preparePath(!1,n[d],this._$);break;case 44:n[d-2].push({part:u.id(n[d]),original:n[d],separator:n[d-1]}),this.$=n[d-2];break;case 45:this.$=[{part:u.id(n[d]),original:n[d]}];break;case 46:this.$=[];break;case 47:n[d-1].push(n[d]);break;case 48:this.$=[];break;case 49:n[d-1].push(n[d]);break;case 50:this.$=[];break;case 51:n[d-1].push(n[d]);break;case 58:this.$=[];break;case 59:n[d-1].push(n[d]);break;case 64:this.$=[];break;case 65:n[d-1].push(n[d]);break;case 70:this.$=[];break;case 71:n[d-1].push(n[d]);break;case 78:this.$=[];break;case 79:n[d-1].push(n[d]);break;case 82:this.$=[];break;case 83:n[d-1].push(n[d]);break;case 86:this.$=[];break;case 87:n[d-1].push(n[d]);break;case 90:this.$=[];break;case 91:n[d-1].push(n[d]);break;case 94:this.$=[];break;case 95:n[d-1].push(n[d]);break;case 98:this.$=[n[d]];break;case 99:n[d-1].push(n[d]);break;case 100:this.$=[n[d]];break;case 101:n[d-1].push(n[d])}},table:[{3:1,4:2,5:[2,46],6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{1:[3]},{5:[1,4]},{5:[2,2],7:5,8:6,9:7,10:8,11:9,12:10,13:11,14:[1,12],15:[1,20],16:17,19:[1,23],24:15,27:16,29:[1,21],34:[1,22],39:[2,2],44:[2,2],47:[2,2],48:[1,13],51:[1,14],55:[1,18],59:19,60:[1,24]},{1:[2,1]},{5:[2,47],14:[2,47],15:[2,47],19:[2,47],29:[2,47],34:[2,47],39:[2,47],44:[2,47],47:[2,47],48:[2,47],51:[2,47],55:[2,47],60:[2,47]},{5:[2,3],14:[2,3],15:[2,3],19:[2,3],29:[2,3],34:[2,3],39:[2,3],44:[2,3],47:[2,3],48:[2,3],51:[2,3],55:[2,3],60:[2,3]},{5:[2,4],14:[2,4],15:[2,4],19:[2,4],29:[2,4],34:[2,4],39:[2,4],44:[2,4],47:[2,4],48:[2,4],51:[2,4],55:[2,4],60:[2,4]},{5:[2,5],14:[2,5],15:[2,5],19:[2,5],29:[2,5],34:[2,5],39:[2,5],44:[2,5],47:[2,5],48:[2,5],51:[2,5],55:[2,5],60:[2,5]},{5:[2,6],14:[2,6],15:[2,6],19:[2,6],29:[2,6],34:[2,6],39:[2,6],44:[2,6],47:[2,6],48:[2,6],51:[2,6],55:[2,6],60:[2,6]},{5:[2,7],14:[2,7],15:[2,7],19:[2,7],29:[2,7],34:[2,7],39:[2,7],44:[2,7],47:[2,7],48:[2,7],51:[2,7],55:[2,7],60:[2,7]},{5:[2,8],14:[2,8],15:[2,8],19:[2,8],29:[2,8],34:[2,8],39:[2,8],44:[2,8],47:[2,8],48:[2,8],51:[2,8],55:[2,8],60:[2,8]},{5:[2,9],14:[2,9],15:[2,9],19:[2,9],29:[2,9],34:[2,9],39:[2,9],44:[2,9],47:[2,9],48:[2,9],51:[2,9],55:[2,9],60:[2,9]},{20:25,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:36,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:37,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],39:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{4:38,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{15:[2,48],17:39,18:[2,48]},{20:41,56:40,64:42,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:44,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{5:[2,10],14:[2,10],15:[2,10],18:[2,10],19:[2,10],29:[2,10],34:[2,10],39:[2,10],44:[2,10],47:[2,10],48:[2,10],51:[2,10],55:[2,10],60:[2,10]},{20:45,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:46,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:47,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:41,56:48,64:42,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[2,78],49:49,65:[2,78],72:[2,78],80:[2,78],81:[2,78],82:[2,78],83:[2,78],84:[2,78],85:[2,78]},{23:[2,33],33:[2,33],54:[2,33],65:[2,33],68:[2,33],72:[2,33],75:[2,33],80:[2,33],81:[2,33],82:[2,33],83:[2,33],84:[2,33],85:[2,33]},{23:[2,34],33:[2,34],54:[2,34],65:[2,34],68:[2,34],72:[2,34],75:[2,34],80:[2,34],81:[2,34],82:[2,34],83:[2,34],84:[2,34],85:[2,34]},{23:[2,35],33:[2,35],54:[2,35],65:[2,35],68:[2,35],72:[2,35],75:[2,35],80:[2,35],81:[2,35],82:[2,35],83:[2,35],84:[2,35],85:[2,35]},{23:[2,36],33:[2,36],54:[2,36],65:[2,36],68:[2,36],72:[2,36],75:[2,36],80:[2,36],81:[2,36],82:[2,36],83:[2,36],84:[2,36],85:[2,36]},{23:[2,37],33:[2,37],54:[2,37],65:[2,37],68:[2,37],72:[2,37],75:[2,37],80:[2,37],81:[2,37],82:[2,37],83:[2,37],84:[2,37],85:[2,37]},{23:[2,38],33:[2,38],54:[2,38],65:[2,38],68:[2,38],72:[2,38],75:[2,38],80:[2,38],81:[2,38],82:[2,38],83:[2,38],84:[2,38],85:[2,38]},{23:[2,39],33:[2,39],54:[2,39],65:[2,39],68:[2,39],72:[2,39],75:[2,39],80:[2,39],81:[2,39],82:[2,39],83:[2,39],84:[2,39],85:[2,39]},{23:[2,43],33:[2,43],54:[2,43],65:[2,43],68:[2,43],72:[2,43],75:[2,43],80:[2,43],81:[2,43],82:[2,43],83:[2,43],84:[2,43],85:[2,43],87:[1,50]},{72:[1,35],86:51},{23:[2,45],33:[2,45],54:[2,45],65:[2,45],68:[2,45],72:[2,45],75:[2,45],80:[2,45],81:[2,45],82:[2,45],83:[2,45],84:[2,45],85:[2,45],87:[2,45]},{52:52,54:[2,82],65:[2,82],72:[2,82],80:[2,82],81:[2,82],82:[2,82],83:[2,82],84:[2,82],85:[2,82]},{25:53,38:55,39:[1,57],43:56,44:[1,58],45:54,47:[2,54]},{28:59,43:60,44:[1,58],47:[2,56]},{13:62,15:[1,20],18:[1,61]},{33:[2,86],57:63,65:[2,86],72:[2,86],80:[2,86],81:[2,86],82:[2,86],83:[2,86],84:[2,86],85:[2,86]},{33:[2,40],65:[2,40],72:[2,40],80:[2,40],81:[2,40],82:[2,40],83:[2,40],84:[2,40],85:[2,40]},{33:[2,41],65:[2,41],72:[2,41],80:[2,41],81:[2,41],82:[2,41],83:[2,41],84:[2,41],85:[2,41]},{20:64,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{26:65,47:[1,66]},{30:67,33:[2,58],65:[2,58],72:[2,58],75:[2,58],80:[2,58],81:[2,58],82:[2,58],83:[2,58],84:[2,58],85:[2,58]},{33:[2,64],35:68,65:[2,64],72:[2,64],75:[2,64],80:[2,64],81:[2,64],82:[2,64],83:[2,64],84:[2,64],85:[2,64]},{21:69,23:[2,50],65:[2,50],72:[2,50],80:[2,50],81:[2,50],82:[2,50],83:[2,50],84:[2,50],85:[2,50]},{33:[2,90],61:70,65:[2,90],72:[2,90],80:[2,90],81:[2,90],82:[2,90],83:[2,90],84:[2,90],85:[2,90]},{20:74,33:[2,80],50:71,63:72,64:75,65:[1,43],69:73,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{72:[1,79]},{23:[2,42],33:[2,42],54:[2,42],65:[2,42],68:[2,42],72:[2,42],75:[2,42],80:[2,42],81:[2,42],82:[2,42],83:[2,42],84:[2,42],85:[2,42],87:[1,50]},{20:74,53:80,54:[2,84],63:81,64:75,65:[1,43],69:82,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{26:83,47:[1,66]},{47:[2,55]},{4:84,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],39:[2,46],44:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{47:[2,20]},{20:85,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{4:86,6:3,14:[2,46],15:[2,46],19:[2,46],29:[2,46],34:[2,46],47:[2,46],48:[2,46],51:[2,46],55:[2,46],60:[2,46]},{26:87,47:[1,66]},{47:[2,57]},{5:[2,11],14:[2,11],15:[2,11],19:[2,11],29:[2,11],34:[2,11],39:[2,11],44:[2,11],47:[2,11],48:[2,11],51:[2,11],55:[2,11],60:[2,11]},{15:[2,49],18:[2,49]},{20:74,33:[2,88],58:88,63:89,64:75,65:[1,43],69:90,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{65:[2,94],66:91,68:[2,94],72:[2,94],80:[2,94],81:[2,94],82:[2,94],83:[2,94],84:[2,94],85:[2,94]},{5:[2,25],14:[2,25],15:[2,25],19:[2,25],29:[2,25],34:[2,25],39:[2,25],44:[2,25],47:[2,25],48:[2,25],51:[2,25],55:[2,25],60:[2,25]},{20:92,72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,31:93,33:[2,60],63:94,64:75,65:[1,43],69:95,70:76,71:77,72:[1,78],75:[2,60],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,33:[2,66],36:96,63:97,64:75,65:[1,43],69:98,70:76,71:77,72:[1,78],75:[2,66],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,22:99,23:[2,52],63:100,64:75,65:[1,43],69:101,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{20:74,33:[2,92],62:102,63:103,64:75,65:[1,43],69:104,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[1,105]},{33:[2,79],65:[2,79],72:[2,79],80:[2,79],81:[2,79],82:[2,79],83:[2,79],84:[2,79],85:[2,79]},{33:[2,81]},{23:[2,27],33:[2,27],54:[2,27],65:[2,27],68:[2,27],72:[2,27],75:[2,27],80:[2,27],81:[2,27],82:[2,27],83:[2,27],84:[2,27],85:[2,27]},{23:[2,28],33:[2,28],54:[2,28],65:[2,28],68:[2,28],72:[2,28],75:[2,28],80:[2,28],81:[2,28],82:[2,28],83:[2,28],84:[2,28],85:[2,28]},{23:[2,30],33:[2,30],54:[2,30],68:[2,30],71:106,72:[1,107],75:[2,30]},{23:[2,98],33:[2,98],54:[2,98],68:[2,98],72:[2,98],75:[2,98]},{23:[2,45],33:[2,45],54:[2,45],65:[2,45],68:[2,45],72:[2,45],73:[1,108],75:[2,45],80:[2,45],81:[2,45],82:[2,45],83:[2,45],84:[2,45],85:[2,45],87:[2,45]},{23:[2,44],33:[2,44],54:[2,44],65:[2,44],68:[2,44],72:[2,44],75:[2,44],80:[2,44],81:[2,44],82:[2,44],83:[2,44],84:[2,44],85:[2,44],87:[2,44]},{54:[1,109]},{54:[2,83],65:[2,83],72:[2,83],80:[2,83],81:[2,83],82:[2,83],83:[2,83],84:[2,83],85:[2,83]},{54:[2,85]},{5:[2,13],14:[2,13],15:[2,13],19:[2,13],29:[2,13],34:[2,13],39:[2,13],44:[2,13],47:[2,13],48:[2,13],51:[2,13],55:[2,13],60:[2,13]},{38:55,39:[1,57],43:56,44:[1,58],45:111,46:110,47:[2,76]},{33:[2,70],40:112,65:[2,70],72:[2,70],75:[2,70],80:[2,70],81:[2,70],82:[2,70],83:[2,70],84:[2,70],85:[2,70]},{47:[2,18]},{5:[2,14],14:[2,14],15:[2,14],19:[2,14],29:[2,14],34:[2,14],39:[2,14],44:[2,14],47:[2,14],48:[2,14],51:[2,14],55:[2,14],60:[2,14]},{33:[1,113]},{33:[2,87],65:[2,87],72:[2,87],80:[2,87],81:[2,87],82:[2,87],83:[2,87],84:[2,87],85:[2,87]},{33:[2,89]},{20:74,63:115,64:75,65:[1,43],67:114,68:[2,96],69:116,70:76,71:77,72:[1,78],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{33:[1,117]},{32:118,33:[2,62],74:119,75:[1,120]},{33:[2,59],65:[2,59],72:[2,59],75:[2,59],80:[2,59],81:[2,59],82:[2,59],83:[2,59],84:[2,59],85:[2,59]},{33:[2,61],75:[2,61]},{33:[2,68],37:121,74:122,75:[1,120]},{33:[2,65],65:[2,65],72:[2,65],75:[2,65],80:[2,65],81:[2,65],82:[2,65],83:[2,65],84:[2,65],85:[2,65]},{33:[2,67],75:[2,67]},{23:[1,123]},{23:[2,51],65:[2,51],72:[2,51],80:[2,51],81:[2,51],82:[2,51],83:[2,51],84:[2,51],85:[2,51]},{23:[2,53]},{33:[1,124]},{33:[2,91],65:[2,91],72:[2,91],80:[2,91],81:[2,91],82:[2,91],83:[2,91],84:[2,91],85:[2,91]},{33:[2,93]},{5:[2,22],14:[2,22],15:[2,22],19:[2,22],29:[2,22],34:[2,22],39:[2,22],44:[2,22],47:[2,22],48:[2,22],51:[2,22],55:[2,22],60:[2,22]},{23:[2,99],33:[2,99],54:[2,99],68:[2,99],72:[2,99],75:[2,99]},{73:[1,108]},{20:74,63:125,64:75,65:[1,43],72:[1,35],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{5:[2,23],14:[2,23],15:[2,23],19:[2,23],29:[2,23],34:[2,23],39:[2,23],44:[2,23],47:[2,23],48:[2,23],51:[2,23],55:[2,23],60:[2,23]},{47:[2,19]},{47:[2,77]},{20:74,33:[2,72],41:126,63:127,64:75,65:[1,43],69:128,70:76,71:77,72:[1,78],75:[2,72],78:26,79:27,80:[1,28],81:[1,29],82:[1,30],83:[1,31],84:[1,32],85:[1,34],86:33},{5:[2,24],14:[2,24],15:[2,24],19:[2,24],29:[2,24],34:[2,24],39:[2,24],44:[2,24],47:[2,24],48:[2,24],51:[2,24],55:[2,24],60:[2,24]},{68:[1,129]},{65:[2,95],68:[2,95],72:[2,95],80:[2,95],81:[2,95],82:[2,95],83:[2,95],84:[2,95],85:[2,95]},{68:[2,97]},{5:[2,21],14:[2,21],15:[2,21],19:[2,21],29:[2,21],34:[2,21],39:[2,21],44:[2,21],47:[2,21],48:[2,21],51:[2,21],55:[2,21],60:[2,21]},{33:[1,130]},{33:[2,63]},{72:[1,132],76:131},{33:[1,133]},{33:[2,69]},{15:[2,12],18:[2,12]},{14:[2,26],15:[2,26],19:[2,26],29:[2,26],34:[2,26],47:[2,26],48:[2,26],51:[2,26],55:[2,26],60:[2,26]},{23:[2,31],33:[2,31],54:[2,31],68:[2,31],72:[2,31],75:[2,31]},{33:[2,74],42:134,74:135,75:[1,120]},{33:[2,71],65:[2,71],72:[2,71],75:[2,71],80:[2,71],81:[2,71],82:[2,71],83:[2,71],84:[2,71],85:[2,71]},{33:[2,73],75:[2,73]},{23:[2,29],33:[2,29],54:[2,29],65:[2,29],68:[2,29],72:[2,29],75:[2,29],80:[2,29],81:[2,29],82:[2,29],83:[2,29],84:[2,29],85:[2,29]},{14:[2,15],15:[2,15],19:[2,15],29:[2,15],34:[2,15],39:[2,15],44:[2,15],47:[2,15],48:[2,15],51:[2,15],55:[2,15],60:[2,15]},{72:[1,137],77:[1,136]},{72:[2,100],77:[2,100]},{14:[2,16],15:[2,16],19:[2,16],29:[2,16],34:[2,16],44:[2,16],47:[2,16],48:[2,16],51:[2,16],55:[2,16],60:[2,16]},{33:[1,138]},{33:[2,75]},{33:[2,32]},{72:[2,101],77:[2,101]},{14:[2,17],15:[2,17],19:[2,17],29:[2,17],34:[2,17],39:[2,17],44:[2,17],47:[2,17],48:[2,17],51:[2,17],55:[2,17],60:[2,17]}],defaultActions:{4:[2,1],54:[2,55],56:[2,20],60:[2,57],73:[2,81],82:[2,85],86:[2,18],90:[2,89],101:[2,53],104:[2,93],110:[2,19],111:[2,77],116:[2,97],119:[2,63],122:[2,69],135:[2,75],136:[2,32]},parseError:function(c,l){throw new Error(c)},parse:function(c){function l(){var U;return U=o.lexer.lex()||1,typeof U!="number"&&(U=o.symbols_[U]||U),U}var o=this,u=[0],m=[null],n=[],h=this.table,d="",g=0,v=0,y=0;this.lexer.setInput(c),this.lexer.yy=this.yy,this.yy.lexer=this.lexer,this.yy.parser=this,typeof this.lexer.yylloc=="undefined"&&(this.lexer.yylloc={});var P=this.lexer.yylloc;n.push(P);var A=this.lexer.options&&this.lexer.options.ranges;typeof this.yy.parseError=="function"&&(this.parseError=this.yy.parseError);for(var E,C,_,R,j,D,k,x,I,G={};;){if(_=u[u.length-1],this.defaultActions[_]?R=this.defaultActions[_]:(E!==null&&typeof E!="undefined"||(E=l()),R=h[_]&&h[_][E]),typeof R=="undefined"||!R.length||!R[0]){var O="";if(!y){I=[];for(D in h[_])this.terminals_[D]&&D>2&&I.push("'"+this.terminals_[D]+"'");O=this.lexer.showPosition?"Parse error on line "+(g+1)+`:
`+this.lexer.showPosition()+`
Expecting `+I.join(", ")+", got '"+(this.terminals_[E]||E)+"'":"Parse error on line "+(g+1)+": Unexpected "+(E==1?"end of input":"'"+(this.terminals_[E]||E)+"'"),this.parseError(O,{text:this.lexer.match,token:this.terminals_[E]||E,line:this.lexer.yylineno,loc:P,expected:I})}}if(R[0]instanceof Array&&R.length>1)throw new Error("Parse Error: multiple actions possible at state: "+_+", token: "+E);switch(R[0]){case 1:u.push(E),m.push(this.lexer.yytext),n.push(this.lexer.yylloc),u.push(R[1]),E=null,C?(E=C,C=null):(v=this.lexer.yyleng,d=this.lexer.yytext,g=this.lexer.yylineno,P=this.lexer.yylloc,y>0&&y--);break;case 2:if(k=this.productions_[R[1]][1],G.$=m[m.length-k],G._$={first_line:n[n.length-(k||1)].first_line,last_line:n[n.length-1].last_line,first_column:n[n.length-(k||1)].first_column,last_column:n[n.length-1].last_column},A&&(G._$.range=[n[n.length-(k||1)].range[0],n[n.length-1].range[1]]),j=this.performAction.call(G,d,v,g,this.yy,R[1],m,n),typeof j!="undefined")return j;k&&(u=u.slice(0,-1*k*2),m=m.slice(0,-1*k),n=n.slice(0,-1*k)),u.push(this.productions_[R[1]][0]),m.push(G.$),n.push(G._$),x=h[u[u.length-2]][u[u.length-1]],u.push(x);break;case 3:return!0}}return!0}},p=function(){var c={EOF:1,parseError:function(l,o){if(!this.yy.parser)throw new Error(l);this.yy.parser.parseError(l,o)},setInput:function(l){return this._input=l,this._more=this._less=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var l=this._input[0];this.yytext+=l,this.yyleng++,this.offset++,this.match+=l,this.matched+=l;var o=l.match(/(?:\r\n?|\n).*/g);return o?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),l},unput:function(l){var o=l.length,u=l.split(/(?:\r\n?|\n)/g);this._input=l+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-o-1),this.offset-=o;var m=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),u.length-1&&(this.yylineno-=u.length-1);var n=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:u?(u.length===m.length?this.yylloc.first_column:0)+m[m.length-u.length].length-u[0].length:this.yylloc.first_column-o},this.options.ranges&&(this.yylloc.range=[n[0],n[0]+this.yyleng-o]),this},more:function(){return this._more=!0,this},less:function(l){this.unput(this.match.slice(l))},pastInput:function(){var l=this.matched.substr(0,this.matched.length-this.match.length);return(l.length>20?"...":"")+l.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var l=this.match;return l.length<20&&(l+=this._input.substr(0,20-l.length)),(l.substr(0,20)+(l.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var l=this.pastInput(),o=new Array(l.length+1).join("-");return l+this.upcomingInput()+`
`+o+"^"},next:function(){if(this.done)return this.EOF;this._input||(this.done=!0);var l,o,u,m,n;this._more||(this.yytext="",this.match="");for(var h=this._currentRules(),d=0;d<h.length&&(u=this._input.match(this.rules[h[d]]),!u||o&&!(u[0].length>o[0].length)||(o=u,m=d,this.options.flex));d++);return o?(n=o[0].match(/(?:\r\n?|\n).*/g),n&&(this.yylineno+=n.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:n?n[n.length-1].length-n[n.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+o[0].length},this.yytext+=o[0],this.match+=o[0],this.matches=o,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._input=this._input.slice(o[0].length),this.matched+=o[0],l=this.performAction.call(this,this.yy,this,h[m],this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),l||void 0):this._input===""?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+`. Unrecognized text.
`+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){var l=this.next();return typeof l!="undefined"?l:this.lex()},begin:function(l){this.conditionStack.push(l)},popState:function(){return this.conditionStack.pop()},_currentRules:function(){return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules},topState:function(){return this.conditionStack[this.conditionStack.length-2]},pushState:function(l){this.begin(l)}};return c.options={},c.performAction=function(l,o,u,m){function n(h,d){return o.yytext=o.yytext.substring(h,o.yyleng-d+h)}switch(u){case 0:if(o.yytext.slice(-2)==="\\\\"?(n(0,1),this.begin("mu")):o.yytext.slice(-1)==="\\"?(n(0,1),this.begin("emu")):this.begin("mu"),o.yytext)return 15;break;case 1:return 15;case 2:return this.popState(),15;case 3:return this.begin("raw"),15;case 4:return this.popState(),this.conditionStack[this.conditionStack.length-1]==="raw"?15:(n(5,9),"END_RAW_BLOCK");case 5:return 15;case 6:return this.popState(),14;case 7:return 65;case 8:return 68;case 9:return 19;case 10:return this.popState(),this.begin("raw"),23;case 11:return 55;case 12:return 60;case 13:return 29;case 14:return 47;case 15:return this.popState(),44;case 16:return this.popState(),44;case 17:return 34;case 18:return 39;case 19:return 51;case 20:return 48;case 21:this.unput(o.yytext),this.popState(),this.begin("com");break;case 22:return this.popState(),14;case 23:return 48;case 24:return 73;case 25:return 72;case 26:return 72;case 27:return 87;case 28:break;case 29:return this.popState(),54;case 30:return this.popState(),33;case 31:return o.yytext=n(1,2).replace(/\\"/g,'"'),80;case 32:return o.yytext=n(1,2).replace(/\\'/g,"'"),80;case 33:return 85;case 34:return 82;case 35:return 82;case 36:return 83;case 37:return 84;case 38:return 81;case 39:return 75;case 40:return 77;case 41:return 72;case 42:return o.yytext=o.yytext.replace(/\\([\\\]])/g,"$1"),72;case 43:return"INVALID";case 44:return 5}},c.rules=[/^(?:[^\x00]*?(?=(\{\{)))/,/^(?:[^\x00]+)/,/^(?:[^\x00]{2,}?(?=(\{\{|\\\{\{|\\\\\{\{|$)))/,/^(?:\{\{\{\{(?=[^\/]))/,/^(?:\{\{\{\{\/[^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=[=}\s\/.])\}\}\}\})/,/^(?:[^\x00]+?(?=(\{\{\{\{)))/,/^(?:[\s\S]*?--(~)?\}\})/,/^(?:\()/,/^(?:\))/,/^(?:\{\{\{\{)/,/^(?:\}\}\}\})/,/^(?:\{\{(~)?>)/,/^(?:\{\{(~)?#>)/,/^(?:\{\{(~)?#\*?)/,/^(?:\{\{(~)?\/)/,/^(?:\{\{(~)?\^\s*(~)?\}\})/,/^(?:\{\{(~)?\s*else\s*(~)?\}\})/,/^(?:\{\{(~)?\^)/,/^(?:\{\{(~)?\s*else\b)/,/^(?:\{\{(~)?\{)/,/^(?:\{\{(~)?&)/,/^(?:\{\{(~)?!--)/,/^(?:\{\{(~)?![\s\S]*?\}\})/,/^(?:\{\{(~)?\*?)/,/^(?:=)/,/^(?:\.\.)/,/^(?:\.(?=([=~}\s\/.)|])))/,/^(?:[\/.])/,/^(?:\s+)/,/^(?:\}(~)?\}\})/,/^(?:(~)?\}\})/,/^(?:"(\\["]|[^"])*")/,/^(?:'(\\[']|[^'])*')/,/^(?:@)/,/^(?:true(?=([~}\s)])))/,/^(?:false(?=([~}\s)])))/,/^(?:undefined(?=([~}\s)])))/,/^(?:null(?=([~}\s)])))/,/^(?:-?[0-9]+(?:\.[0-9]+)?(?=([~}\s)])))/,/^(?:as\s+\|)/,/^(?:\|)/,/^(?:([^\s!"#%-,\.\/;->@\[-\^`\{-~]+(?=([=~}\s\/.)|]))))/,/^(?:\[(\\\]|[^\]])*\])/,/^(?:.)/,/^(?:$)/],c.conditions={mu:{rules:[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],inclusive:!1},emu:{rules:[2],inclusive:!1},com:{rules:[6],inclusive:!1},raw:{rules:[3,4,5],inclusive:!1},INITIAL:{rules:[0,1,44],inclusive:!0}},c}();return r.lexer=p,i.prototype=r,r.Parser=i,new i}();s.default=f,b.exports=s.default},function(b,s,f){"use strict";function i(){var n=arguments.length<=0||arguments[0]===void 0?{}:arguments[0];this.options=n}function r(n,h,d){h===void 0&&(h=n.length);var g=n[h-1],v=n[h-2];return g?g.type==="ContentStatement"?(v||!d?/\r?\n\s*?$/:/(^|\r?\n)\s*?$/).test(g.original):void 0:d}function p(n,h,d){h===void 0&&(h=-1);var g=n[h+1],v=n[h+2];return g?g.type==="ContentStatement"?(v||!d?/^\s*?\r?\n/:/^\s*?(\r?\n|$)/).test(g.original):void 0:d}function c(n,h,d){var g=n[h==null?0:h+1];if(g&&g.type==="ContentStatement"&&(d||!g.rightStripped)){var v=g.value;g.value=g.value.replace(d?/^\s+/:/^[ \t]*\r?\n?/,""),g.rightStripped=g.value!==v}}function l(n,h,d){var g=n[h==null?n.length-1:h-1];if(g&&g.type==="ContentStatement"&&(d||!g.leftStripped)){var v=g.value;return g.value=g.value.replace(d?/\s+$/:/[ \t]+$/,""),g.leftStripped=g.value!==v,g.leftStripped}}var o=f(1).default;s.__esModule=!0;var u=f(49),m=o(u);i.prototype=new m.default,i.prototype.Program=function(n){var h=!this.options.ignoreStandalone,d=!this.isRootSeen;this.isRootSeen=!0;for(var g=n.body,v=0,y=g.length;v<y;v++){var P=g[v],A=this.accept(P);if(A){var E=r(g,v,d),C=p(g,v,d),_=A.openStandalone&&E,R=A.closeStandalone&&C,j=A.inlineStandalone&&E&&C;A.close&&c(g,v,!0),A.open&&l(g,v,!0),h&&j&&(c(g,v),l(g,v)&&P.type==="PartialStatement"&&(P.indent=/([ \t]+$)/.exec(g[v-1].original)[1])),h&&_&&(c((P.program||P.inverse).body),l(g,v)),h&&R&&(c(g,v),l((P.inverse||P.program).body))}}return n},i.prototype.BlockStatement=i.prototype.DecoratorBlock=i.prototype.PartialBlockStatement=function(n){this.accept(n.program),this.accept(n.inverse);var h=n.program||n.inverse,d=n.program&&n.inverse,g=d,v=d;if(d&&d.chained)for(g=d.body[0].program;v.chained;)v=v.body[v.body.length-1].program;var y={open:n.openStrip.open,close:n.closeStrip.close,openStandalone:p(h.body),closeStandalone:r((g||h).body)};if(n.openStrip.close&&c(h.body,null,!0),d){var P=n.inverseStrip;P.open&&l(h.body,null,!0),P.close&&c(g.body,null,!0),n.closeStrip.open&&l(v.body,null,!0),!this.options.ignoreStandalone&&r(h.body)&&p(g.body)&&(l(h.body),c(g.body))}else n.closeStrip.open&&l(h.body,null,!0);return y},i.prototype.Decorator=i.prototype.MustacheStatement=function(n){return n.strip},i.prototype.PartialStatement=i.prototype.CommentStatement=function(n){var h=n.strip||{};return{inlineStandalone:!0,open:h.open,close:h.close}},s.default=i,b.exports=s.default},function(b,s,f){"use strict";function i(){this.parents=[]}function r(m){this.acceptRequired(m,"path"),this.acceptArray(m.params),this.acceptKey(m,"hash")}function p(m){r.call(this,m),this.acceptKey(m,"program"),this.acceptKey(m,"inverse")}function c(m){this.acceptRequired(m,"name"),this.acceptArray(m.params),this.acceptKey(m,"hash")}var l=f(1).default;s.__esModule=!0;var o=f(6),u=l(o);i.prototype={constructor:i,mutating:!1,acceptKey:function(m,n){var h=this.accept(m[n]);if(this.mutating){if(h&&!i.prototype[h.type])throw new u.default('Unexpected node type "'+h.type+'" found when accepting '+n+" on "+m.type);m[n]=h}},acceptRequired:function(m,n){if(this.acceptKey(m,n),!m[n])throw new u.default(m.type+" requires "+n)},acceptArray:function(m){for(var n=0,h=m.length;n<h;n++)this.acceptKey(m,n),m[n]||(m.splice(n,1),n--,h--)},accept:function(m){if(m){if(!this[m.type])throw new u.default("Unknown type: "+m.type,m);this.current&&this.parents.unshift(this.current),this.current=m;var n=this[m.type](m);return this.current=this.parents.shift(),!this.mutating||n?n:n!==!1?m:void 0}},Program:function(m){this.acceptArray(m.body)},MustacheStatement:r,Decorator:r,BlockStatement:p,DecoratorBlock:p,PartialStatement:c,PartialBlockStatement:function(m){c.call(this,m),this.acceptKey(m,"program")},ContentStatement:function(){},CommentStatement:function(){},SubExpression:r,PathExpression:function(){},StringLiteral:function(){},NumberLiteral:function(){},BooleanLiteral:function(){},UndefinedLiteral:function(){},NullLiteral:function(){},Hash:function(m){this.acceptArray(m.pairs)},HashPair:function(m){this.acceptRequired(m,"value")}},s.default=i,b.exports=s.default},function(b,s,f){"use strict";function i(P,A){if(A=A.path?A.path.original:A,P.path.original!==A){var E={loc:P.path.loc};throw new y.default(P.path.original+" doesn't match "+A,E)}}function r(P,A){this.source=P,this.start={line:A.first_line,column:A.first_column},this.end={line:A.last_line,column:A.last_column}}function p(P){return/^\[.*\]$/.test(P)?P.substring(1,P.length-1):P}function c(P,A){return{open:P.charAt(2)==="~",close:A.charAt(A.length-3)==="~"}}function l(P){return P.replace(/^\{\{~?!-?-?/,"").replace(/-?-?~?\}\}$/,"")}function o(P,A,E){E=this.locInfo(E);for(var C=P?"@":"",_=[],R=0,j=0,D=A.length;j<D;j++){var k=A[j].part,x=A[j].original!==k;if(C+=(A[j].separator||"")+k,x||k!==".."&&k!=="."&&k!=="this")_.push(k);else{if(_.length>0)throw new y.default("Invalid path: "+C,{loc:E});k===".."&&R++}}return{type:"PathExpression",data:P,depth:R,parts:_,original:C,loc:E}}function u(P,A,E,C,_,R){var j=C.charAt(3)||C.charAt(2),D=j!=="{"&&j!=="&",k=/\*/.test(C);return{type:k?"Decorator":"MustacheStatement",path:P,params:A,hash:E,escaped:D,strip:_,loc:this.locInfo(R)}}function m(P,A,E,C){i(P,E),C=this.locInfo(C);var _={type:"Program",body:A,strip:{},loc:C};return{type:"BlockStatement",path:P.path,params:P.params,hash:P.hash,program:_,openStrip:{},inverseStrip:{},closeStrip:{},loc:C}}function n(P,A,E,C,_,R){C&&C.path&&i(P,C);var j=/\*/.test(P.open);A.blockParams=P.blockParams;var D=void 0,k=void 0;if(E){if(j)throw new y.default("Unexpected inverse block on decorator",E);E.chain&&(E.program.body[0].closeStrip=C.strip),k=E.strip,D=E.program}return _&&(_=D,D=A,A=_),{type:j?"DecoratorBlock":"BlockStatement",path:P.path,params:P.params,hash:P.hash,program:A,inverse:D,openStrip:P.strip,inverseStrip:k,closeStrip:C&&C.strip,loc:this.locInfo(R)}}function h(P,A){if(!A&&P.length){var E=P[0].loc,C=P[P.length-1].loc;E&&C&&(A={source:E.source,start:{line:E.start.line,column:E.start.column},end:{line:C.end.line,column:C.end.column}})}return{type:"Program",body:P,strip:{},loc:A}}function d(P,A,E,C){return i(P,E),{type:"PartialBlockStatement",name:P.path,params:P.params,hash:P.hash,program:A,openStrip:P.strip,closeStrip:E&&E.strip,loc:this.locInfo(C)}}var g=f(1).default;s.__esModule=!0,s.SourceLocation=r,s.id=p,s.stripFlags=c,s.stripComment=l,s.preparePath=o,s.prepareMustache=u,s.prepareRawBlock=m,s.prepareBlock=n,s.prepareProgram=h,s.preparePartialBlock=d;var v=f(6),y=g(v)},function(b,s,f){"use strict";function i(){}function r(y,P,A){if(y==null||typeof y!="string"&&y.type!=="Program")throw new n.default("You must pass a string or Handlebars AST to Handlebars.precompile. You passed "+y);P=P||{},"data"in P||(P.data=!0),P.compat&&(P.useDepths=!0);var E=A.parse(y,P),C=new A.Compiler().compile(E,P);return new A.JavaScriptCompiler().compile(C,P)}function p(y,P,A){function E(){var R=A.parse(y,P),j=new A.Compiler().compile(R,P),D=new A.JavaScriptCompiler().compile(j,P,void 0,!0);return A.template(D)}function C(R,j){return _||(_=E()),_.call(this,R,j)}if(P===void 0&&(P={}),y==null||typeof y!="string"&&y.type!=="Program")throw new n.default("You must pass a string or Handlebars AST to Handlebars.compile. You passed "+y);P=h.extend({},P),"data"in P||(P.data=!0),P.compat&&(P.useDepths=!0);var _=void 0;return C._setup=function(R){return _||(_=E()),_._setup(R)},C._child=function(R,j,D,k){return _||(_=E()),_._child(R,j,D,k)},C}function c(y,P){if(y===P)return!0;if(h.isArray(y)&&h.isArray(P)&&y.length===P.length){for(var A=0;A<y.length;A++)if(!c(y[A],P[A]))return!1;return!0}}function l(y){if(!y.path.parts){var P=y.path;y.path={type:"PathExpression",data:!1,depth:0,parts:[P.original+""],original:P.original+"",loc:P.loc}}}var o=f(34).default,u=f(1).default;s.__esModule=!0,s.Compiler=i,s.precompile=r,s.compile=p;var m=f(6),n=u(m),h=f(5),d=f(45),g=u(d),v=[].slice;i.prototype={compiler:i,equals:function(y){var P=this.opcodes.length;if(y.opcodes.length!==P)return!1;for(var A=0;A<P;A++){var E=this.opcodes[A],C=y.opcodes[A];if(E.opcode!==C.opcode||!c(E.args,C.args))return!1}P=this.children.length;for(var A=0;A<P;A++)if(!this.children[A].equals(y.children[A]))return!1;return!0},guid:0,compile:function(y,P){return this.sourceNode=[],this.opcodes=[],this.children=[],this.options=P,this.stringParams=P.stringParams,this.trackIds=P.trackIds,P.blockParams=P.blockParams||[],P.knownHelpers=h.extend(o(null),{helperMissing:!0,blockHelperMissing:!0,each:!0,if:!0,unless:!0,with:!0,log:!0,lookup:!0},P.knownHelpers),this.accept(y)},compileProgram:function(y){var P=new this.compiler,A=P.compile(y,this.options),E=this.guid++;return this.usePartial=this.usePartial||A.usePartial,this.children[E]=A,this.useDepths=this.useDepths||A.useDepths,E},accept:function(y){if(!this[y.type])throw new n.default("Unknown type: "+y.type,y);this.sourceNode.unshift(y);var P=this[y.type](y);return this.sourceNode.shift(),P},Program:function(y){this.options.blockParams.unshift(y.blockParams);for(var P=y.body,A=P.length,E=0;E<A;E++)this.accept(P[E]);return this.options.blockParams.shift(),this.isSimple=A===1,this.blockParams=y.blockParams?y.blockParams.length:0,this},BlockStatement:function(y){l(y);var P=y.program,A=y.inverse;P=P&&this.compileProgram(P),A=A&&this.compileProgram(A);var E=this.classifySexpr(y);E==="helper"?this.helperSexpr(y,P,A):E==="simple"?(this.simpleSexpr(y),this.opcode("pushProgram",P),this.opcode("pushProgram",A),this.opcode("emptyHash"),this.opcode("blockValue",y.path.original)):(this.ambiguousSexpr(y,P,A),this.opcode("pushProgram",P),this.opcode("pushProgram",A),this.opcode("emptyHash"),this.opcode("ambiguousBlockValue")),this.opcode("append")},DecoratorBlock:function(y){var P=y.program&&this.compileProgram(y.program),A=this.setupFullMustacheParams(y,P,void 0),E=y.path;this.useDecorators=!0,this.opcode("registerDecorator",A.length,E.original)},PartialStatement:function(y){this.usePartial=!0;var P=y.program;P&&(P=this.compileProgram(y.program));var A=y.params;if(A.length>1)throw new n.default("Unsupported number of partial arguments: "+A.length,y);A.length||(this.options.explicitPartialContext?this.opcode("pushLiteral","undefined"):A.push({type:"PathExpression",parts:[],depth:0}));var E=y.name.original,C=y.name.type==="SubExpression";C&&this.accept(y.name),this.setupFullMustacheParams(y,P,void 0,!0);var _=y.indent||"";this.options.preventIndent&&_&&(this.opcode("appendContent",_),_=""),this.opcode("invokePartial",C,E,_),this.opcode("append")},PartialBlockStatement:function(y){this.PartialStatement(y)},MustacheStatement:function(y){this.SubExpression(y),y.escaped&&!this.options.noEscape?this.opcode("appendEscaped"):this.opcode("append")},Decorator:function(y){this.DecoratorBlock(y)},ContentStatement:function(y){y.value&&this.opcode("appendContent",y.value)},CommentStatement:function(){},SubExpression:function(y){l(y);var P=this.classifySexpr(y);P==="simple"?this.simpleSexpr(y):P==="helper"?this.helperSexpr(y):this.ambiguousSexpr(y)},ambiguousSexpr:function(y,P,A){var E=y.path,C=E.parts[0],_=P!=null||A!=null;this.opcode("getContext",E.depth),this.opcode("pushProgram",P),this.opcode("pushProgram",A),E.strict=!0,this.accept(E),this.opcode("invokeAmbiguous",C,_)},simpleSexpr:function(y){var P=y.path;P.strict=!0,this.accept(P),this.opcode("resolvePossibleLambda")},helperSexpr:function(y,P,A){var E=this.setupFullMustacheParams(y,P,A),C=y.path,_=C.parts[0];if(this.options.knownHelpers[_])this.opcode("invokeKnownHelper",E.length,_);else{if(this.options.knownHelpersOnly)throw new n.default("You specified knownHelpersOnly, but used the unknown helper "+_,y);C.strict=!0,C.falsy=!0,this.accept(C),this.opcode("invokeHelper",E.length,C.original,g.default.helpers.simpleId(C))}},PathExpression:function(y){this.addDepth(y.depth),this.opcode("getContext",y.depth);var P=y.parts[0],A=g.default.helpers.scopedId(y),E=!y.depth&&!A&&this.blockParamIndex(P);E?this.opcode("lookupBlockParam",E,y.parts):P?y.data?(this.options.data=!0,this.opcode("lookupData",y.depth,y.parts,y.strict)):this.opcode("lookupOnContext",y.parts,y.falsy,y.strict,A):this.opcode("pushContext")},StringLiteral:function(y){this.opcode("pushString",y.value)},NumberLiteral:function(y){this.opcode("pushLiteral",y.value)},BooleanLiteral:function(y){this.opcode("pushLiteral",y.value)},UndefinedLiteral:function(){this.opcode("pushLiteral","undefined")},NullLiteral:function(){this.opcode("pushLiteral","null")},Hash:function(y){var P=y.pairs,A=0,E=P.length;for(this.opcode("pushHash");A<E;A++)this.pushParam(P[A].value);for(;A--;)this.opcode("assignToHash",P[A].key);this.opcode("popHash")},opcode:function(y){this.opcodes.push({opcode:y,args:v.call(arguments,1),loc:this.sourceNode[0].loc})},addDepth:function(y){y&&(this.useDepths=!0)},classifySexpr:function(y){var P=g.default.helpers.simpleId(y.path),A=P&&!!this.blockParamIndex(y.path.parts[0]),E=!A&&g.default.helpers.helperExpression(y),C=!A&&(E||P);if(C&&!E){var _=y.path.parts[0],R=this.options;R.knownHelpers[_]?E=!0:R.knownHelpersOnly&&(C=!1)}return E?"helper":C?"ambiguous":"simple"},pushParams:function(y){for(var P=0,A=y.length;P<A;P++)this.pushParam(y[P])},pushParam:function(y){var P=y.value!=null?y.value:y.original||"";if(this.stringParams)P.replace&&(P=P.replace(/^(\.?\.\/)*/g,"").replace(/\//g,".")),y.depth&&this.addDepth(y.depth),this.opcode("getContext",y.depth||0),this.opcode("pushStringParam",P,y.type),y.type==="SubExpression"&&this.accept(y);else{if(this.trackIds){var A=void 0;if(!y.parts||g.default.helpers.scopedId(y)||y.depth||(A=this.blockParamIndex(y.parts[0])),A){var E=y.parts.slice(1).join(".");this.opcode("pushId","BlockParam",A,E)}else P=y.original||P,P.replace&&(P=P.replace(/^this(?:\.|$)/,"").replace(/^\.\//,"").replace(/^\.$/,"")),this.opcode("pushId",y.type,P)}this.accept(y)}},setupFullMustacheParams:function(y,P,A,E){var C=y.params;return this.pushParams(C),this.opcode("pushProgram",P),this.opcode("pushProgram",A),y.hash?this.accept(y.hash):this.opcode("emptyHash",E),C},blockParamIndex:function(y){for(var P=0,A=this.options.blockParams.length;P<A;P++){var E=this.options.blockParams[P],C=E&&h.indexOf(E,y);if(E&&C>=0)return[P,C]}}}},function(b,s,f){"use strict";function i(g){this.value=g}function r(){}function p(g,v,y,P){var A=v.popStack(),E=0,C=y.length;for(g&&C--;E<C;E++)A=v.nameLookup(A,y[E],P);return g?[v.aliasable("container.strict"),"(",A,", ",v.quotedString(y[E]),", ",JSON.stringify(v.source.currentLocation)," )"]:A}var c=f(13).default,l=f(1).default;s.__esModule=!0;var o=f(4),u=f(6),m=l(u),n=f(5),h=f(53),d=l(h);r.prototype={nameLookup:function(g,v){return this.internalNameLookup(g,v)},depthedLookup:function(g){return[this.aliasable("container.lookup"),"(depths, ",JSON.stringify(g),")"]},compilerInfo:function(){var g=o.COMPILER_REVISION,v=o.REVISION_CHANGES[g];return[g,v]},appendToBuffer:function(g,v,y){return n.isArray(g)||(g=[g]),g=this.source.wrap(g,v),this.environment.isSimple?["return ",g,";"]:y?["buffer += ",g,";"]:(g.appendToBuffer=!0,g)},initializeBuffer:function(){return this.quotedString("")},internalNameLookup:function(g,v){return this.lookupPropertyFunctionIsUsed=!0,["lookupProperty(",g,",",JSON.stringify(v),")"]},lookupPropertyFunctionIsUsed:!1,compile:function(g,v,y,P){this.environment=g,this.options=v,this.stringParams=this.options.stringParams,this.trackIds=this.options.trackIds,this.precompile=!P,this.name=this.environment.name,this.isChild=!!y,this.context=y||{decorators:[],programs:[],environments:[]},this.preamble(),this.stackSlot=0,this.stackVars=[],this.aliases={},this.registers={list:[]},this.hashes=[],this.compileStack=[],this.inlineStack=[],this.blockParams=[],this.compileChildren(g,v),this.useDepths=this.useDepths||g.useDepths||g.useDecorators||this.options.compat,this.useBlockParams=this.useBlockParams||g.useBlockParams;var A=g.opcodes,E=void 0,C=void 0,_=void 0,R=void 0;for(_=0,R=A.length;_<R;_++)E=A[_],this.source.currentLocation=E.loc,C=C||E.loc,this[E.opcode].apply(this,E.args);if(this.source.currentLocation=C,this.pushSource(""),this.stackSlot||this.inlineStack.length||this.compileStack.length)throw new m.default("Compile completed with content left on stack");this.decorators.isEmpty()?this.decorators=void 0:(this.useDecorators=!0,this.decorators.prepend(["var decorators = container.decorators, ",this.lookupPropertyFunctionVarDeclaration(),`;
`]),this.decorators.push("return fn;"),P?this.decorators=Function.apply(this,["fn","props","container","depth0","data","blockParams","depths",this.decorators.merge()]):(this.decorators.prepend(`function(fn, props, container, depth0, data, blockParams, depths) {
`),this.decorators.push(`}
`),this.decorators=this.decorators.merge()));var j=this.createFunctionContext(P);if(this.isChild)return j;var D={compiler:this.compilerInfo(),main:j};this.decorators&&(D.main_d=this.decorators,D.useDecorators=!0);var k=this.context,x=k.programs,I=k.decorators;for(_=0,R=x.length;_<R;_++)x[_]&&(D[_]=x[_],I[_]&&(D[_+"_d"]=I[_],D.useDecorators=!0));return this.environment.usePartial&&(D.usePartial=!0),this.options.data&&(D.useData=!0),this.useDepths&&(D.useDepths=!0),this.useBlockParams&&(D.useBlockParams=!0),this.options.compat&&(D.compat=!0),P?D.compilerOptions=this.options:(D.compiler=JSON.stringify(D.compiler),this.source.currentLocation={start:{line:1,column:0}},D=this.objectLiteral(D),v.srcName?(D=D.toStringWithSourceMap({file:v.destName}),D.map=D.map&&D.map.toString()):D=D.toString()),D},preamble:function(){this.lastContext=0,this.source=new d.default(this.options.srcName),this.decorators=new d.default(this.options.srcName)},createFunctionContext:function(g){var v=this,y="",P=this.stackVars.concat(this.registers.list);P.length>0&&(y+=", "+P.join(", "));var A=0;c(this.aliases).forEach(function(_){var R=v.aliases[_];R.children&&R.referenceCount>1&&(y+=", alias"+ ++A+"="+_,R.children[0]="alias"+A)}),this.lookupPropertyFunctionIsUsed&&(y+=", "+this.lookupPropertyFunctionVarDeclaration());var E=["container","depth0","helpers","partials","data"];(this.useBlockParams||this.useDepths)&&E.push("blockParams"),this.useDepths&&E.push("depths");var C=this.mergeSource(y);return g?(E.push(C),Function.apply(this,E)):this.source.wrap(["function(",E.join(","),`) {
  `,C,"}"])},mergeSource:function(g){var v=this.environment.isSimple,y=!this.forceBuffer,P=void 0,A=void 0,E=void 0,C=void 0;return this.source.each(function(_){_.appendToBuffer?(E?_.prepend("  + "):E=_,C=_):(E&&(A?E.prepend("buffer += "):P=!0,C.add(";"),E=C=void 0),A=!0,v||(y=!1))}),y?E?(E.prepend("return "),C.add(";")):A||this.source.push('return "";'):(g+=", buffer = "+(P?"":this.initializeBuffer()),E?(E.prepend("return buffer + "),C.add(";")):this.source.push("return buffer;")),g&&this.source.prepend("var "+g.substring(2)+(P?"":`;
`)),this.source.merge()},lookupPropertyFunctionVarDeclaration:function(){return`
      lookupProperty = container.lookupProperty || function(parent, propertyName) {
        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {
          return parent[propertyName];
        }
        return undefined
    }
    `.trim()},blockValue:function(g){var v=this.aliasable("container.hooks.blockHelperMissing"),y=[this.contextName(0)];this.setupHelperArgs(g,0,y);var P=this.popStack();y.splice(1,0,P),this.push(this.source.functionCall(v,"call",y))},ambiguousBlockValue:function(){var g=this.aliasable("container.hooks.blockHelperMissing"),v=[this.contextName(0)];this.setupHelperArgs("",0,v,!0),this.flushInline();var y=this.topStack();v.splice(1,0,y),this.pushSource(["if (!",this.lastHelper,") { ",y," = ",this.source.functionCall(g,"call",v),"}"])},appendContent:function(g){this.pendingContent?g=this.pendingContent+g:this.pendingLocation=this.source.currentLocation,this.pendingContent=g},append:function(){if(this.isInline())this.replaceStack(function(v){return[" != null ? ",v,' : ""']}),this.pushSource(this.appendToBuffer(this.popStack()));else{var g=this.popStack();this.pushSource(["if (",g," != null) { ",this.appendToBuffer(g,void 0,!0)," }"]),this.environment.isSimple&&this.pushSource(["else { ",this.appendToBuffer("''",void 0,!0)," }"])}},appendEscaped:function(){this.pushSource(this.appendToBuffer([this.aliasable("container.escapeExpression"),"(",this.popStack(),")"]))},getContext:function(g){this.lastContext=g},pushContext:function(){this.pushStackLiteral(this.contextName(this.lastContext))},lookupOnContext:function(g,v,y,P){var A=0;P||!this.options.compat||this.lastContext?this.pushContext():this.push(this.depthedLookup(g[A++])),this.resolvePath("context",g,A,v,y)},lookupBlockParam:function(g,v){this.useBlockParams=!0,this.push(["blockParams[",g[0],"][",g[1],"]"]),this.resolvePath("context",v,1)},lookupData:function(g,v,y){g?this.pushStackLiteral("container.data(data, "+g+")"):this.pushStackLiteral("data"),this.resolvePath("data",v,0,!0,y)},resolvePath:function(g,v,y,P,A){var E=this;if(this.options.strict||this.options.assumeObjects)return void this.push(p(this.options.strict&&A,this,v,g));for(var C=v.length;y<C;y++)this.replaceStack(function(_){var R=E.nameLookup(_,v[y],g);return P?[" && ",R]:[" != null ? ",R," : ",_]})},resolvePossibleLambda:function(){this.push([this.aliasable("container.lambda"),"(",this.popStack(),", ",this.contextName(0),")"])},pushStringParam:function(g,v){this.pushContext(),this.pushString(v),v!=="SubExpression"&&(typeof g=="string"?this.pushString(g):this.pushStackLiteral(g))},emptyHash:function(g){this.trackIds&&this.push("{}"),this.stringParams&&(this.push("{}"),this.push("{}")),this.pushStackLiteral(g?"undefined":"{}")},pushHash:function(){this.hash&&this.hashes.push(this.hash),this.hash={values:{},types:[],contexts:[],ids:[]}},popHash:function(){var g=this.hash;this.hash=this.hashes.pop(),this.trackIds&&this.push(this.objectLiteral(g.ids)),this.stringParams&&(this.push(this.objectLiteral(g.contexts)),this.push(this.objectLiteral(g.types))),this.push(this.objectLiteral(g.values))},pushString:function(g){this.pushStackLiteral(this.quotedString(g))},pushLiteral:function(g){this.pushStackLiteral(g)},pushProgram:function(g){g!=null?this.pushStackLiteral(this.programExpression(g)):this.pushStackLiteral(null)},registerDecorator:function(g,v){var y=this.nameLookup("decorators",v,"decorator"),P=this.setupHelperArgs(v,g);this.decorators.push(["fn = ",this.decorators.functionCall(y,"",["fn","props","container",P])," || fn;"])},invokeHelper:function(g,v,y){var P=this.popStack(),A=this.setupHelper(g,v),E=[];y&&E.push(A.name),E.push(P),this.options.strict||E.push(this.aliasable("container.hooks.helperMissing"));var C=["(",this.itemsSeparatedBy(E,"||"),")"],_=this.source.functionCall(C,"call",A.callParams);this.push(_)},itemsSeparatedBy:function(g,v){var y=[];y.push(g[0]);for(var P=1;P<g.length;P++)y.push(v,g[P]);return y},invokeKnownHelper:function(g,v){var y=this.setupHelper(g,v);this.push(this.source.functionCall(y.name,"call",y.callParams))},invokeAmbiguous:function(g,v){this.useRegister("helper");var y=this.popStack();this.emptyHash();var P=this.setupHelper(0,g,v),A=this.lastHelper=this.nameLookup("helpers",g,"helper"),E=["(","(helper = ",A," || ",y,")"];this.options.strict||(E[0]="(helper = ",E.push(" != null ? helper : ",this.aliasable("container.hooks.helperMissing"))),this.push(["(",E,P.paramsInit?["),(",P.paramsInit]:[],"),","(typeof helper === ",this.aliasable('"function"')," ? ",this.source.functionCall("helper","call",P.callParams)," : helper))"])},invokePartial:function(g,v,y){var P=[],A=this.setupParams(v,1,P);g&&(v=this.popStack(),delete A.name),y&&(A.indent=JSON.stringify(y)),A.helpers="helpers",A.partials="partials",A.decorators="container.decorators",g?P.unshift(v):P.unshift(this.nameLookup("partials",v,"partial")),this.options.compat&&(A.depths="depths"),A=this.objectLiteral(A),P.push(A),this.push(this.source.functionCall("container.invokePartial","",P))},assignToHash:function(g){var v=this.popStack(),y=void 0,P=void 0,A=void 0;this.trackIds&&(A=this.popStack()),this.stringParams&&(P=this.popStack(),y=this.popStack());var E=this.hash;y&&(E.contexts[g]=y),P&&(E.types[g]=P),A&&(E.ids[g]=A),E.values[g]=v},pushId:function(g,v,y){g==="BlockParam"?this.pushStackLiteral("blockParams["+v[0]+"].path["+v[1]+"]"+(y?" + "+JSON.stringify("."+y):"")):g==="PathExpression"?this.pushString(v):g==="SubExpression"?this.pushStackLiteral("true"):this.pushStackLiteral("null")},compiler:r,compileChildren:function(g,v){for(var y=g.children,P=void 0,A=void 0,E=0,C=y.length;E<C;E++){P=y[E],A=new this.compiler;var _=this.matchExistingProgram(P);if(_==null){this.context.programs.push("");var R=this.context.programs.length;P.index=R,P.name="program"+R,this.context.programs[R]=A.compile(P,v,this.context,!this.precompile),this.context.decorators[R]=A.decorators,this.context.environments[R]=P,this.useDepths=this.useDepths||A.useDepths,this.useBlockParams=this.useBlockParams||A.useBlockParams,P.useDepths=this.useDepths,P.useBlockParams=this.useBlockParams}else P.index=_.index,P.name="program"+_.index,this.useDepths=this.useDepths||_.useDepths,this.useBlockParams=this.useBlockParams||_.useBlockParams}},matchExistingProgram:function(g){for(var v=0,y=this.context.environments.length;v<y;v++){var P=this.context.environments[v];if(P&&P.equals(g))return P}},programExpression:function(g){var v=this.environment.children[g],y=[v.index,"data",v.blockParams];return(this.useBlockParams||this.useDepths)&&y.push("blockParams"),this.useDepths&&y.push("depths"),"container.program("+y.join(", ")+")"},useRegister:function(g){this.registers[g]||(this.registers[g]=!0,this.registers.list.push(g))},push:function(g){return g instanceof i||(g=this.source.wrap(g)),this.inlineStack.push(g),g},pushStackLiteral:function(g){this.push(new i(g))},pushSource:function(g){this.pendingContent&&(this.source.push(this.appendToBuffer(this.source.quotedString(this.pendingContent),this.pendingLocation)),this.pendingContent=void 0),g&&this.source.push(g)},replaceStack:function(g){var v=["("],y=void 0,P=void 0,A=void 0;if(!this.isInline())throw new m.default("replaceStack on non-inline");var E=this.popStack(!0);if(E instanceof i)y=[E.value],v=["(",y],A=!0;else{P=!0;var C=this.incrStack();v=["((",this.push(C)," = ",E,")"],y=this.topStack()}var _=g.call(this,y);A||this.popStack(),P&&this.stackSlot--,this.push(v.concat(_,")"))},incrStack:function(){return this.stackSlot++,this.stackSlot>this.stackVars.length&&this.stackVars.push("stack"+this.stackSlot),this.topStackName()},topStackName:function(){return"stack"+this.stackSlot},flushInline:function(){var g=this.inlineStack;this.inlineStack=[];for(var v=0,y=g.length;v<y;v++){var P=g[v];if(P instanceof i)this.compileStack.push(P);else{var A=this.incrStack();this.pushSource([A," = ",P,";"]),this.compileStack.push(A)}}},isInline:function(){return this.inlineStack.length},popStack:function(g){var v=this.isInline(),y=(v?this.inlineStack:this.compileStack).pop();if(!g&&y instanceof i)return y.value;if(!v){if(!this.stackSlot)throw new m.default("Invalid stack pop");this.stackSlot--}return y},topStack:function(){var g=this.isInline()?this.inlineStack:this.compileStack,v=g[g.length-1];return v instanceof i?v.value:v},contextName:function(g){return this.useDepths&&g?"depths["+g+"]":"depth"+g},quotedString:function(g){return this.source.quotedString(g)},objectLiteral:function(g){return this.source.objectLiteral(g)},aliasable:function(g){var v=this.aliases[g];return v?(v.referenceCount++,v):(v=this.aliases[g]=this.source.wrap(g),v.aliasable=!0,v.referenceCount=1,v)},setupHelper:function(g,v,y){var P=[],A=this.setupHelperArgs(v,g,P,y),E=this.nameLookup("helpers",v,"helper"),C=this.aliasable(this.contextName(0)+" != null ? "+this.contextName(0)+" : (container.nullContext || {})");return{params:P,paramsInit:A,name:E,callParams:[C].concat(P)}},setupParams:function(g,v,y){var P={},A=[],E=[],C=[],_=!y,R=void 0;_&&(y=[]),P.name=this.quotedString(g),P.hash=this.popStack(),this.trackIds&&(P.hashIds=this.popStack()),this.stringParams&&(P.hashTypes=this.popStack(),P.hashContexts=this.popStack());var j=this.popStack(),D=this.popStack();(D||j)&&(P.fn=D||"container.noop",P.inverse=j||"container.noop");for(var k=v;k--;)R=this.popStack(),y[k]=R,this.trackIds&&(C[k]=this.popStack()),this.stringParams&&(E[k]=this.popStack(),A[k]=this.popStack());return _&&(P.args=this.source.generateArray(y)),this.trackIds&&(P.ids=this.source.generateArray(C)),this.stringParams&&(P.types=this.source.generateArray(E),P.contexts=this.source.generateArray(A)),this.options.data&&(P.data="data"),this.useBlockParams&&(P.blockParams="blockParams"),P},setupHelperArgs:function(g,v,y,P){var A=this.setupParams(g,v,y);return A.loc=JSON.stringify(this.source.currentLocation),A=this.objectLiteral(A),P?(this.useRegister("options"),y.push("options"),["options=",A]):y?(y.push(A),""):A}},function(){for(var g="break else new var case finally return void catch for switch while continue function this with default if throw delete in try do instanceof typeof abstract enum int short boolean export interface static byte extends long super char final native synchronized class float package throws const goto private transient debugger implements protected volatile double import public let yield await null true false".split(" "),v=r.RESERVED_WORDS={},y=0,P=g.length;y<P;y++)v[g[y]]=!0}(),r.isValidJavaScriptVariableName=function(g){return!r.RESERVED_WORDS[g]&&/^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(g)},s.default=r,b.exports=s.default},function(b,s,f){"use strict";function i(o,u,m){if(c.isArray(o)){for(var n=[],h=0,d=o.length;h<d;h++)n.push(u.wrap(o[h],m));return n}return typeof o=="boolean"||typeof o=="number"?o+"":o}function r(o){this.srcFile=o,this.source=[]}var p=f(13).default;s.__esModule=!0;var c=f(5),l=void 0;try{}catch(o){}l||(l=function(o,u,m,n){this.src="",n&&this.add(n)},l.prototype={add:function(o){c.isArray(o)&&(o=o.join("")),this.src+=o},prepend:function(o){c.isArray(o)&&(o=o.join("")),this.src=o+this.src},toStringWithSourceMap:function(){return{code:this.toString()}},toString:function(){return this.src}}),r.prototype={isEmpty:function(){return!this.source.length},prepend:function(o,u){this.source.unshift(this.wrap(o,u))},push:function(o,u){this.source.push(this.wrap(o,u))},merge:function(){var o=this.empty();return this.each(function(u){o.add(["  ",u,`
`])}),o},each:function(o){for(var u=0,m=this.source.length;u<m;u++)o(this.source[u])},empty:function(){var o=this.currentLocation||{start:{}};return new l(o.start.line,o.start.column,this.srcFile)},wrap:function(o){var u=arguments.length<=1||arguments[1]===void 0?this.currentLocation||{start:{}}:arguments[1];return o instanceof l?o:(o=i(o,this,u),new l(u.start.line,u.start.column,this.srcFile,o))},functionCall:function(o,u,m){return m=this.generateList(m),this.wrap([o,u?"."+u+"(":"(",m,")"])},quotedString:function(o){return'"'+(o+"").replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\u2028/g,"\\u2028").replace(/\u2029/g,"\\u2029")+'"'},objectLiteral:function(o){var u=this,m=[];p(o).forEach(function(h){var d=i(o[h],u);d!=="undefined"&&m.push([u.quotedString(h),":",d])});var n=this.generateList(m);return n.prepend("{"),n.add("}"),n},generateList:function(o){for(var u=this.empty(),m=0,n=o.length;m<n;m++)m&&u.add(","),u.add(i(o[m],this));return u},generateArray:function(o){var u=this.generateList(o);return u.prepend("["),u.add("]"),u}},s.default=r,b.exports=s.default}])})},9414:(T,b,s)=>{var f;/*!
* Sizzle CSS Selector Engine v2.3.6
* https://sizzlejs.com/
*
* Copyright JS Foundation and other contributors
* Released under the MIT license
* https://js.foundation/
*
* Date: 2021-02-16
*/(function(i){var r,p,c,l,o,u,m,n,h,d,g,v,y,P,A,E,C,_,R,j="sizzle"+1*new Date,D=i.document,k=0,x=0,I=$e(),G=$e(),O=$e(),U=$e(),B=function(M,$){return M===$&&(g=!0),0},z={}.hasOwnProperty,F=[],K=F.pop,W=F.push,re=F.push,ne=F.slice,pe=function(M,$){for(var X=0,Y=M.length;X<Y;X++)if(M[X]===$)return X;return-1},te="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",fe="[\\x20\\t\\r\\n\\f]",Pe="(?:\\\\[\\da-fA-F]{1,6}"+fe+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",Le="\\["+fe+"*("+Pe+")(?:"+fe+"*([*^$|!~]?=)"+fe+`*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(`+Pe+"))|)"+fe+"*\\]",nt=":("+Pe+`)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|`+Le+")*)|.*)\\)|)",mt=new RegExp(fe+"+","g"),dt=new RegExp("^"+fe+"+|((?:^|[^\\\\])(?:\\\\.)*)"+fe+"+$","g"),ht=new RegExp("^"+fe+"*,"+fe+"*"),Rt=new RegExp("^"+fe+"*([>+~]|"+fe+")"+fe+"*"),Se=new RegExp(fe+"|>"),wt=new RegExp(nt),Ge=new RegExp("^"+Pe+"$"),He={ID:new RegExp("^#("+Pe+")"),CLASS:new RegExp("^\\.("+Pe+")"),TAG:new RegExp("^("+Pe+"|[*])"),ATTR:new RegExp("^"+Le),PSEUDO:new RegExp("^"+nt),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+fe+"*(even|odd|(([+-]|)(\\d*)n|)"+fe+"*(?:([+-]|)"+fe+"*(\\d+)|))"+fe+"*\\)|)","i"),bool:new RegExp("^(?:"+te+")$","i"),needsContext:new RegExp("^"+fe+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+fe+"*((?:-\\d)?\\d*)"+fe+"*\\)|)(?=[^-]|$)","i")},Bt=/HTML$/i,Oe=/^(?:input|select|textarea|button)$/i,le=/^h\d$/i,Ce=/^[^{]+\{\s*\[native \w/,je=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,oe=/[+~]/,ye=new RegExp("\\\\[\\da-fA-F]{1,6}"+fe+"?|\\\\([^\\r\\n\\f])","g"),he=function(M,$){var X="0x"+M.slice(1)-65536;return $||(X<0?String.fromCharCode(X+65536):String.fromCharCode(X>>10|55296,X&1023|56320))},we=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,Xe=function(M,$){return $?M==="\0"?"\uFFFD":M.slice(0,-1)+"\\"+M.charCodeAt(M.length-1).toString(16)+" ":"\\"+M},qe=function(){v()},Je=yt(function(M){return M.disabled===!0&&M.nodeName.toLowerCase()==="fieldset"},{dir:"parentNode",next:"legend"});try{re.apply(F=ne.call(D.childNodes),D.childNodes),F[D.childNodes.length].nodeType}catch(M){re={apply:F.length?function($,X){W.apply($,ne.call(X))}:function($,X){for(var Y=$.length,H=0;$[Y++]=X[H++];);$.length=Y-1}}}function _e(M,$,X,Y){var H,Z,ee,ae,de,me,Ee,Ae=$&&$.ownerDocument,Ie=$?$.nodeType:9;if(X=X||[],typeof M!="string"||!M||Ie!==1&&Ie!==9&&Ie!==11)return X;if(!Y&&(v($),$=$||y,A)){if(Ie!==11&&(de=je.exec(M)))if(H=de[1]){if(Ie===9)if(ee=$.getElementById(H)){if(ee.id===H)return X.push(ee),X}else return X;else if(Ae&&(ee=Ae.getElementById(H))&&R($,ee)&&ee.id===H)return X.push(ee),X}else{if(de[2])return re.apply(X,$.getElementsByTagName(M)),X;if((H=de[3])&&p.getElementsByClassName&&$.getElementsByClassName)return re.apply(X,$.getElementsByClassName(H)),X}if(p.qsa&&!U[M+" "]&&(!E||!E.test(M))&&(Ie!==1||$.nodeName.toLowerCase()!=="object")){if(Ee=M,Ae=$,Ie===1&&(Se.test(M)||Rt.test(M))){for(Ae=oe.test(M)&&gr($.parentNode)||$,(Ae!==$||!p.scope)&&((ae=$.getAttribute("id"))?ae=ae.replace(we,Xe):$.setAttribute("id",ae=j)),me=u(M),Z=me.length;Z--;)me[Z]=(ae?"#"+ae:":scope")+" "+fr(me[Z]);Ee=me.join(",")}try{return re.apply(X,Ae.querySelectorAll(Ee)),X}catch(We){U(M,!0)}finally{ae===j&&$.removeAttribute("id")}}}return n(M.replace(dt,"$1"),$,X,Y)}function $e(){var M=[];function $(X,Y){return M.push(X+" ")>c.cacheLength&&delete $[M.shift()],$[X+" "]=Y}return $}function Qe(M){return M[j]=!0,M}function Ze(M){var $=y.createElement("fieldset");try{return!!M($)}catch(X){return!1}finally{$.parentNode&&$.parentNode.removeChild($),$=null}}function Ut(M,$){for(var X=M.split("|"),Y=X.length;Y--;)c.attrHandle[X[Y]]=$}function Lt(M,$){var X=$&&M,Y=X&&M.nodeType===1&&$.nodeType===1&&M.sourceIndex-$.sourceIndex;if(Y)return Y;if(X){for(;X=X.nextSibling;)if(X===$)return-1}return M?1:-1}function Ct(M){return function($){var X=$.nodeName.toLowerCase();return X==="input"&&$.type===M}}function _r(M){return function($){var X=$.nodeName.toLowerCase();return(X==="input"||X==="button")&&$.type===M}}function nr(M){return function($){return"form"in $?$.parentNode&&$.disabled===!1?"label"in $?"label"in $.parentNode?$.parentNode.disabled===M:$.disabled===M:$.isDisabled===M||$.isDisabled!==!M&&Je($)===M:$.disabled===M:"label"in $?$.disabled===M:!1}}function Ht(M){return Qe(function($){return $=+$,Qe(function(X,Y){for(var H,Z=M([],X.length,$),ee=Z.length;ee--;)X[H=Z[ee]]&&(X[H]=!(Y[H]=X[H]))})})}function gr(M){return M&&typeof M.getElementsByTagName!="undefined"&&M}p=_e.support={},o=_e.isXML=function(M){var $=M&&M.namespaceURI,X=M&&(M.ownerDocument||M).documentElement;return!Bt.test($||X&&X.nodeName||"HTML")},v=_e.setDocument=function(M){var $,X,Y=M?M.ownerDocument||M:D;return Y==y||Y.nodeType!==9||!Y.documentElement||(y=Y,P=y.documentElement,A=!o(y),D!=y&&(X=y.defaultView)&&X.top!==X&&(X.addEventListener?X.addEventListener("unload",qe,!1):X.attachEvent&&X.attachEvent("onunload",qe)),p.scope=Ze(function(H){return P.appendChild(H).appendChild(y.createElement("div")),typeof H.querySelectorAll!="undefined"&&!H.querySelectorAll(":scope fieldset div").length}),p.attributes=Ze(function(H){return H.className="i",!H.getAttribute("className")}),p.getElementsByTagName=Ze(function(H){return H.appendChild(y.createComment("")),!H.getElementsByTagName("*").length}),p.getElementsByClassName=Ce.test(y.getElementsByClassName),p.getById=Ze(function(H){return P.appendChild(H).id=j,!y.getElementsByName||!y.getElementsByName(j).length}),p.getById?(c.filter.ID=function(H){var Z=H.replace(ye,he);return function(ee){return ee.getAttribute("id")===Z}},c.find.ID=function(H,Z){if(typeof Z.getElementById!="undefined"&&A){var ee=Z.getElementById(H);return ee?[ee]:[]}}):(c.filter.ID=function(H){var Z=H.replace(ye,he);return function(ee){var ae=typeof ee.getAttributeNode!="undefined"&&ee.getAttributeNode("id");return ae&&ae.value===Z}},c.find.ID=function(H,Z){if(typeof Z.getElementById!="undefined"&&A){var ee,ae,de,me=Z.getElementById(H);if(me){if(ee=me.getAttributeNode("id"),ee&&ee.value===H)return[me];for(de=Z.getElementsByName(H),ae=0;me=de[ae++];)if(ee=me.getAttributeNode("id"),ee&&ee.value===H)return[me]}return[]}}),c.find.TAG=p.getElementsByTagName?function(H,Z){if(typeof Z.getElementsByTagName!="undefined")return Z.getElementsByTagName(H);if(p.qsa)return Z.querySelectorAll(H)}:function(H,Z){var ee,ae=[],de=0,me=Z.getElementsByTagName(H);if(H==="*"){for(;ee=me[de++];)ee.nodeType===1&&ae.push(ee);return ae}return me},c.find.CLASS=p.getElementsByClassName&&function(H,Z){if(typeof Z.getElementsByClassName!="undefined"&&A)return Z.getElementsByClassName(H)},C=[],E=[],(p.qsa=Ce.test(y.querySelectorAll))&&(Ze(function(H){var Z;P.appendChild(H).innerHTML="<a id='"+j+"'></a><select id='"+j+"-\r\\' msallowcapture=''><option selected=''></option></select>",H.querySelectorAll("[msallowcapture^='']").length&&E.push("[*^$]="+fe+`*(?:''|"")`),H.querySelectorAll("[selected]").length||E.push("\\["+fe+"*(?:value|"+te+")"),H.querySelectorAll("[id~="+j+"-]").length||E.push("~="),Z=y.createElement("input"),Z.setAttribute("name",""),H.appendChild(Z),H.querySelectorAll("[name='']").length||E.push("\\["+fe+"*name"+fe+"*="+fe+`*(?:''|"")`),H.querySelectorAll(":checked").length||E.push(":checked"),H.querySelectorAll("a#"+j+"+*").length||E.push(".#.+[+~]"),H.querySelectorAll("\\\f"),E.push("[\\r\\n\\f]")}),Ze(function(H){H.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var Z=y.createElement("input");Z.setAttribute("type","hidden"),H.appendChild(Z).setAttribute("name","D"),H.querySelectorAll("[name=d]").length&&E.push("name"+fe+"*[*^$|!~]?="),H.querySelectorAll(":enabled").length!==2&&E.push(":enabled",":disabled"),P.appendChild(H).disabled=!0,H.querySelectorAll(":disabled").length!==2&&E.push(":enabled",":disabled"),H.querySelectorAll("*,:x"),E.push(",.*:")})),(p.matchesSelector=Ce.test(_=P.matches||P.webkitMatchesSelector||P.mozMatchesSelector||P.oMatchesSelector||P.msMatchesSelector))&&Ze(function(H){p.disconnectedMatch=_.call(H,"*"),_.call(H,"[s!='']:x"),C.push("!=",nt)}),E=E.length&&new RegExp(E.join("|")),C=C.length&&new RegExp(C.join("|")),$=Ce.test(P.compareDocumentPosition),R=$||Ce.test(P.contains)?function(H,Z){var ee=H.nodeType===9?H.documentElement:H,ae=Z&&Z.parentNode;return H===ae||!!(ae&&ae.nodeType===1&&(ee.contains?ee.contains(ae):H.compareDocumentPosition&&H.compareDocumentPosition(ae)&16))}:function(H,Z){if(Z){for(;Z=Z.parentNode;)if(Z===H)return!0}return!1},B=$?function(H,Z){if(H===Z)return g=!0,0;var ee=!H.compareDocumentPosition-!Z.compareDocumentPosition;return ee||(ee=(H.ownerDocument||H)==(Z.ownerDocument||Z)?H.compareDocumentPosition(Z):1,ee&1||!p.sortDetached&&Z.compareDocumentPosition(H)===ee?H==y||H.ownerDocument==D&&R(D,H)?-1:Z==y||Z.ownerDocument==D&&R(D,Z)?1:d?pe(d,H)-pe(d,Z):0:ee&4?-1:1)}:function(H,Z){if(H===Z)return g=!0,0;var ee,ae=0,de=H.parentNode,me=Z.parentNode,Ee=[H],Ae=[Z];if(!de||!me)return H==y?-1:Z==y?1:de?-1:me?1:d?pe(d,H)-pe(d,Z):0;if(de===me)return Lt(H,Z);for(ee=H;ee=ee.parentNode;)Ee.unshift(ee);for(ee=Z;ee=ee.parentNode;)Ae.unshift(ee);for(;Ee[ae]===Ae[ae];)ae++;return ae?Lt(Ee[ae],Ae[ae]):Ee[ae]==D?-1:Ae[ae]==D?1:0}),y},_e.matches=function(M,$){return _e(M,null,null,$)},_e.matchesSelector=function(M,$){if(v(M),p.matchesSelector&&A&&!U[$+" "]&&(!C||!C.test($))&&(!E||!E.test($)))try{var X=_.call(M,$);if(X||p.disconnectedMatch||M.document&&M.document.nodeType!==11)return X}catch(Y){U($,!0)}return _e($,y,null,[M]).length>0},_e.contains=function(M,$){return(M.ownerDocument||M)!=y&&v(M),R(M,$)},_e.attr=function(M,$){(M.ownerDocument||M)!=y&&v(M);var X=c.attrHandle[$.toLowerCase()],Y=X&&z.call(c.attrHandle,$.toLowerCase())?X(M,$,!A):void 0;return Y!==void 0?Y:p.attributes||!A?M.getAttribute($):(Y=M.getAttributeNode($))&&Y.specified?Y.value:null},_e.escape=function(M){return(M+"").replace(we,Xe)},_e.error=function(M){throw new Error("Syntax error, unrecognized expression: "+M)},_e.uniqueSort=function(M){var $,X=[],Y=0,H=0;if(g=!p.detectDuplicates,d=!p.sortStable&&M.slice(0),M.sort(B),g){for(;$=M[H++];)$===M[H]&&(Y=X.push(H));for(;Y--;)M.splice(X[Y],1)}return d=null,M},l=_e.getText=function(M){var $,X="",Y=0,H=M.nodeType;if(H){if(H===1||H===9||H===11){if(typeof M.textContent=="string")return M.textContent;for(M=M.firstChild;M;M=M.nextSibling)X+=l(M)}else if(H===3||H===4)return M.nodeValue}else for(;$=M[Y++];)X+=l($);return X},c=_e.selectors={cacheLength:50,createPseudo:Qe,match:He,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(M){return M[1]=M[1].replace(ye,he),M[3]=(M[3]||M[4]||M[5]||"").replace(ye,he),M[2]==="~="&&(M[3]=" "+M[3]+" "),M.slice(0,4)},CHILD:function(M){return M[1]=M[1].toLowerCase(),M[1].slice(0,3)==="nth"?(M[3]||_e.error(M[0]),M[4]=+(M[4]?M[5]+(M[6]||1):2*(M[3]==="even"||M[3]==="odd")),M[5]=+(M[7]+M[8]||M[3]==="odd")):M[3]&&_e.error(M[0]),M},PSEUDO:function(M){var $,X=!M[6]&&M[2];return He.CHILD.test(M[0])?null:(M[3]?M[2]=M[4]||M[5]||"":X&&wt.test(X)&&($=u(X,!0))&&($=X.indexOf(")",X.length-$)-X.length)&&(M[0]=M[0].slice(0,$),M[2]=X.slice(0,$)),M.slice(0,3))}},filter:{TAG:function(M){var $=M.replace(ye,he).toLowerCase();return M==="*"?function(){return!0}:function(X){return X.nodeName&&X.nodeName.toLowerCase()===$}},CLASS:function(M){var $=I[M+" "];return $||($=new RegExp("(^|"+fe+")"+M+"("+fe+"|$)"))&&I(M,function(X){return $.test(typeof X.className=="string"&&X.className||typeof X.getAttribute!="undefined"&&X.getAttribute("class")||"")})},ATTR:function(M,$,X){return function(Y){var H=_e.attr(Y,M);return H==null?$==="!=":$?(H+="",$==="="?H===X:$==="!="?H!==X:$==="^="?X&&H.indexOf(X)===0:$==="*="?X&&H.indexOf(X)>-1:$==="$="?X&&H.slice(-X.length)===X:$==="~="?(" "+H.replace(mt," ")+" ").indexOf(X)>-1:$==="|="?H===X||H.slice(0,X.length+1)===X+"-":!1):!0}},CHILD:function(M,$,X,Y,H){var Z=M.slice(0,3)!=="nth",ee=M.slice(-4)!=="last",ae=$==="of-type";return Y===1&&H===0?function(de){return!!de.parentNode}:function(de,me,Ee){var Ae,Ie,We,be,Me,bt,jt=Z!==ee?"nextSibling":"previousSibling",ot=de.parentNode,Yt=ae&&de.nodeName.toLowerCase(),Fr=!Ee&&!ae,Et=!1;if(ot){if(Z){for(;jt;){for(be=de;be=be[jt];)if(ae?be.nodeName.toLowerCase()===Yt:be.nodeType===1)return!1;bt=jt=M==="only"&&!bt&&"nextSibling"}return!0}if(bt=[ee?ot.firstChild:ot.lastChild],ee&&Fr){for(be=ot,We=be[j]||(be[j]={}),Ie=We[be.uniqueID]||(We[be.uniqueID]={}),Ae=Ie[M]||[],Me=Ae[0]===k&&Ae[1],Et=Me&&Ae[2],be=Me&&ot.childNodes[Me];be=++Me&&be&&be[jt]||(Et=Me=0)||bt.pop();)if(be.nodeType===1&&++Et&&be===de){Ie[M]=[k,Me,Et];break}}else if(Fr&&(be=de,We=be[j]||(be[j]={}),Ie=We[be.uniqueID]||(We[be.uniqueID]={}),Ae=Ie[M]||[],Me=Ae[0]===k&&Ae[1],Et=Me),Et===!1)for(;(be=++Me&&be&&be[jt]||(Et=Me=0)||bt.pop())&&!((ae?be.nodeName.toLowerCase()===Yt:be.nodeType===1)&&++Et&&(Fr&&(We=be[j]||(be[j]={}),Ie=We[be.uniqueID]||(We[be.uniqueID]={}),Ie[M]=[k,Et]),be===de)););return Et-=H,Et===Y||Et%Y===0&&Et/Y>=0}}},PSEUDO:function(M,$){var X,Y=c.pseudos[M]||c.setFilters[M.toLowerCase()]||_e.error("unsupported pseudo: "+M);return Y[j]?Y($):Y.length>1?(X=[M,M,"",$],c.setFilters.hasOwnProperty(M.toLowerCase())?Qe(function(H,Z){for(var ee,ae=Y(H,$),de=ae.length;de--;)ee=pe(H,ae[de]),H[ee]=!(Z[ee]=ae[de])}):function(H){return Y(H,0,X)}):Y}},pseudos:{not:Qe(function(M){var $=[],X=[],Y=m(M.replace(dt,"$1"));return Y[j]?Qe(function(H,Z,ee,ae){for(var de,me=Y(H,null,ae,[]),Ee=H.length;Ee--;)(de=me[Ee])&&(H[Ee]=!(Z[Ee]=de))}):function(H,Z,ee){return $[0]=H,Y($,null,ee,X),$[0]=null,!X.pop()}}),has:Qe(function(M){return function($){return _e(M,$).length>0}}),contains:Qe(function(M){return M=M.replace(ye,he),function($){return($.textContent||l($)).indexOf(M)>-1}}),lang:Qe(function(M){return Ge.test(M||"")||_e.error("unsupported lang: "+M),M=M.replace(ye,he).toLowerCase(),function($){var X;do if(X=A?$.lang:$.getAttribute("xml:lang")||$.getAttribute("lang"))return X=X.toLowerCase(),X===M||X.indexOf(M+"-")===0;while(($=$.parentNode)&&$.nodeType===1);return!1}}),target:function(M){var $=i.location&&i.location.hash;return $&&$.slice(1)===M.id},root:function(M){return M===P},focus:function(M){return M===y.activeElement&&(!y.hasFocus||y.hasFocus())&&!!(M.type||M.href||~M.tabIndex)},enabled:nr(!1),disabled:nr(!0),checked:function(M){var $=M.nodeName.toLowerCase();return $==="input"&&!!M.checked||$==="option"&&!!M.selected},selected:function(M){return M.parentNode&&M.parentNode.selectedIndex,M.selected===!0},empty:function(M){for(M=M.firstChild;M;M=M.nextSibling)if(M.nodeType<6)return!1;return!0},parent:function(M){return!c.pseudos.empty(M)},header:function(M){return le.test(M.nodeName)},input:function(M){return Oe.test(M.nodeName)},button:function(M){var $=M.nodeName.toLowerCase();return $==="input"&&M.type==="button"||$==="button"},text:function(M){var $;return M.nodeName.toLowerCase()==="input"&&M.type==="text"&&(($=M.getAttribute("type"))==null||$.toLowerCase()==="text")},first:Ht(function(){return[0]}),last:Ht(function(M,$){return[$-1]}),eq:Ht(function(M,$,X){return[X<0?X+$:X]}),even:Ht(function(M,$){for(var X=0;X<$;X+=2)M.push(X);return M}),odd:Ht(function(M,$){for(var X=1;X<$;X+=2)M.push(X);return M}),lt:Ht(function(M,$,X){for(var Y=X<0?X+$:X>$?$:X;--Y>=0;)M.push(Y);return M}),gt:Ht(function(M,$,X){for(var Y=X<0?X+$:X;++Y<$;)M.push(Y);return M})}},c.pseudos.nth=c.pseudos.eq;for(r in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})c.pseudos[r]=Ct(r);for(r in{submit:!0,reset:!0})c.pseudos[r]=_r(r);function Mt(){}Mt.prototype=c.filters=c.pseudos,c.setFilters=new Mt,u=_e.tokenize=function(M,$){var X,Y,H,Z,ee,ae,de,me=G[M+" "];if(me)return $?0:me.slice(0);for(ee=M,ae=[],de=c.preFilter;ee;){(!X||(Y=ht.exec(ee)))&&(Y&&(ee=ee.slice(Y[0].length)||ee),ae.push(H=[])),X=!1,(Y=Rt.exec(ee))&&(X=Y.shift(),H.push({value:X,type:Y[0].replace(dt," ")}),ee=ee.slice(X.length));for(Z in c.filter)(Y=He[Z].exec(ee))&&(!de[Z]||(Y=de[Z](Y)))&&(X=Y.shift(),H.push({value:X,type:Z,matches:Y}),ee=ee.slice(X.length));if(!X)break}return $?ee.length:ee?_e.error(M):G(M,ae).slice(0)};function fr(M){for(var $=0,X=M.length,Y="";$<X;$++)Y+=M[$].value;return Y}function yt(M,$,X){var Y=$.dir,H=$.next,Z=H||Y,ee=X&&Z==="parentNode",ae=x++;return $.first?function(de,me,Ee){for(;de=de[Y];)if(de.nodeType===1||ee)return M(de,me,Ee);return!1}:function(de,me,Ee){var Ae,Ie,We,be=[k,ae];if(Ee){for(;de=de[Y];)if((de.nodeType===1||ee)&&M(de,me,Ee))return!0}else for(;de=de[Y];)if(de.nodeType===1||ee)if(We=de[j]||(de[j]={}),Ie=We[de.uniqueID]||(We[de.uniqueID]={}),H&&H===de.nodeName.toLowerCase())de=de[Y]||de;else{if((Ae=Ie[Z])&&Ae[0]===k&&Ae[1]===ae)return be[2]=Ae[2];if(Ie[Z]=be,be[2]=M(de,me,Ee))return!0}return!1}}function Ar(M){return M.length>1?function($,X,Y){for(var H=M.length;H--;)if(!M[H]($,X,Y))return!1;return!0}:M[0]}function Or(M,$,X){for(var Y=0,H=$.length;Y<H;Y++)_e(M,$[Y],X);return X}function lr(M,$,X,Y,H){for(var Z,ee=[],ae=0,de=M.length,me=$!=null;ae<de;ae++)(Z=M[ae])&&(!X||X(Z,Y,H))&&(ee.push(Z),me&&$.push(ae));return ee}function Nr(M,$,X,Y,H,Z){return Y&&!Y[j]&&(Y=Nr(Y)),H&&!H[j]&&(H=Nr(H,Z)),Qe(function(ee,ae,de,me){var Ee,Ae,Ie,We=[],be=[],Me=ae.length,bt=ee||Or($||"*",de.nodeType?[de]:de,[]),jt=M&&(ee||!$)?lr(bt,We,M,de,me):bt,ot=X?H||(ee?M:Me||Y)?[]:ae:jt;if(X&&X(jt,ot,de,me),Y)for(Ee=lr(ot,be),Y(Ee,[],de,me),Ae=Ee.length;Ae--;)(Ie=Ee[Ae])&&(ot[be[Ae]]=!(jt[be[Ae]]=Ie));if(ee){if(H||M){if(H){for(Ee=[],Ae=ot.length;Ae--;)(Ie=ot[Ae])&&Ee.push(jt[Ae]=Ie);H(null,ot=[],Ee,me)}for(Ae=ot.length;Ae--;)(Ie=ot[Ae])&&(Ee=H?pe(ee,Ie):We[Ae])>-1&&(ee[Ee]=!(ae[Ee]=Ie))}}else ot=lr(ot===ae?ot.splice(Me,ot.length):ot),H?H(null,ae,ot,me):re.apply(ae,ot)})}function Rr(M){for(var $,X,Y,H=M.length,Z=c.relative[M[0].type],ee=Z||c.relative[" "],ae=Z?1:0,de=yt(function(Ae){return Ae===$},ee,!0),me=yt(function(Ae){return pe($,Ae)>-1},ee,!0),Ee=[function(Ae,Ie,We){var be=!Z&&(We||Ie!==h)||(($=Ie).nodeType?de(Ae,Ie,We):me(Ae,Ie,We));return $=null,be}];ae<H;ae++)if(X=c.relative[M[ae].type])Ee=[yt(Ar(Ee),X)];else{if(X=c.filter[M[ae].type].apply(null,M[ae].matches),X[j]){for(Y=++ae;Y<H&&!c.relative[M[Y].type];Y++);return Nr(ae>1&&Ar(Ee),ae>1&&fr(M.slice(0,ae-1).concat({value:M[ae-2].type===" "?"*":""})).replace(dt,"$1"),X,ae<Y&&Rr(M.slice(ae,Y)),Y<H&&Rr(M=M.slice(Y)),Y<H&&fr(M))}Ee.push(X)}return Ar(Ee)}function ai(M,$){var X=$.length>0,Y=M.length>0,H=function(Z,ee,ae,de,me){var Ee,Ae,Ie,We=0,be="0",Me=Z&&[],bt=[],jt=h,ot=Z||Y&&c.find.TAG("*",me),Yt=k+=jt==null?1:Math.random()||.1,Fr=ot.length;for(me&&(h=ee==y||ee||me);be!==Fr&&(Ee=ot[be])!=null;be++){if(Y&&Ee){for(Ae=0,!ee&&Ee.ownerDocument!=y&&(v(Ee),ae=!A);Ie=M[Ae++];)if(Ie(Ee,ee||y,ae)){de.push(Ee);break}me&&(k=Yt)}X&&((Ee=!Ie&&Ee)&&We--,Z&&Me.push(Ee))}if(We+=be,X&&be!==We){for(Ae=0;Ie=$[Ae++];)Ie(Me,bt,ee,ae);if(Z){if(We>0)for(;be--;)Me[be]||bt[be]||(bt[be]=K.call(de));bt=lr(bt)}re.apply(de,bt),me&&!Z&&bt.length>0&&We+$.length>1&&_e.uniqueSort(de)}return me&&(k=Yt,h=jt),Me};return X?Qe(H):H}m=_e.compile=function(M,$){var X,Y=[],H=[],Z=O[M+" "];if(!Z){for($||($=u(M)),X=$.length;X--;)Z=Rr($[X]),Z[j]?Y.push(Z):H.push(Z);Z=O(M,ai(H,Y)),Z.selector=M}return Z},n=_e.select=function(M,$,X,Y){var H,Z,ee,ae,de,me=typeof M=="function"&&M,Ee=!Y&&u(M=me.selector||M);if(X=X||[],Ee.length===1){if(Z=Ee[0]=Ee[0].slice(0),Z.length>2&&(ee=Z[0]).type==="ID"&&$.nodeType===9&&A&&c.relative[Z[1].type]){if($=(c.find.ID(ee.matches[0].replace(ye,he),$)||[])[0],$)me&&($=$.parentNode);else return X;M=M.slice(Z.shift().value.length)}for(H=He.needsContext.test(M)?0:Z.length;H--&&(ee=Z[H],!c.relative[ae=ee.type]);)if((de=c.find[ae])&&(Y=de(ee.matches[0].replace(ye,he),oe.test(Z[0].type)&&gr($.parentNode)||$))){if(Z.splice(H,1),M=Y.length&&fr(Z),!M)return re.apply(X,Y),X;break}}return(me||m(M,Ee))(Y,$,!A,X,!$||oe.test(M)&&gr($.parentNode)||$),X},p.sortStable=j.split("").sort(B).join("")===j,p.detectDuplicates=!!g,v(),p.sortDetached=Ze(function(M){return M.compareDocumentPosition(y.createElement("fieldset"))&1}),Ze(function(M){return M.innerHTML="<a href='#'></a>",M.firstChild.getAttribute("href")==="#"})||Ut("type|href|height|width",function(M,$,X){if(!X)return M.getAttribute($,$.toLowerCase()==="type"?1:2)}),(!p.attributes||!Ze(function(M){return M.innerHTML="<input/>",M.firstChild.setAttribute("value",""),M.firstChild.getAttribute("value")===""}))&&Ut("value",function(M,$,X){if(!X&&M.nodeName.toLowerCase()==="input")return M.defaultValue}),Ze(function(M){return M.getAttribute("disabled")==null})||Ut(te,function(M,$,X){var Y;if(!X)return M[$]===!0?$.toLowerCase():(Y=M.getAttributeNode($))&&Y.specified?Y.value:null});var Kr=i.Sizzle;_e.noConflict=function(){return i.Sizzle===_e&&(i.Sizzle=Kr),_e},f=function(){return _e}.call(b,s,b,T),f!==void 0&&(T.exports=f)})(window)},7178:(T,b,s)=>{var f,i;f=[s(8934),s(7792),s(2134),s(8663),s(454),s(6981),s(7661),s(8048),s(461),s(1045),s(6525),s(5385)],i=function(r,p,c,l,o,u,m){"use strict";var n=/%20/g,h=/#.*$/,d=/([?&])_=[^&]*/,g=/^(.*?):[ \t]*([^\r\n]*)$/mg,v=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,y=/^(?:GET|HEAD)$/,P=/^\/\//,A={},E={},C="*/".concat("*"),_=p.createElement("a");_.href=o.href;function R(I){return function(G,O){typeof G!="string"&&(O=G,G="*");var U,B=0,z=G.toLowerCase().match(l)||[];if(c(O))for(;U=z[B++];)U[0]==="+"?(U=U.slice(1)||"*",(I[U]=I[U]||[]).unshift(O)):(I[U]=I[U]||[]).push(O)}}function j(I,G,O,U){var B={},z=I===E;function F(K){var W;return B[K]=!0,r.each(I[K]||[],function(re,ne){var pe=ne(G,O,U);if(typeof pe=="string"&&!z&&!B[pe])return G.dataTypes.unshift(pe),F(pe),!1;if(z)return!(W=pe)}),W}return F(G.dataTypes[0])||!B["*"]&&F("*")}function D(I,G){var O,U,B=r.ajaxSettings.flatOptions||{};for(O in G)G[O]!==void 0&&((B[O]?I:U||(U={}))[O]=G[O]);return U&&r.extend(!0,I,U),I}function k(I,G,O){for(var U,B,z,F,K=I.contents,W=I.dataTypes;W[0]==="*";)W.shift(),U===void 0&&(U=I.mimeType||G.getResponseHeader("Content-Type"));if(U){for(B in K)if(K[B]&&K[B].test(U)){W.unshift(B);break}}if(W[0]in O)z=W[0];else{for(B in O){if(!W[0]||I.converters[B+" "+W[0]]){z=B;break}F||(F=B)}z=z||F}if(z)return z!==W[0]&&W.unshift(z),O[z]}function x(I,G,O,U){var B,z,F,K,W,re={},ne=I.dataTypes.slice();if(ne[1])for(F in I.converters)re[F.toLowerCase()]=I.converters[F];for(z=ne.shift();z;)if(I.responseFields[z]&&(O[I.responseFields[z]]=G),!W&&U&&I.dataFilter&&(G=I.dataFilter(G,I.dataType)),W=z,z=ne.shift(),z){if(z==="*")z=W;else if(W!=="*"&&W!==z){if(F=re[W+" "+z]||re["* "+z],!F){for(B in re)if(K=B.split(" "),K[1]===z&&(F=re[W+" "+K[0]]||re["* "+K[0]],F)){F===!0?F=re[B]:re[B]!==!0&&(z=K[0],ne.unshift(K[1]));break}}if(F!==!0)if(F&&I.throws)G=F(G);else try{G=F(G)}catch(pe){return{state:"parsererror",error:F?pe:"No conversion from "+W+" to "+z}}}}return{state:"success",data:G}}return r.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:o.href,type:"GET",isLocal:v.test(o.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":C,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":r.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(I,G){return G?D(D(I,r.ajaxSettings),G):D(r.ajaxSettings,I)},ajaxPrefilter:R(A),ajaxTransport:R(E),ajax:function(I,G){typeof I=="object"&&(G=I,I=void 0),G=G||{};var O,U,B,z,F,K,W,re,ne,pe,te=r.ajaxSetup({},G),fe=te.context||te,Pe=te.context&&(fe.nodeType||fe.jquery)?r(fe):r.event,Le=r.Deferred(),nt=r.Callbacks("once memory"),mt=te.statusCode||{},dt={},ht={},Rt="canceled",Se={readyState:0,getResponseHeader:function(Ge){var He;if(W){if(!z)for(z={};He=g.exec(B);)z[He[1].toLowerCase()+" "]=(z[He[1].toLowerCase()+" "]||[]).concat(He[2]);He=z[Ge.toLowerCase()+" "]}return He==null?null:He.join(", ")},getAllResponseHeaders:function(){return W?B:null},setRequestHeader:function(Ge,He){return W==null&&(Ge=ht[Ge.toLowerCase()]=ht[Ge.toLowerCase()]||Ge,dt[Ge]=He),this},overrideMimeType:function(Ge){return W==null&&(te.mimeType=Ge),this},statusCode:function(Ge){var He;if(Ge)if(W)Se.always(Ge[Se.status]);else for(He in Ge)mt[He]=[mt[He],Ge[He]];return this},abort:function(Ge){var He=Ge||Rt;return O&&O.abort(He),wt(0,He),this}};if(Le.promise(Se),te.url=((I||te.url||o.href)+"").replace(P,o.protocol+"//"),te.type=G.method||G.type||te.method||te.type,te.dataTypes=(te.dataType||"*").toLowerCase().match(l)||[""],te.crossDomain==null){K=p.createElement("a");try{K.href=te.url,K.href=K.href,te.crossDomain=_.protocol+"//"+_.host!=K.protocol+"//"+K.host}catch(Ge){te.crossDomain=!0}}if(te.data&&te.processData&&typeof te.data!="string"&&(te.data=r.param(te.data,te.traditional)),j(A,te,G,Se),W)return Se;re=r.event&&te.global,re&&r.active++===0&&r.event.trigger("ajaxStart"),te.type=te.type.toUpperCase(),te.hasContent=!y.test(te.type),U=te.url.replace(h,""),te.hasContent?te.data&&te.processData&&(te.contentType||"").indexOf("application/x-www-form-urlencoded")===0&&(te.data=te.data.replace(n,"+")):(pe=te.url.slice(U.length),te.data&&(te.processData||typeof te.data=="string")&&(U+=(m.test(U)?"&":"?")+te.data,delete te.data),te.cache===!1&&(U=U.replace(d,"$1"),pe=(m.test(U)?"&":"?")+"_="+u.guid+++pe),te.url=U+pe),te.ifModified&&(r.lastModified[U]&&Se.setRequestHeader("If-Modified-Since",r.lastModified[U]),r.etag[U]&&Se.setRequestHeader("If-None-Match",r.etag[U])),(te.data&&te.hasContent&&te.contentType!==!1||G.contentType)&&Se.setRequestHeader("Content-Type",te.contentType),Se.setRequestHeader("Accept",te.dataTypes[0]&&te.accepts[te.dataTypes[0]]?te.accepts[te.dataTypes[0]]+(te.dataTypes[0]!=="*"?", "+C+"; q=0.01":""):te.accepts["*"]);for(ne in te.headers)Se.setRequestHeader(ne,te.headers[ne]);if(te.beforeSend&&(te.beforeSend.call(fe,Se,te)===!1||W))return Se.abort();if(Rt="abort",nt.add(te.complete),Se.done(te.success),Se.fail(te.error),O=j(E,te,G,Se),!O)wt(-1,"No Transport");else{if(Se.readyState=1,re&&Pe.trigger("ajaxSend",[Se,te]),W)return Se;te.async&&te.timeout>0&&(F=window.setTimeout(function(){Se.abort("timeout")},te.timeout));try{W=!1,O.send(dt,wt)}catch(Ge){if(W)throw Ge;wt(-1,Ge)}}function wt(Ge,He,Bt,Oe){var le,Ce,je,oe,ye,he=He;W||(W=!0,F&&window.clearTimeout(F),O=void 0,B=Oe||"",Se.readyState=Ge>0?4:0,le=Ge>=200&&Ge<300||Ge===304,Bt&&(oe=k(te,Se,Bt)),!le&&r.inArray("script",te.dataTypes)>-1&&r.inArray("json",te.dataTypes)<0&&(te.converters["text script"]=function(){}),oe=x(te,oe,Se,le),le?(te.ifModified&&(ye=Se.getResponseHeader("Last-Modified"),ye&&(r.lastModified[U]=ye),ye=Se.getResponseHeader("etag"),ye&&(r.etag[U]=ye)),Ge===204||te.type==="HEAD"?he="nocontent":Ge===304?he="notmodified":(he=oe.state,Ce=oe.data,je=oe.error,le=!je)):(je=he,(Ge||!he)&&(he="error",Ge<0&&(Ge=0))),Se.status=Ge,Se.statusText=(He||he)+"",le?Le.resolveWith(fe,[Ce,he,Se]):Le.rejectWith(fe,[Se,he,je]),Se.statusCode(mt),mt=void 0,re&&Pe.trigger(le?"ajaxSuccess":"ajaxError",[Se,te,le?Ce:je]),nt.fireWith(fe,[Se,he]),re&&(Pe.trigger("ajaxComplete",[Se,te]),--r.active||r.event.trigger("ajaxStop")))}return Se},getJSON:function(I,G,O){return r.get(I,G,O,"json")},getScript:function(I,G){return r.get(I,void 0,G,"script")}}),r.each(["get","post"],function(I,G){r[G]=function(O,U,B,z){return c(U)&&(z=z||B,B=U,U=void 0),r.ajax(r.extend({url:O,type:G,dataType:z,data:U,success:B},r.isPlainObject(O)&&O))}}),r.ajaxPrefilter(function(I){var G;for(G in I.headers)G.toLowerCase()==="content-type"&&(I.contentType=I.headers[G]||"")}),r}.apply(b,f),i!==void 0&&(T.exports=i)},7533:(T,b,s)=>{var f,i;f=[s(8934),s(2134),s(6981),s(7661),s(7178)],i=function(r,p,c,l){"use strict";var o=[],u=/(=)\?(?=&|$)|\?\?/;r.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var m=o.pop()||r.expando+"_"+c.guid++;return this[m]=!0,m}}),r.ajaxPrefilter("json jsonp",function(m,n,h){var d,g,v,y=m.jsonp!==!1&&(u.test(m.url)?"url":typeof m.data=="string"&&(m.contentType||"").indexOf("application/x-www-form-urlencoded")===0&&u.test(m.data)&&"data");if(y||m.dataTypes[0]==="jsonp")return d=m.jsonpCallback=p(m.jsonpCallback)?m.jsonpCallback():m.jsonpCallback,y?m[y]=m[y].replace(u,"$1"+d):m.jsonp!==!1&&(m.url+=(l.test(m.url)?"&":"?")+m.jsonp+"="+d),m.converters["script json"]=function(){return v||r.error(d+" was not called"),v[0]},m.dataTypes[0]="json",g=window[d],window[d]=function(){v=arguments},h.always(function(){g===void 0?r(window).removeProp(d):window[d]=g,m[d]&&(m.jsonpCallback=n.jsonpCallback,o.push(d)),v&&p(g)&&g(v[0]),v=g=void 0}),"script"})}.apply(b,f),i!==void 0&&(T.exports=i)},4581:(T,b,s)=>{var f,i;f=[s(8934),s(4552),s(2134),s(2889),s(7178),s(8482),s(2632),s(655)],i=function(r,p,c){"use strict";r.fn.load=function(l,o,u){var m,n,h,d=this,g=l.indexOf(" ");return g>-1&&(m=p(l.slice(g)),l=l.slice(0,g)),c(o)?(u=o,o=void 0):o&&typeof o=="object"&&(n="POST"),d.length>0&&r.ajax({url:l,type:n||"GET",dataType:"html",data:o}).done(function(v){h=arguments,d.html(m?r("<div>").append(r.parseHTML(v)).find(m):v)}).always(u&&function(v,y){d.each(function(){u.apply(this,h||[v.responseText,y,v])})}),this}}.apply(b,f),i!==void 0&&(T.exports=i)},5488:(T,b,s)=>{var f,i;f=[s(8934),s(7792),s(7178)],i=function(r,p){"use strict";r.ajaxPrefilter(function(c){c.crossDomain&&(c.contents.script=!1)}),r.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(c){return r.globalEval(c),c}}}),r.ajaxPrefilter("script",function(c){c.cache===void 0&&(c.cache=!1),c.crossDomain&&(c.type="GET")}),r.ajaxTransport("script",function(c){if(c.crossDomain||c.scriptAttrs){var l,o;return{send:function(u,m){l=r("<script>").attr(c.scriptAttrs||{}).prop({charset:c.scriptCharset,src:c.url}).on("load error",o=function(n){l.remove(),o=null,n&&m(n.type==="error"?404:200,n.type)}),p.head.appendChild(l[0])},abort:function(){o&&o()}}}})}.apply(b,f),i!==void 0&&(T.exports=i)},454:(T,b,s)=>{var f;f=function(){"use strict";return window.location}.call(b,s,b,T),f!==void 0&&(T.exports=f)},6981:(T,b,s)=>{var f;f=function(){"use strict";return{guid:Date.now()}}.call(b,s,b,T),f!==void 0&&(T.exports=f)},7661:(T,b,s)=>{var f;f=function(){"use strict";return/\?/}.call(b,s,b,T),f!==void 0&&(T.exports=f)},8853:(T,b,s)=>{var f,i;f=[s(8934),s(9523),s(7178)],i=function(r,p){"use strict";r.ajaxSettings.xhr=function(){try{return new window.XMLHttpRequest}catch(o){}};var c={0:200,1223:204},l=r.ajaxSettings.xhr();p.cors=!!l&&"withCredentials"in l,p.ajax=l=!!l,r.ajaxTransport(function(o){var u,m;if(p.cors||l&&!o.crossDomain)return{send:function(n,h){var d,g=o.xhr();if(g.open(o.type,o.url,o.async,o.username,o.password),o.xhrFields)for(d in o.xhrFields)g[d]=o.xhrFields[d];o.mimeType&&g.overrideMimeType&&g.overrideMimeType(o.mimeType),!o.crossDomain&&!n["X-Requested-With"]&&(n["X-Requested-With"]="XMLHttpRequest");for(d in n)g.setRequestHeader(d,n[d]);u=function(v){return function(){u&&(u=m=g.onload=g.onerror=g.onabort=g.ontimeout=g.onreadystatechange=null,v==="abort"?g.abort():v==="error"?typeof g.status!="number"?h(0,"error"):h(g.status,g.statusText):h(c[g.status]||g.status,g.statusText,(g.responseType||"text")!=="text"||typeof g.responseText!="string"?{binary:g.response}:{text:g.responseText},g.getAllResponseHeaders()))}},g.onload=u(),m=g.onerror=g.ontimeout=u("error"),g.onabort!==void 0?g.onabort=m:g.onreadystatechange=function(){g.readyState===4&&window.setTimeout(function(){u&&m()})},u=u("abort");try{g.send(o.hasContent&&o.data||null)}catch(v){if(u)throw v}},abort:function(){u&&u()}}})}.apply(b,f),i!==void 0&&(T.exports=i)},8468:(T,b,s)=>{var f,i;f=[s(8934),s(2853),s(4043),s(4015),s(4580)],i=function(r){"use strict";return r}.apply(b,f),i!==void 0&&(T.exports=i)},2853:(T,b,s)=>{var f,i;f=[s(8934),s(7163),s(7060),s(2941),s(8663),s(655)],i=function(r,p,c,l,o){"use strict";var u,m=r.expr.attrHandle;r.fn.extend({attr:function(n,h){return p(this,r.attr,n,h,arguments.length>1)},removeAttr:function(n){return this.each(function(){r.removeAttr(this,n)})}}),r.extend({attr:function(n,h,d){var g,v,y=n.nodeType;if(!(y===3||y===8||y===2)){if(typeof n.getAttribute=="undefined")return r.prop(n,h,d);if((y!==1||!r.isXMLDoc(n))&&(v=r.attrHooks[h.toLowerCase()]||(r.expr.match.bool.test(h)?u:void 0)),d!==void 0){if(d===null){r.removeAttr(n,h);return}return v&&"set"in v&&(g=v.set(n,d,h))!==void 0?g:(n.setAttribute(h,d+""),d)}return v&&"get"in v&&(g=v.get(n,h))!==null?g:(g=r.find.attr(n,h),g==null?void 0:g)}},attrHooks:{type:{set:function(n,h){if(!l.radioValue&&h==="radio"&&c(n,"input")){var d=n.value;return n.setAttribute("type",h),d&&(n.value=d),h}}}},removeAttr:function(n,h){var d,g=0,v=h&&h.match(o);if(v&&n.nodeType===1)for(;d=v[g++];)n.removeAttribute(d)}}),u={set:function(n,h,d){return h===!1?r.removeAttr(n,d):n.setAttribute(d,d),d}},r.each(r.expr.match.bool.source.match(/\w+/g),function(n,h){var d=m[h]||r.find.attr;m[h]=function(g,v,y){var P,A,E=v.toLowerCase();return y||(A=m[E],m[E]=P,P=d(g,v,y)!=null?E:null,m[E]=A),P}})}.apply(b,f),i!==void 0&&(T.exports=i)},4015:(T,b,s)=>{var f,i;f=[s(8934),s(4552),s(2134),s(8663),s(9081),s(8048)],i=function(r,p,c,l,o){"use strict";function u(n){return n.getAttribute&&n.getAttribute("class")||""}function m(n){return Array.isArray(n)?n:typeof n=="string"?n.match(l)||[]:[]}r.fn.extend({addClass:function(n){var h,d,g,v,y,P;return c(n)?this.each(function(A){r(this).addClass(n.call(this,A,u(this)))}):(h=m(n),h.length?this.each(function(){if(g=u(this),d=this.nodeType===1&&" "+p(g)+" ",d){for(y=0;y<h.length;y++)v=h[y],d.indexOf(" "+v+" ")<0&&(d+=v+" ");P=p(d),g!==P&&this.setAttribute("class",P)}}):this)},removeClass:function(n){var h,d,g,v,y,P;return c(n)?this.each(function(A){r(this).removeClass(n.call(this,A,u(this)))}):arguments.length?(h=m(n),h.length?this.each(function(){if(g=u(this),d=this.nodeType===1&&" "+p(g)+" ",d){for(y=0;y<h.length;y++)for(v=h[y];d.indexOf(" "+v+" ")>-1;)d=d.replace(" "+v+" "," ");P=p(d),g!==P&&this.setAttribute("class",P)}}):this):this.attr("class","")},toggleClass:function(n,h){var d,g,v,y,P=typeof n,A=P==="string"||Array.isArray(n);return c(n)?this.each(function(E){r(this).toggleClass(n.call(this,E,u(this),h),h)}):typeof h=="boolean"&&A?h?this.addClass(n):this.removeClass(n):(d=m(n),this.each(function(){if(A)for(y=r(this),v=0;v<d.length;v++)g=d[v],y.hasClass(g)?y.removeClass(g):y.addClass(g);else(n===void 0||P==="boolean")&&(g=u(this),g&&o.set(this,"__className__",g),this.setAttribute&&this.setAttribute("class",g||n===!1?"":o.get(this,"__className__")||""))}))},hasClass:function(n){var h,d,g=0;for(h=" "+n+" ";d=this[g++];)if(d.nodeType===1&&(" "+p(u(d))+" ").indexOf(h)>-1)return!0;return!1}})}.apply(b,f),i!==void 0&&(T.exports=i)},4043:(T,b,s)=>{var f,i;f=[s(8934),s(7163),s(2941),s(655)],i=function(r,p,c){"use strict";var l=/^(?:input|select|textarea|button)$/i,o=/^(?:a|area)$/i;r.fn.extend({prop:function(u,m){return p(this,r.prop,u,m,arguments.length>1)},removeProp:function(u){return this.each(function(){delete this[r.propFix[u]||u]})}}),r.extend({prop:function(u,m,n){var h,d,g=u.nodeType;if(!(g===3||g===8||g===2))return(g!==1||!r.isXMLDoc(u))&&(m=r.propFix[m]||m,d=r.propHooks[m]),n!==void 0?d&&"set"in d&&(h=d.set(u,n,m))!==void 0?h:u[m]=n:d&&"get"in d&&(h=d.get(u,m))!==null?h:u[m]},propHooks:{tabIndex:{get:function(u){var m=r.find.attr(u,"tabindex");return m?parseInt(m,10):l.test(u.nodeName)||o.test(u.nodeName)&&u.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),c.optSelected||(r.propHooks.selected={get:function(u){var m=u.parentNode;return m&&m.parentNode&&m.parentNode.selectedIndex,null},set:function(u){var m=u.parentNode;m&&(m.selectedIndex,m.parentNode&&m.parentNode.selectedIndex)}}),r.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){r.propFix[this.toLowerCase()]=this})}.apply(b,f),i!==void 0&&(T.exports=i)},2941:(T,b,s)=>{var f,i;f=[s(7792),s(9523)],i=function(r,p){"use strict";return function(){var c=r.createElement("input"),l=r.createElement("select"),o=l.appendChild(r.createElement("option"));c.type="checkbox",p.checkOn=c.value!=="",p.optSelected=o.selected,c=r.createElement("input"),c.value="t",c.type="radio",p.radioValue=c.value==="t"}(),p}.apply(b,f),i!==void 0&&(T.exports=i)},4580:(T,b,s)=>{var f,i;f=[s(8934),s(4552),s(2941),s(7060),s(2134),s(8048)],i=function(r,p,c,l,o){"use strict";var u=/\r/g;r.fn.extend({val:function(m){var n,h,d,g=this[0];return arguments.length?(d=o(m),this.each(function(v){var y;this.nodeType===1&&(d?y=m.call(this,v,r(this).val()):y=m,y==null?y="":typeof y=="number"?y+="":Array.isArray(y)&&(y=r.map(y,function(P){return P==null?"":P+""})),n=r.valHooks[this.type]||r.valHooks[this.nodeName.toLowerCase()],(!n||!("set"in n)||n.set(this,y,"value")===void 0)&&(this.value=y))})):g?(n=r.valHooks[g.type]||r.valHooks[g.nodeName.toLowerCase()],n&&"get"in n&&(h=n.get(g,"value"))!==void 0?h:(h=g.value,typeof h=="string"?h.replace(u,""):h==null?"":h)):void 0}}),r.extend({valHooks:{option:{get:function(m){var n=r.find.attr(m,"value");return n!=null?n:p(r.text(m))}},select:{get:function(m){var n,h,d,g=m.options,v=m.selectedIndex,y=m.type==="select-one",P=y?null:[],A=y?v+1:g.length;for(v<0?d=A:d=y?v:0;d<A;d++)if(h=g[d],(h.selected||d===v)&&!h.disabled&&(!h.parentNode.disabled||!l(h.parentNode,"optgroup"))){if(n=r(h).val(),y)return n;P.push(n)}return P},set:function(m,n){for(var h,d,g=m.options,v=r.makeArray(n),y=g.length;y--;)d=g[y],(d.selected=r.inArray(r.valHooks.option.get(d),v)>-1)&&(h=!0);return h||(m.selectedIndex=-1),v}}}}),r.each(["radio","checkbox"],function(){r.valHooks[this]={set:function(m,n){if(Array.isArray(n))return m.checked=r.inArray(r(m).val(),n)>-1}},c.checkOn||(r.valHooks[this].get=function(m){return m.getAttribute("value")===null?"on":m.value})})}.apply(b,f),i!==void 0&&(T.exports=i)},8924:(T,b,s)=>{var f,i;f=[s(8934),s(8082),s(2134),s(8663)],i=function(r,p,c,l){"use strict";function o(u){var m={};return r.each(u.match(l)||[],function(n,h){m[h]=!0}),m}return r.Callbacks=function(u){u=typeof u=="string"?o(u):r.extend({},u);var m,n,h,d,g=[],v=[],y=-1,P=function(){for(d=d||u.once,h=m=!0;v.length;y=-1)for(n=v.shift();++y<g.length;)g[y].apply(n[0],n[1])===!1&&u.stopOnFalse&&(y=g.length,n=!1);u.memory||(n=!1),m=!1,d&&(n?g=[]:g="")},A={add:function(){return g&&(n&&!m&&(y=g.length-1,v.push(n)),function E(C){r.each(C,function(_,R){c(R)?(!u.unique||!A.has(R))&&g.push(R):R&&R.length&&p(R)!=="string"&&E(R)})}(arguments),n&&!m&&P()),this},remove:function(){return r.each(arguments,function(E,C){for(var _;(_=r.inArray(C,g,_))>-1;)g.splice(_,1),_<=y&&y--}),this},has:function(E){return E?r.inArray(E,g)>-1:g.length>0},empty:function(){return g&&(g=[]),this},disable:function(){return d=v=[],g=n="",this},disabled:function(){return!g},lock:function(){return d=v=[],!n&&!m&&(g=n=""),this},locked:function(){return!!d},fireWith:function(E,C){return d||(C=C||[],C=[E,C.slice?C.slice():C],v.push(C),m||P()),this},fire:function(){return A.fireWith(this,arguments),this},fired:function(){return!!h}};return A},r}.apply(b,f),i!==void 0&&(T.exports=i)},8934:(T,b,s)=>{var f,i;f=[s(3727),s(8045),s(3623),s(3932),s(1780),s(5431),s(5949),s(7763),s(9694),s(4194),s(3),s(9523),s(2134),s(9031),s(1224),s(8082)],i=function(r,p,c,l,o,u,m,n,h,d,g,v,y,P,A,E){"use strict";var C="3.6.1",_=function(j,D){return new _.fn.init(j,D)};_.fn=_.prototype={jquery:C,constructor:_,length:0,toArray:function(){return c.call(this)},get:function(j){return j==null?c.call(this):j<0?this[j+this.length]:this[j]},pushStack:function(j){var D=_.merge(this.constructor(),j);return D.prevObject=this,D},each:function(j){return _.each(this,j)},map:function(j){return this.pushStack(_.map(this,function(D,k){return j.call(D,k,D)}))},slice:function(){return this.pushStack(c.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(_.grep(this,function(j,D){return(D+1)%2}))},odd:function(){return this.pushStack(_.grep(this,function(j,D){return D%2}))},eq:function(j){var D=this.length,k=+j+(j<0?D:0);return this.pushStack(k>=0&&k<D?[this[k]]:[])},end:function(){return this.prevObject||this.constructor()},push:o,sort:r.sort,splice:r.splice},_.extend=_.fn.extend=function(){var j,D,k,x,I,G,O=arguments[0]||{},U=1,B=arguments.length,z=!1;for(typeof O=="boolean"&&(z=O,O=arguments[U]||{},U++),typeof O!="object"&&!y(O)&&(O={}),U===B&&(O=this,U--);U<B;U++)if((j=arguments[U])!=null)for(D in j)x=j[D],!(D==="__proto__"||O===x)&&(z&&x&&(_.isPlainObject(x)||(I=Array.isArray(x)))?(k=O[D],I&&!Array.isArray(k)?G=[]:!I&&!_.isPlainObject(k)?G={}:G=k,I=!1,O[D]=_.extend(z,G,x)):x!==void 0&&(O[D]=x));return O},_.extend({expando:"jQuery"+(C+Math.random()).replace(/\D/g,""),isReady:!0,error:function(j){throw new Error(j)},noop:function(){},isPlainObject:function(j){var D,k;return!j||n.call(j)!=="[object Object]"?!1:(D=p(j),D?(k=h.call(D,"constructor")&&D.constructor,typeof k=="function"&&d.call(k)===g):!0)},isEmptyObject:function(j){var D;for(D in j)return!1;return!0},globalEval:function(j,D,k){A(j,{nonce:D&&D.nonce},k)},each:function(j,D){var k,x=0;if(R(j))for(k=j.length;x<k&&D.call(j[x],x,j[x])!==!1;x++);else for(x in j)if(D.call(j[x],x,j[x])===!1)break;return j},makeArray:function(j,D){var k=D||[];return j!=null&&(R(Object(j))?_.merge(k,typeof j=="string"?[j]:j):o.call(k,j)),k},inArray:function(j,D,k){return D==null?-1:u.call(D,j,k)},merge:function(j,D){for(var k=+D.length,x=0,I=j.length;x<k;x++)j[I++]=D[x];return j.length=I,j},grep:function(j,D,k){for(var x,I=[],G=0,O=j.length,U=!k;G<O;G++)x=!D(j[G],G),x!==U&&I.push(j[G]);return I},map:function(j,D,k){var x,I,G=0,O=[];if(R(j))for(x=j.length;G<x;G++)I=D(j[G],G,k),I!=null&&O.push(I);else for(G in j)I=D(j[G],G,k),I!=null&&O.push(I);return l(O)},guid:1,support:v}),typeof Symbol=="function"&&(_.fn[Symbol.iterator]=r[Symbol.iterator]),_.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(j,D){m["[object "+D+"]"]=D.toLowerCase()});function R(j){var D=!!j&&"length"in j&&j.length,k=E(j);return y(j)||P(j)?!1:k==="array"||D===0||typeof D=="number"&&D>0&&D-1 in j}return _}.apply(b,f),i!==void 0&&(T.exports=i)},1224:(T,b,s)=>{var f,i;f=[s(7792)],i=function(r){"use strict";var p={type:!0,src:!0,nonce:!0,noModule:!0};function c(l,o,u){u=u||r;var m,n,h=u.createElement("script");if(h.text=l,o)for(m in p)n=o[m]||o.getAttribute&&o.getAttribute(m),n&&h.setAttribute(m,n);u.head.appendChild(h).parentNode.removeChild(h)}return c}.apply(b,f),i!==void 0&&(T.exports=i)},7163:(T,b,s)=>{var f,i;f=[s(8934),s(8082),s(2134)],i=function(r,p,c){"use strict";var l=function(o,u,m,n,h,d,g){var v=0,y=o.length,P=m==null;if(p(m)==="object"){h=!0;for(v in m)l(o,u,v,m[v],!0,d,g)}else if(n!==void 0&&(h=!0,c(n)||(g=!0),P&&(g?(u.call(o,n),u=null):(P=u,u=function(A,E,C){return P.call(r(A),C)})),u))for(;v<y;v++)u(o[v],m,g?n:n.call(o[v],v,u(o[v],m)));return h?o:P?u.call(o):y?u(o[0],m):d};return l}.apply(b,f),i!==void 0&&(T.exports=i)},1133:(T,b)=>{var s,f;s=[],f=function(){"use strict";var i=/^-ms-/,r=/-([a-z])/g;function p(l,o){return o.toUpperCase()}function c(l){return l.replace(i,"ms-").replace(r,p)}return c}.apply(b,s),f!==void 0&&(T.exports=f)},8048:(T,b,s)=>{var f,i;f=[s(8934),s(7792),s(2134),s(5250),s(1764)],i=function(r,p,c,l){"use strict";var o,u=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,m=r.fn.init=function(n,h,d){var g,v;if(!n)return this;if(d=d||o,typeof n=="string")if(n[0]==="<"&&n[n.length-1]===">"&&n.length>=3?g=[null,n,null]:g=u.exec(n),g&&(g[1]||!h))if(g[1]){if(h=h instanceof r?h[0]:h,r.merge(this,r.parseHTML(g[1],h&&h.nodeType?h.ownerDocument||h:p,!0)),l.test(g[1])&&r.isPlainObject(h))for(g in h)c(this[g])?this[g](h[g]):this.attr(g,h[g]);return this}else return v=p.getElementById(g[2]),v&&(this[0]=v,this.length=1),this;else return!h||h.jquery?(h||d).find(n):this.constructor(h).find(n);else{if(n.nodeType)return this[0]=n,this.length=1,this;if(c(n))return d.ready!==void 0?d.ready(n):n(r)}return r.makeArray(n,this)};return m.prototype=r.fn,o=r(p),m}.apply(b,f),i!==void 0&&(T.exports=i)},70:(T,b,s)=>{var f,i;f=[s(8934),s(7730),s(655)],i=function(r,p){"use strict";var c=function(o){return r.contains(o.ownerDocument,o)},l={composed:!0};return p.getRootNode&&(c=function(o){return r.contains(o.ownerDocument,o)||o.getRootNode(l)===o.ownerDocument}),c}.apply(b,f),i!==void 0&&(T.exports=i)},7060:(T,b,s)=>{var f;f=function(){"use strict";function i(r,p){return r.nodeName&&r.nodeName.toLowerCase()===p.toLowerCase()}return i}.call(b,s,b,T),f!==void 0&&(T.exports=f)},2889:(T,b,s)=>{var f,i;f=[s(8934),s(7792),s(5250),s(3360),s(1622)],i=function(r,p,c,l,o){"use strict";return r.parseHTML=function(u,m,n){if(typeof u!="string")return[];typeof m=="boolean"&&(n=m,m=!1);var h,d,g;return m||(o.createHTMLDocument?(m=p.implementation.createHTMLDocument(""),h=m.createElement("base"),h.href=p.location.href,m.head.appendChild(h)):m=p),d=c.exec(u),g=!n&&[],d?[m.createElement(d[1])]:(d=l([u],m,g),g&&g.length&&r(g).remove(),r.merge([],d.childNodes))},r.parseHTML}.apply(b,f),i!==void 0&&(T.exports=i)},461:(T,b,s)=>{var f,i;f=[s(8934)],i=function(r){"use strict";return r.parseXML=function(p){var c,l;if(!p||typeof p!="string")return null;try{c=new window.DOMParser().parseFromString(p,"text/xml")}catch(o){}return l=c&&c.getElementsByTagName("parsererror")[0],(!c||l)&&r.error("Invalid XML: "+(l?r.map(l.childNodes,function(o){return o.textContent}).join(`
`):p)),c},r.parseXML}.apply(b,f),i!==void 0&&(T.exports=i)},5703:(T,b,s)=>{var f,i;f=[s(8934),s(7792),s(3442),s(6525)],i=function(r,p){"use strict";var c=r.Deferred();r.fn.ready=function(o){return c.then(o).catch(function(u){r.readyException(u)}),this},r.extend({isReady:!1,readyWait:1,ready:function(o){(o===!0?--r.readyWait:r.isReady)||(r.isReady=!0,!(o!==!0&&--r.readyWait>0)&&c.resolveWith(p,[r]))}}),r.ready.then=c.then;function l(){p.removeEventListener("DOMContentLoaded",l),window.removeEventListener("load",l),r.ready()}p.readyState==="complete"||p.readyState!=="loading"&&!p.documentElement.doScroll?window.setTimeout(r.ready):(p.addEventListener("DOMContentLoaded",l),window.addEventListener("load",l))}.apply(b,f),i!==void 0&&(T.exports=i)},3442:(T,b,s)=>{var f,i;f=[s(8934)],i=function(r){"use strict";r.readyException=function(p){window.setTimeout(function(){throw p})}}.apply(b,f),i!==void 0&&(T.exports=i)},4552:(T,b,s)=>{var f,i;f=[s(8663)],i=function(r){"use strict";function p(c){var l=c.match(r)||[];return l.join(" ")}return p}.apply(b,f),i!==void 0&&(T.exports=i)},1622:(T,b,s)=>{var f,i;f=[s(7792),s(9523)],i=function(r,p){"use strict";return p.createHTMLDocument=function(){var c=r.implementation.createHTMLDocument("").body;return c.innerHTML="<form></form><form></form>",c.childNodes.length===2}(),p}.apply(b,f),i!==void 0&&(T.exports=i)},8082:(T,b,s)=>{var f,i;f=[s(5949),s(7763)],i=function(r,p){"use strict";function c(l){return l==null?l+"":typeof l=="object"||typeof l=="function"?r[p.call(l)]||"object":typeof l}return c}.apply(b,f),i!==void 0&&(T.exports=i)},5250:(T,b,s)=>{var f;f=function(){"use strict";return/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i}.call(b,s,b,T),f!==void 0&&(T.exports=f)},8515:(T,b,s)=>{var f,i;f=[s(8934),s(7163),s(1133),s(7060),s(6871),s(618),s(4507),s(5057),s(3122),s(5410),s(610),s(7432),s(3781),s(4405),s(3997),s(8048),s(5703),s(655)],i=function(r,p,c,l,o,u,m,n,h,d,g,v,y,P,A){"use strict";var E=/^(none|table(?!-c[ea]).+)/,C={position:"absolute",visibility:"hidden",display:"block"},_={letterSpacing:"0",fontWeight:"400"};function R(k,x,I){var G=o.exec(x);return G?Math.max(0,G[2]-(I||0))+(G[3]||"px"):x}function j(k,x,I,G,O,U){var B=x==="width"?1:0,z=0,F=0;if(I===(G?"border":"content"))return 0;for(;B<4;B+=2)I==="margin"&&(F+=r.css(k,I+n[B],!0,O)),G?(I==="content"&&(F-=r.css(k,"padding"+n[B],!0,O)),I!=="margin"&&(F-=r.css(k,"border"+n[B]+"Width",!0,O))):(F+=r.css(k,"padding"+n[B],!0,O),I!=="padding"?F+=r.css(k,"border"+n[B]+"Width",!0,O):z+=r.css(k,"border"+n[B]+"Width",!0,O));return!G&&U>=0&&(F+=Math.max(0,Math.ceil(k["offset"+x[0].toUpperCase()+x.slice(1)]-U-F-z-.5))||0),F}function D(k,x,I){var G=h(k),O=!P.boxSizingReliable()||I,U=O&&r.css(k,"boxSizing",!1,G)==="border-box",B=U,z=g(k,x,G),F="offset"+x[0].toUpperCase()+x.slice(1);if(u.test(z)){if(!I)return z;z="auto"}return(!P.boxSizingReliable()&&U||!P.reliableTrDimensions()&&l(k,"tr")||z==="auto"||!parseFloat(z)&&r.css(k,"display",!1,G)==="inline")&&k.getClientRects().length&&(U=r.css(k,"boxSizing",!1,G)==="border-box",B=F in k,B&&(z=k[F])),z=parseFloat(z)||0,z+j(k,x,I||(U?"border":"content"),B,G,z)+"px"}return r.extend({cssHooks:{opacity:{get:function(k,x){if(x){var I=g(k,"opacity");return I===""?"1":I}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(k,x,I,G){if(!(!k||k.nodeType===3||k.nodeType===8||!k.style)){var O,U,B,z=c(x),F=m.test(x),K=k.style;if(F||(x=A(z)),B=r.cssHooks[x]||r.cssHooks[z],I!==void 0){if(U=typeof I,U==="string"&&(O=o.exec(I))&&O[1]&&(I=v(k,x,O),U="number"),I==null||I!==I)return;U==="number"&&!F&&(I+=O&&O[3]||(r.cssNumber[z]?"":"px")),!P.clearCloneStyle&&I===""&&x.indexOf("background")===0&&(K[x]="inherit"),(!B||!("set"in B)||(I=B.set(k,I,G))!==void 0)&&(F?K.setProperty(x,I):K[x]=I)}else return B&&"get"in B&&(O=B.get(k,!1,G))!==void 0?O:K[x]}},css:function(k,x,I,G){var O,U,B,z=c(x),F=m.test(x);return F||(x=A(z)),B=r.cssHooks[x]||r.cssHooks[z],B&&"get"in B&&(O=B.get(k,!0,I)),O===void 0&&(O=g(k,x,G)),O==="normal"&&x in _&&(O=_[x]),I===""||I?(U=parseFloat(O),I===!0||isFinite(U)?U||0:O):O}}),r.each(["height","width"],function(k,x){r.cssHooks[x]={get:function(I,G,O){if(G)return E.test(r.css(I,"display"))&&(!I.getClientRects().length||!I.getBoundingClientRect().width)?d(I,C,function(){return D(I,x,O)}):D(I,x,O)},set:function(I,G,O){var U,B=h(I),z=!P.scrollboxSize()&&B.position==="absolute",F=z||O,K=F&&r.css(I,"boxSizing",!1,B)==="border-box",W=O?j(I,x,O,K,B):0;return K&&z&&(W-=Math.ceil(I["offset"+x[0].toUpperCase()+x.slice(1)]-parseFloat(B[x])-j(I,x,"border",!1,B)-.5)),W&&(U=o.exec(G))&&(U[3]||"px")!=="px"&&(I.style[x]=G,G=r.css(I,x)),R(I,G,W)}}}),r.cssHooks.marginLeft=y(P.reliableMarginLeft,function(k,x){if(x)return(parseFloat(g(k,"marginLeft"))||k.getBoundingClientRect().left-d(k,{marginLeft:0},function(){return k.getBoundingClientRect().left}))+"px"}),r.each({margin:"",padding:"",border:"Width"},function(k,x){r.cssHooks[k+x]={expand:function(I){for(var G=0,O={},U=typeof I=="string"?I.split(" "):[I];G<4;G++)O[k+n[G]+x]=U[G]||U[G-2]||U[0];return O}},k!=="margin"&&(r.cssHooks[k+x].set=R)}),r.fn.extend({css:function(k,x){return p(this,function(I,G,O){var U,B,z={},F=0;if(Array.isArray(G)){for(U=h(I),B=G.length;F<B;F++)z[G[F]]=r.css(I,G[F],!1,U);return z}return O!==void 0?r.style(I,G,O):r.css(I,G)},k,x,arguments.length>1)}}),r}.apply(b,f),i!==void 0&&(T.exports=i)},3781:(T,b,s)=>{var f;f=function(){"use strict";function i(r,p){return{get:function(){if(r()){delete this.get;return}return(this.get=p).apply(this,arguments)}}}return i}.call(b,s,b,T),f!==void 0&&(T.exports=f)},7432:(T,b,s)=>{var f,i;f=[s(8934),s(6871)],i=function(r,p){"use strict";function c(l,o,u,m){var n,h,d=20,g=m?function(){return m.cur()}:function(){return r.css(l,o,"")},v=g(),y=u&&u[3]||(r.cssNumber[o]?"":"px"),P=l.nodeType&&(r.cssNumber[o]||y!=="px"&&+v)&&p.exec(r.css(l,o));if(P&&P[3]!==y){for(v=v/2,y=y||P[3],P=+v||1;d--;)r.style(l,o,P+y),(1-h)*(1-(h=g()/v||.5))<=0&&(d=0),P=P/h;P=P*2,r.style(l,o,P+y),u=u||[]}return u&&(P=+P||+v||0,n=u[1]?P+(u[1]+1)*u[2]:+u[2],m&&(m.unit=y,m.start=P,m.end=n)),n}return c}.apply(b,f),i!==void 0&&(T.exports=i)},610:(T,b,s)=>{var f,i;f=[s(8934),s(70),s(3151),s(618),s(3122),s(4507),s(9508),s(4405)],i=function(r,p,c,l,o,u,m,n){"use strict";function h(d,g,v){var y,P,A,E,C=u.test(g),_=d.style;return v=v||o(d),v&&(E=v.getPropertyValue(g)||v[g],C&&(E=E.replace(m,"$1")),E===""&&!p(d)&&(E=r.style(d,g)),!n.pixelBoxStyles()&&l.test(E)&&c.test(g)&&(y=_.width,P=_.minWidth,A=_.maxWidth,_.minWidth=_.maxWidth=_.width=E,E=v.width,_.width=y,_.minWidth=P,_.maxWidth=A)),E!==void 0?E+"":E}return h}.apply(b,f),i!==void 0&&(T.exports=i)},3997:(T,b,s)=>{var f,i;f=[s(7792),s(8934)],i=function(r,p){"use strict";var c=["Webkit","Moz","ms"],l=r.createElement("div").style,o={};function u(n){for(var h=n[0].toUpperCase()+n.slice(1),d=c.length;d--;)if(n=c[d]+h,n in l)return n}function m(n){var h=p.cssProps[n]||o[n];return h||(n in l?n:o[n]=u(n)||n)}return m}.apply(b,f),i!==void 0&&(T.exports=i)},2365:(T,b,s)=>{var f,i;f=[s(8934),s(655)],i=function(r){"use strict";r.expr.pseudos.hidden=function(p){return!r.expr.pseudos.visible(p)},r.expr.pseudos.visible=function(p){return!!(p.offsetWidth||p.offsetHeight||p.getClientRects().length)}}.apply(b,f),i!==void 0&&(T.exports=i)},8516:(T,b,s)=>{var f,i;f=[s(8934),s(9081),s(5626)],i=function(r,p,c){"use strict";var l={};function o(m){var n,h=m.ownerDocument,d=m.nodeName,g=l[d];return g||(n=h.body.appendChild(h.createElement(d)),g=r.css(n,"display"),n.parentNode.removeChild(n),g==="none"&&(g="block"),l[d]=g,g)}function u(m,n){for(var h,d,g=[],v=0,y=m.length;v<y;v++)d=m[v],d.style&&(h=d.style.display,n?(h==="none"&&(g[v]=p.get(d,"display")||null,g[v]||(d.style.display="")),d.style.display===""&&c(d)&&(g[v]=o(d))):h!=="none"&&(g[v]="none",p.set(d,"display",h)));for(v=0;v<y;v++)g[v]!=null&&(m[v].style.display=g[v]);return m}return r.fn.extend({show:function(){return u(this,!0)},hide:function(){return u(this)},toggle:function(m){return typeof m=="boolean"?m?this.show():this.hide():this.each(function(){c(this)?r(this).show():r(this).hide()})}}),u}.apply(b,f),i!==void 0&&(T.exports=i)},4405:(T,b,s)=>{var f,i;f=[s(8934),s(7792),s(7730),s(9523)],i=function(r,p,c,l){"use strict";return function(){function o(){if(!!P){y.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",P.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",c.appendChild(y).appendChild(P);var A=window.getComputedStyle(P);m=A.top!=="1%",v=u(A.marginLeft)===12,P.style.right="60%",d=u(A.right)===36,n=u(A.width)===36,P.style.position="absolute",h=u(P.offsetWidth/3)===12,c.removeChild(y),P=null}}function u(A){return Math.round(parseFloat(A))}var m,n,h,d,g,v,y=p.createElement("div"),P=p.createElement("div");!P.style||(P.style.backgroundClip="content-box",P.cloneNode(!0).style.backgroundClip="",l.clearCloneStyle=P.style.backgroundClip==="content-box",r.extend(l,{boxSizingReliable:function(){return o(),n},pixelBoxStyles:function(){return o(),d},pixelPosition:function(){return o(),m},reliableMarginLeft:function(){return o(),v},scrollboxSize:function(){return o(),h},reliableTrDimensions:function(){var A,E,C,_;return g==null&&(A=p.createElement("table"),E=p.createElement("tr"),C=p.createElement("div"),A.style.cssText="position:absolute;left:-11111px;border-collapse:separate",E.style.cssText="border:1px solid",E.style.height="1px",C.style.height="9px",C.style.display="block",c.appendChild(A).appendChild(E).appendChild(C),_=window.getComputedStyle(E),g=parseInt(_.height,10)+parseInt(_.borderTopWidth,10)+parseInt(_.borderBottomWidth,10)===E.offsetHeight,c.removeChild(A)),g}}))}(),l}.apply(b,f),i!==void 0&&(T.exports=i)},5057:(T,b,s)=>{var f;f=function(){"use strict";return["Top","Right","Bottom","Left"]}.call(b,s,b,T),f!==void 0&&(T.exports=f)},3122:(T,b,s)=>{var f;f=function(){"use strict";return function(i){var r=i.ownerDocument.defaultView;return(!r||!r.opener)&&(r=window),r.getComputedStyle(i)}}.call(b,s,b,T),f!==void 0&&(T.exports=f)},5626:(T,b,s)=>{var f,i;f=[s(8934),s(70)],i=function(r,p){"use strict";return function(c,l){return c=l||c,c.style.display==="none"||c.style.display===""&&p(c)&&r.css(c,"display")==="none"}}.apply(b,f),i!==void 0&&(T.exports=i)},3151:(T,b,s)=>{var f,i;f=[s(5057)],i=function(r){"use strict";return new RegExp(r.join("|"),"i")}.apply(b,f),i!==void 0&&(T.exports=i)},4507:(T,b,s)=>{var f;f=function(){"use strict";return/^--/}.call(b,s,b,T),f!==void 0&&(T.exports=f)},618:(T,b,s)=>{var f,i;f=[s(8308)],i=function(r){"use strict";return new RegExp("^("+r+")(?!px)[a-z%]+$","i")}.apply(b,f),i!==void 0&&(T.exports=i)},5410:(T,b,s)=>{var f;f=function(){"use strict";return function(i,r,p){var c,l,o={};for(l in r)o[l]=i.style[l],i.style[l]=r[l];c=p.call(i);for(l in r)i.style[l]=o[l];return c}}.call(b,s,b,T),f!==void 0&&(T.exports=f)},1786:(T,b,s)=>{var f,i;f=[s(8934),s(7163),s(1133),s(9081),s(2109)],i=function(r,p,c,l,o){"use strict";var u=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,m=/[A-Z]/g;function n(d){return d==="true"?!0:d==="false"?!1:d==="null"?null:d===+d+""?+d:u.test(d)?JSON.parse(d):d}function h(d,g,v){var y;if(v===void 0&&d.nodeType===1)if(y="data-"+g.replace(m,"-$&").toLowerCase(),v=d.getAttribute(y),typeof v=="string"){try{v=n(v)}catch(P){}o.set(d,g,v)}else v=void 0;return v}return r.extend({hasData:function(d){return o.hasData(d)||l.hasData(d)},data:function(d,g,v){return o.access(d,g,v)},removeData:function(d,g){o.remove(d,g)},_data:function(d,g,v){return l.access(d,g,v)},_removeData:function(d,g){l.remove(d,g)}}),r.fn.extend({data:function(d,g){var v,y,P,A=this[0],E=A&&A.attributes;if(d===void 0){if(this.length&&(P=o.get(A),A.nodeType===1&&!l.get(A,"hasDataAttrs"))){for(v=E.length;v--;)E[v]&&(y=E[v].name,y.indexOf("data-")===0&&(y=c(y.slice(5)),h(A,y,P[y])));l.set(A,"hasDataAttrs",!0)}return P}return typeof d=="object"?this.each(function(){o.set(this,d)}):p(this,function(C){var _;if(A&&C===void 0)return _=o.get(A,d),_!==void 0||(_=h(A,d),_!==void 0)?_:void 0;this.each(function(){o.set(this,d,C)})},null,g,arguments.length>1,null,!0)},removeData:function(d){return this.each(function(){o.remove(this,d)})}}),r}.apply(b,f),i!==void 0&&(T.exports=i)},7172:(T,b,s)=>{var f,i;f=[s(8934),s(1133),s(8663),s(2238)],i=function(r,p,c,l){"use strict";function o(){this.expando=r.expando+o.uid++}return o.uid=1,o.prototype={cache:function(u){var m=u[this.expando];return m||(m={},l(u)&&(u.nodeType?u[this.expando]=m:Object.defineProperty(u,this.expando,{value:m,configurable:!0}))),m},set:function(u,m,n){var h,d=this.cache(u);if(typeof m=="string")d[p(m)]=n;else for(h in m)d[p(h)]=m[h];return d},get:function(u,m){return m===void 0?this.cache(u):u[this.expando]&&u[this.expando][p(m)]},access:function(u,m,n){return m===void 0||m&&typeof m=="string"&&n===void 0?this.get(u,m):(this.set(u,m,n),n!==void 0?n:m)},remove:function(u,m){var n,h=u[this.expando];if(h!==void 0){if(m!==void 0)for(Array.isArray(m)?m=m.map(p):(m=p(m),m=m in h?[m]:m.match(c)||[]),n=m.length;n--;)delete h[m[n]];(m===void 0||r.isEmptyObject(h))&&(u.nodeType?u[this.expando]=void 0:delete u[this.expando])}},hasData:function(u){var m=u[this.expando];return m!==void 0&&!r.isEmptyObject(m)}},o}.apply(b,f),i!==void 0&&(T.exports=i)},2238:(T,b,s)=>{var f;f=function(){"use strict";return function(i){return i.nodeType===1||i.nodeType===9||!+i.nodeType}}.call(b,s,b,T),f!==void 0&&(T.exports=f)},9081:(T,b,s)=>{var f,i;f=[s(7172)],i=function(r){"use strict";return new r}.apply(b,f),i!==void 0&&(T.exports=i)},2109:(T,b,s)=>{var f,i;f=[s(7172)],i=function(r){"use strict";return new r}.apply(b,f),i!==void 0&&(T.exports=i)},6525:(T,b,s)=>{var f,i;f=[s(8934),s(2134),s(3623),s(8924)],i=function(r,p,c){"use strict";function l(m){return m}function o(m){throw m}function u(m,n,h,d){var g;try{m&&p(g=m.promise)?g.call(m).done(n).fail(h):m&&p(g=m.then)?g.call(m,n,h):n.apply(void 0,[m].slice(d))}catch(v){h.apply(void 0,[v])}}return r.extend({Deferred:function(m){var n=[["notify","progress",r.Callbacks("memory"),r.Callbacks("memory"),2],["resolve","done",r.Callbacks("once memory"),r.Callbacks("once memory"),0,"resolved"],["reject","fail",r.Callbacks("once memory"),r.Callbacks("once memory"),1,"rejected"]],h="pending",d={state:function(){return h},always:function(){return g.done(arguments).fail(arguments),this},catch:function(v){return d.then(null,v)},pipe:function(){var v=arguments;return r.Deferred(function(y){r.each(n,function(P,A){var E=p(v[A[4]])&&v[A[4]];g[A[1]](function(){var C=E&&E.apply(this,arguments);C&&p(C.promise)?C.promise().progress(y.notify).done(y.resolve).fail(y.reject):y[A[0]+"With"](this,E?[C]:arguments)})}),v=null}).promise()},then:function(v,y,P){var A=0;function E(C,_,R,j){return function(){var D=this,k=arguments,x=function(){var G,O;if(!(C<A)){if(G=R.apply(D,k),G===_.promise())throw new TypeError("Thenable self-resolution");O=G&&(typeof G=="object"||typeof G=="function")&&G.then,p(O)?j?O.call(G,E(A,_,l,j),E(A,_,o,j)):(A++,O.call(G,E(A,_,l,j),E(A,_,o,j),E(A,_,l,_.notifyWith))):(R!==l&&(D=void 0,k=[G]),(j||_.resolveWith)(D,k))}},I=j?x:function(){try{x()}catch(G){r.Deferred.exceptionHook&&r.Deferred.exceptionHook(G,I.stackTrace),C+1>=A&&(R!==o&&(D=void 0,k=[G]),_.rejectWith(D,k))}};C?I():(r.Deferred.getStackHook&&(I.stackTrace=r.Deferred.getStackHook()),window.setTimeout(I))}}return r.Deferred(function(C){n[0][3].add(E(0,C,p(P)?P:l,C.notifyWith)),n[1][3].add(E(0,C,p(v)?v:l)),n[2][3].add(E(0,C,p(y)?y:o))}).promise()},promise:function(v){return v!=null?r.extend(v,d):d}},g={};return r.each(n,function(v,y){var P=y[2],A=y[5];d[y[1]]=P.add,A&&P.add(function(){h=A},n[3-v][2].disable,n[3-v][3].disable,n[0][2].lock,n[0][3].lock),P.add(y[3].fire),g[y[0]]=function(){return g[y[0]+"With"](this===g?void 0:this,arguments),this},g[y[0]+"With"]=P.fireWith}),d.promise(g),m&&m.call(g,g),g},when:function(m){var n=arguments.length,h=n,d=Array(h),g=c.call(arguments),v=r.Deferred(),y=function(P){return function(A){d[P]=this,g[P]=arguments.length>1?c.call(arguments):A,--n||v.resolveWith(d,g)}};if(n<=1&&(u(m,v.done(y(h)).resolve,v.reject,!n),v.state()==="pending"||p(g[h]&&g[h].then)))return v.then();for(;h--;)u(g[h],y(h),v.reject);return v.promise()}}),r}.apply(b,f),i!==void 0&&(T.exports=i)},1009:(T,b,s)=>{var f,i;f=[s(8934),s(6525)],i=function(r){"use strict";var p=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;r.Deferred.exceptionHook=function(c,l){window.console&&window.console.warn&&c&&p.test(c.name)&&window.console.warn("jQuery.Deferred exception: "+c.message,c.stack,l)}}.apply(b,f),i!==void 0&&(T.exports=i)},7722:(T,b,s)=>{var f,i;f=[s(8934),s(7060),s(1133),s(8082),s(2134),s(9031),s(3623),s(7982),s(8138)],i=function(r,p,c,l,o,u,m){"use strict";var n=/^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;r.proxy=function(h,d){var g,v,y;if(typeof d=="string"&&(g=h[d],d=h,h=g),!!o(h))return v=m.call(arguments,2),y=function(){return h.apply(d||this,v.concat(m.call(arguments)))},y.guid=h.guid=h.guid||r.guid++,y},r.holdReady=function(h){h?r.readyWait++:r.ready(!0)},r.isArray=Array.isArray,r.parseJSON=JSON.parse,r.nodeName=p,r.isFunction=o,r.isWindow=u,r.camelCase=c,r.type=l,r.now=Date.now,r.isNumeric=function(h){var d=r.type(h);return(d==="number"||d==="string")&&!isNaN(h-parseFloat(h))},r.trim=function(h){return h==null?"":(h+"").replace(n,"$1")}}.apply(b,f),i!==void 0&&(T.exports=i)},7982:(T,b,s)=>{var f,i;f=[s(8934),s(7178),s(7881)],i=function(r){"use strict";r.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(p,c){r.fn[c]=function(l){return this.on(c,l)}})}.apply(b,f),i!==void 0&&(T.exports=i)},8138:(T,b,s)=>{var f,i;f=[s(8934),s(7881),s(1045)],i=function(r){"use strict";r.fn.extend({bind:function(p,c,l){return this.on(p,null,c,l)},unbind:function(p,c){return this.off(p,null,c)},delegate:function(p,c,l,o){return this.on(c,p,l,o)},undelegate:function(p,c,l){return arguments.length===1?this.off(p,"**"):this.off(c,p||"**",l)},hover:function(p,c){return this.mouseenter(p).mouseleave(c||p)}}),r.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(p,c){r.fn[c]=function(l,o){return arguments.length>0?this.on(c,null,l,o):this.trigger(c)}})}.apply(b,f),i!==void 0&&(T.exports=i)},5126:(T,b,s)=>{var f,i;f=[s(8934),s(7163),s(9031),s(8515)],i=function(r,p,c){"use strict";return r.each({Height:"height",Width:"width"},function(l,o){r.each({padding:"inner"+l,content:o,"":"outer"+l},function(u,m){r.fn[m]=function(n,h){var d=arguments.length&&(u||typeof n!="boolean"),g=u||(n===!0||h===!0?"margin":"border");return p(this,function(v,y,P){var A;return c(v)?m.indexOf("outer")===0?v["inner"+l]:v.document.documentElement["client"+l]:v.nodeType===9?(A=v.documentElement,Math.max(v.body["scroll"+l],A["scroll"+l],v.body["offset"+l],A["offset"+l],A["client"+l])):P===void 0?r.css(v,y,g):r.style(v,y,P,g)},o,d?n:void 0,d)}})}),r}.apply(b,f),i!==void 0&&(T.exports=i)},7429:(T,b,s)=>{var f,i;f=[s(8934),s(1133),s(7792),s(2134),s(6871),s(8663),s(5057),s(5626),s(7432),s(9081),s(8516),s(8048),s(1387),s(6525),s(8482),s(2632),s(8515),s(8314)],i=function(r,p,c,l,o,u,m,n,h,d,g){"use strict";var v,y,P=/^(?:toggle|show|hide)$/,A=/queueHooks$/;function E(){y&&(c.hidden===!1&&window.requestAnimationFrame?window.requestAnimationFrame(E):window.setTimeout(E,r.fx.interval),r.fx.tick())}function C(){return window.setTimeout(function(){v=void 0}),v=Date.now()}function _(x,I){var G,O=0,U={height:x};for(I=I?1:0;O<4;O+=2-I)G=m[O],U["margin"+G]=U["padding"+G]=x;return I&&(U.opacity=U.width=x),U}function R(x,I,G){for(var O,U=(k.tweeners[I]||[]).concat(k.tweeners["*"]),B=0,z=U.length;B<z;B++)if(O=U[B].call(G,I,x))return O}function j(x,I,G){var O,U,B,z,F,K,W,re,ne="width"in I||"height"in I,pe=this,te={},fe=x.style,Pe=x.nodeType&&n(x),Le=d.get(x,"fxshow");G.queue||(z=r._queueHooks(x,"fx"),z.unqueued==null&&(z.unqueued=0,F=z.empty.fire,z.empty.fire=function(){z.unqueued||F()}),z.unqueued++,pe.always(function(){pe.always(function(){z.unqueued--,r.queue(x,"fx").length||z.empty.fire()})}));for(O in I)if(U=I[O],P.test(U)){if(delete I[O],B=B||U==="toggle",U===(Pe?"hide":"show"))if(U==="show"&&Le&&Le[O]!==void 0)Pe=!0;else continue;te[O]=Le&&Le[O]||r.style(x,O)}if(K=!r.isEmptyObject(I),!(!K&&r.isEmptyObject(te))){ne&&x.nodeType===1&&(G.overflow=[fe.overflow,fe.overflowX,fe.overflowY],W=Le&&Le.display,W==null&&(W=d.get(x,"display")),re=r.css(x,"display"),re==="none"&&(W?re=W:(g([x],!0),W=x.style.display||W,re=r.css(x,"display"),g([x]))),(re==="inline"||re==="inline-block"&&W!=null)&&r.css(x,"float")==="none"&&(K||(pe.done(function(){fe.display=W}),W==null&&(re=fe.display,W=re==="none"?"":re)),fe.display="inline-block")),G.overflow&&(fe.overflow="hidden",pe.always(function(){fe.overflow=G.overflow[0],fe.overflowX=G.overflow[1],fe.overflowY=G.overflow[2]})),K=!1;for(O in te)K||(Le?"hidden"in Le&&(Pe=Le.hidden):Le=d.access(x,"fxshow",{display:W}),B&&(Le.hidden=!Pe),Pe&&g([x],!0),pe.done(function(){Pe||g([x]),d.remove(x,"fxshow");for(O in te)r.style(x,O,te[O])})),K=R(Pe?Le[O]:0,O,pe),O in Le||(Le[O]=K.start,Pe&&(K.end=K.start,K.start=0))}}function D(x,I){var G,O,U,B,z;for(G in x)if(O=p(G),U=I[O],B=x[G],Array.isArray(B)&&(U=B[1],B=x[G]=B[0]),G!==O&&(x[O]=B,delete x[G]),z=r.cssHooks[O],z&&"expand"in z){B=z.expand(B),delete x[O];for(G in B)G in x||(x[G]=B[G],I[G]=U)}else I[O]=U}function k(x,I,G){var O,U,B=0,z=k.prefilters.length,F=r.Deferred().always(function(){delete K.elem}),K=function(){if(U)return!1;for(var ne=v||C(),pe=Math.max(0,W.startTime+W.duration-ne),te=pe/W.duration||0,fe=1-te,Pe=0,Le=W.tweens.length;Pe<Le;Pe++)W.tweens[Pe].run(fe);return F.notifyWith(x,[W,fe,pe]),fe<1&&Le?pe:(Le||F.notifyWith(x,[W,1,0]),F.resolveWith(x,[W]),!1)},W=F.promise({elem:x,props:r.extend({},I),opts:r.extend(!0,{specialEasing:{},easing:r.easing._default},G),originalProperties:I,originalOptions:G,startTime:v||C(),duration:G.duration,tweens:[],createTween:function(ne,pe){var te=r.Tween(x,W.opts,ne,pe,W.opts.specialEasing[ne]||W.opts.easing);return W.tweens.push(te),te},stop:function(ne){var pe=0,te=ne?W.tweens.length:0;if(U)return this;for(U=!0;pe<te;pe++)W.tweens[pe].run(1);return ne?(F.notifyWith(x,[W,1,0]),F.resolveWith(x,[W,ne])):F.rejectWith(x,[W,ne]),this}}),re=W.props;for(D(re,W.opts.specialEasing);B<z;B++)if(O=k.prefilters[B].call(W,x,re,W.opts),O)return l(O.stop)&&(r._queueHooks(W.elem,W.opts.queue).stop=O.stop.bind(O)),O;return r.map(re,R,W),l(W.opts.start)&&W.opts.start.call(x,W),W.progress(W.opts.progress).done(W.opts.done,W.opts.complete).fail(W.opts.fail).always(W.opts.always),r.fx.timer(r.extend(K,{elem:x,anim:W,queue:W.opts.queue})),W}return r.Animation=r.extend(k,{tweeners:{"*":[function(x,I){var G=this.createTween(x,I);return h(G.elem,x,o.exec(I),G),G}]},tweener:function(x,I){l(x)?(I=x,x=["*"]):x=x.match(u);for(var G,O=0,U=x.length;O<U;O++)G=x[O],k.tweeners[G]=k.tweeners[G]||[],k.tweeners[G].unshift(I)},prefilters:[j],prefilter:function(x,I){I?k.prefilters.unshift(x):k.prefilters.push(x)}}),r.speed=function(x,I,G){var O=x&&typeof x=="object"?r.extend({},x):{complete:G||!G&&I||l(x)&&x,duration:x,easing:G&&I||I&&!l(I)&&I};return r.fx.off?O.duration=0:typeof O.duration!="number"&&(O.duration in r.fx.speeds?O.duration=r.fx.speeds[O.duration]:O.duration=r.fx.speeds._default),(O.queue==null||O.queue===!0)&&(O.queue="fx"),O.old=O.complete,O.complete=function(){l(O.old)&&O.old.call(this),O.queue&&r.dequeue(this,O.queue)},O},r.fn.extend({fadeTo:function(x,I,G,O){return this.filter(n).css("opacity",0).show().end().animate({opacity:I},x,G,O)},animate:function(x,I,G,O){var U=r.isEmptyObject(x),B=r.speed(I,G,O),z=function(){var F=k(this,r.extend({},x),B);(U||d.get(this,"finish"))&&F.stop(!0)};return z.finish=z,U||B.queue===!1?this.each(z):this.queue(B.queue,z)},stop:function(x,I,G){var O=function(U){var B=U.stop;delete U.stop,B(G)};return typeof x!="string"&&(G=I,I=x,x=void 0),I&&this.queue(x||"fx",[]),this.each(function(){var U=!0,B=x!=null&&x+"queueHooks",z=r.timers,F=d.get(this);if(B)F[B]&&F[B].stop&&O(F[B]);else for(B in F)F[B]&&F[B].stop&&A.test(B)&&O(F[B]);for(B=z.length;B--;)z[B].elem===this&&(x==null||z[B].queue===x)&&(z[B].anim.stop(G),U=!1,z.splice(B,1));(U||!G)&&r.dequeue(this,x)})},finish:function(x){return x!==!1&&(x=x||"fx"),this.each(function(){var I,G=d.get(this),O=G[x+"queue"],U=G[x+"queueHooks"],B=r.timers,z=O?O.length:0;for(G.finish=!0,r.queue(this,x,[]),U&&U.stop&&U.stop.call(this,!0),I=B.length;I--;)B[I].elem===this&&B[I].queue===x&&(B[I].anim.stop(!0),B.splice(I,1));for(I=0;I<z;I++)O[I]&&O[I].finish&&O[I].finish.call(this);delete G.finish})}}),r.each(["toggle","show","hide"],function(x,I){var G=r.fn[I];r.fn[I]=function(O,U,B){return O==null||typeof O=="boolean"?G.apply(this,arguments):this.animate(_(I,!0),O,U,B)}}),r.each({slideDown:_("show"),slideUp:_("hide"),slideToggle:_("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(x,I){r.fn[x]=function(G,O,U){return this.animate(I,G,O,U)}}),r.timers=[],r.fx.tick=function(){var x,I=0,G=r.timers;for(v=Date.now();I<G.length;I++)x=G[I],!x()&&G[I]===x&&G.splice(I--,1);G.length||r.fx.stop(),v=void 0},r.fx.timer=function(x){r.timers.push(x),r.fx.start()},r.fx.interval=13,r.fx.start=function(){y||(y=!0,E())},r.fx.stop=function(){y=null},r.fx.speeds={slow:600,fast:200,_default:400},r}.apply(b,f),i!==void 0&&(T.exports=i)},8314:(T,b,s)=>{var f,i;f=[s(8934),s(3997),s(8515)],i=function(r,p){"use strict";function c(l,o,u,m,n){return new c.prototype.init(l,o,u,m,n)}r.Tween=c,c.prototype={constructor:c,init:function(l,o,u,m,n,h){this.elem=l,this.prop=u,this.easing=n||r.easing._default,this.options=o,this.start=this.now=this.cur(),this.end=m,this.unit=h||(r.cssNumber[u]?"":"px")},cur:function(){var l=c.propHooks[this.prop];return l&&l.get?l.get(this):c.propHooks._default.get(this)},run:function(l){var o,u=c.propHooks[this.prop];return this.options.duration?this.pos=o=r.easing[this.easing](l,this.options.duration*l,0,1,this.options.duration):this.pos=o=l,this.now=(this.end-this.start)*o+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),u&&u.set?u.set(this):c.propHooks._default.set(this),this}},c.prototype.init.prototype=c.prototype,c.propHooks={_default:{get:function(l){var o;return l.elem.nodeType!==1||l.elem[l.prop]!=null&&l.elem.style[l.prop]==null?l.elem[l.prop]:(o=r.css(l.elem,l.prop,""),!o||o==="auto"?0:o)},set:function(l){r.fx.step[l.prop]?r.fx.step[l.prop](l):l.elem.nodeType===1&&(r.cssHooks[l.prop]||l.elem.style[p(l.prop)]!=null)?r.style(l.elem,l.prop,l.now+l.unit):l.elem[l.prop]=l.now}}},c.propHooks.scrollTop=c.propHooks.scrollLeft={set:function(l){l.elem.nodeType&&l.elem.parentNode&&(l.elem[l.prop]=l.now)}},r.easing={linear:function(l){return l},swing:function(l){return .5-Math.cos(l*Math.PI)/2},_default:"swing"},r.fx=c.prototype.init,r.fx.step={}}.apply(b,f),i!==void 0&&(T.exports=i)},8393:(T,b,s)=>{var f,i;f=[s(8934),s(655),s(7429)],i=function(r){"use strict";r.expr.pseudos.animated=function(p){return r.grep(r.timers,function(c){return p===c.elem}).length}}.apply(b,f),i!==void 0&&(T.exports=i)},7881:(T,b,s)=>{var f,i;f=[s(8934),s(7792),s(7730),s(2134),s(8663),s(8104),s(3623),s(2238),s(9081),s(7060),s(8048),s(655)],i=function(r,p,c,l,o,u,m,n,h,d){"use strict";var g=/^([^.]*)(?:\.(.+)|)/;function v(){return!0}function y(){return!1}function P(_,R){return _===A()==(R==="focus")}function A(){try{return p.activeElement}catch(_){}}function E(_,R,j,D,k,x){var I,G;if(typeof R=="object"){typeof j!="string"&&(D=D||j,j=void 0);for(G in R)E(_,G,j,D,R[G],x);return _}if(D==null&&k==null?(k=j,D=j=void 0):k==null&&(typeof j=="string"?(k=D,D=void 0):(k=D,D=j,j=void 0)),k===!1)k=y;else if(!k)return _;return x===1&&(I=k,k=function(O){return r().off(O),I.apply(this,arguments)},k.guid=I.guid||(I.guid=r.guid++)),_.each(function(){r.event.add(this,R,k,D,j)})}r.event={global:{},add:function(_,R,j,D,k){var x,I,G,O,U,B,z,F,K,W,re,ne=h.get(_);if(!!n(_))for(j.handler&&(x=j,j=x.handler,k=x.selector),k&&r.find.matchesSelector(c,k),j.guid||(j.guid=r.guid++),(O=ne.events)||(O=ne.events=Object.create(null)),(I=ne.handle)||(I=ne.handle=function(pe){return typeof r!="undefined"&&r.event.triggered!==pe.type?r.event.dispatch.apply(_,arguments):void 0}),R=(R||"").match(o)||[""],U=R.length;U--;)G=g.exec(R[U])||[],K=re=G[1],W=(G[2]||"").split(".").sort(),K&&(z=r.event.special[K]||{},K=(k?z.delegateType:z.bindType)||K,z=r.event.special[K]||{},B=r.extend({type:K,origType:re,data:D,handler:j,guid:j.guid,selector:k,needsContext:k&&r.expr.match.needsContext.test(k),namespace:W.join(".")},x),(F=O[K])||(F=O[K]=[],F.delegateCount=0,(!z.setup||z.setup.call(_,D,W,I)===!1)&&_.addEventListener&&_.addEventListener(K,I)),z.add&&(z.add.call(_,B),B.handler.guid||(B.handler.guid=j.guid)),k?F.splice(F.delegateCount++,0,B):F.push(B),r.event.global[K]=!0)},remove:function(_,R,j,D,k){var x,I,G,O,U,B,z,F,K,W,re,ne=h.hasData(_)&&h.get(_);if(!(!ne||!(O=ne.events))){for(R=(R||"").match(o)||[""],U=R.length;U--;){if(G=g.exec(R[U])||[],K=re=G[1],W=(G[2]||"").split(".").sort(),!K){for(K in O)r.event.remove(_,K+R[U],j,D,!0);continue}for(z=r.event.special[K]||{},K=(D?z.delegateType:z.bindType)||K,F=O[K]||[],G=G[2]&&new RegExp("(^|\\.)"+W.join("\\.(?:.*\\.|)")+"(\\.|$)"),I=x=F.length;x--;)B=F[x],(k||re===B.origType)&&(!j||j.guid===B.guid)&&(!G||G.test(B.namespace))&&(!D||D===B.selector||D==="**"&&B.selector)&&(F.splice(x,1),B.selector&&F.delegateCount--,z.remove&&z.remove.call(_,B));I&&!F.length&&((!z.teardown||z.teardown.call(_,W,ne.handle)===!1)&&r.removeEvent(_,K,ne.handle),delete O[K])}r.isEmptyObject(O)&&h.remove(_,"handle events")}},dispatch:function(_){var R,j,D,k,x,I,G=new Array(arguments.length),O=r.event.fix(_),U=(h.get(this,"events")||Object.create(null))[O.type]||[],B=r.event.special[O.type]||{};for(G[0]=O,R=1;R<arguments.length;R++)G[R]=arguments[R];if(O.delegateTarget=this,!(B.preDispatch&&B.preDispatch.call(this,O)===!1)){for(I=r.event.handlers.call(this,O,U),R=0;(k=I[R++])&&!O.isPropagationStopped();)for(O.currentTarget=k.elem,j=0;(x=k.handlers[j++])&&!O.isImmediatePropagationStopped();)(!O.rnamespace||x.namespace===!1||O.rnamespace.test(x.namespace))&&(O.handleObj=x,O.data=x.data,D=((r.event.special[x.origType]||{}).handle||x.handler).apply(k.elem,G),D!==void 0&&(O.result=D)===!1&&(O.preventDefault(),O.stopPropagation()));return B.postDispatch&&B.postDispatch.call(this,O),O.result}},handlers:function(_,R){var j,D,k,x,I,G=[],O=R.delegateCount,U=_.target;if(O&&U.nodeType&&!(_.type==="click"&&_.button>=1)){for(;U!==this;U=U.parentNode||this)if(U.nodeType===1&&!(_.type==="click"&&U.disabled===!0)){for(x=[],I={},j=0;j<O;j++)D=R[j],k=D.selector+" ",I[k]===void 0&&(I[k]=D.needsContext?r(k,this).index(U)>-1:r.find(k,this,null,[U]).length),I[k]&&x.push(D);x.length&&G.push({elem:U,handlers:x})}}return U=this,O<R.length&&G.push({elem:U,handlers:R.slice(O)}),G},addProp:function(_,R){Object.defineProperty(r.Event.prototype,_,{enumerable:!0,configurable:!0,get:l(R)?function(){if(this.originalEvent)return R(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[_]},set:function(j){Object.defineProperty(this,_,{enumerable:!0,configurable:!0,writable:!0,value:j})}})},fix:function(_){return _[r.expando]?_:new r.Event(_)},special:{load:{noBubble:!0},click:{setup:function(_){var R=this||_;return u.test(R.type)&&R.click&&d(R,"input")&&C(R,"click",v),!1},trigger:function(_){var R=this||_;return u.test(R.type)&&R.click&&d(R,"input")&&C(R,"click"),!0},_default:function(_){var R=_.target;return u.test(R.type)&&R.click&&d(R,"input")&&h.get(R,"click")||d(R,"a")}},beforeunload:{postDispatch:function(_){_.result!==void 0&&_.originalEvent&&(_.originalEvent.returnValue=_.result)}}}};function C(_,R,j){if(!j){h.get(_,R)===void 0&&r.event.add(_,R,v);return}h.set(_,R,!1),r.event.add(_,R,{namespace:!1,handler:function(D){var k,x,I=h.get(this,R);if(D.isTrigger&1&&this[R]){if(I.length)(r.event.special[R]||{}).delegateType&&D.stopPropagation();else if(I=m.call(arguments),h.set(this,R,I),k=j(this,R),this[R](),x=h.get(this,R),I!==x||k?h.set(this,R,!1):x={},I!==x)return D.stopImmediatePropagation(),D.preventDefault(),x&&x.value}else I.length&&(h.set(this,R,{value:r.event.trigger(r.extend(I[0],r.Event.prototype),I.slice(1),this)}),D.stopImmediatePropagation())}})}return r.removeEvent=function(_,R,j){_.removeEventListener&&_.removeEventListener(R,j)},r.Event=function(_,R){if(!(this instanceof r.Event))return new r.Event(_,R);_&&_.type?(this.originalEvent=_,this.type=_.type,this.isDefaultPrevented=_.defaultPrevented||_.defaultPrevented===void 0&&_.returnValue===!1?v:y,this.target=_.target&&_.target.nodeType===3?_.target.parentNode:_.target,this.currentTarget=_.currentTarget,this.relatedTarget=_.relatedTarget):this.type=_,R&&r.extend(this,R),this.timeStamp=_&&_.timeStamp||Date.now(),this[r.expando]=!0},r.Event.prototype={constructor:r.Event,isDefaultPrevented:y,isPropagationStopped:y,isImmediatePropagationStopped:y,isSimulated:!1,preventDefault:function(){var _=this.originalEvent;this.isDefaultPrevented=v,_&&!this.isSimulated&&_.preventDefault()},stopPropagation:function(){var _=this.originalEvent;this.isPropagationStopped=v,_&&!this.isSimulated&&_.stopPropagation()},stopImmediatePropagation:function(){var _=this.originalEvent;this.isImmediatePropagationStopped=v,_&&!this.isSimulated&&_.stopImmediatePropagation(),this.stopPropagation()}},r.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:!0},r.event.addProp),r.each({focus:"focusin",blur:"focusout"},function(_,R){r.event.special[_]={setup:function(){return C(this,_,P),!1},trigger:function(){return C(this,_),!0},_default:function(j){return h.get(j.target,_)},delegateType:R}}),r.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(_,R){r.event.special[_]={delegateType:R,bindType:R,handle:function(j){var D,k=this,x=j.relatedTarget,I=j.handleObj;return(!x||x!==k&&!r.contains(k,x))&&(j.type=I.origType,D=I.handler.apply(this,arguments),j.type=R),D}}}),r.fn.extend({on:function(_,R,j,D){return E(this,_,R,j,D)},one:function(_,R,j,D){return E(this,_,R,j,D,1)},off:function(_,R,j){var D,k;if(_&&_.preventDefault&&_.handleObj)return D=_.handleObj,r(_.delegateTarget).off(D.namespace?D.origType+"."+D.namespace:D.origType,D.selector,D.handler),this;if(typeof _=="object"){for(k in _)this.off(k,R,_[k]);return this}return(R===!1||typeof R=="function")&&(j=R,R=void 0),j===!1&&(j=y),this.each(function(){r.event.remove(this,_,j,R)})}}),r}.apply(b,f),i!==void 0&&(T.exports=i)},6611:(T,b,s)=>{var f,i;f=[s(8934),s(9081),s(8266),s(7881),s(1045)],i=function(r,p,c){"use strict";return c.focusin||r.each({focus:"focusin",blur:"focusout"},function(l,o){var u=function(m){r.event.simulate(o,m.target,r.event.fix(m))};r.event.special[o]={setup:function(){var m=this.ownerDocument||this.document||this,n=p.access(m,o);n||m.addEventListener(l,u,!0),p.access(m,o,(n||0)+1)},teardown:function(){var m=this.ownerDocument||this.document||this,n=p.access(m,o)-1;n?p.access(m,o,n):(m.removeEventListener(l,u,!0),p.remove(m,o))}}}),r}.apply(b,f),i!==void 0&&(T.exports=i)},8266:(T,b,s)=>{var f,i;f=[s(9523)],i=function(r){"use strict";return r.focusin="onfocusin"in window,r}.apply(b,f),i!==void 0&&(T.exports=i)},1045:(T,b,s)=>{var f,i;f=[s(8934),s(7792),s(9081),s(2238),s(9694),s(2134),s(9031),s(7881)],i=function(r,p,c,l,o,u,m){"use strict";var n=/^(?:focusinfocus|focusoutblur)$/,h=function(d){d.stopPropagation()};return r.extend(r.event,{trigger:function(d,g,v,y){var P,A,E,C,_,R,j,D,k=[v||p],x=o.call(d,"type")?d.type:d,I=o.call(d,"namespace")?d.namespace.split("."):[];if(A=D=E=v=v||p,!(v.nodeType===3||v.nodeType===8)&&!n.test(x+r.event.triggered)&&(x.indexOf(".")>-1&&(I=x.split("."),x=I.shift(),I.sort()),_=x.indexOf(":")<0&&"on"+x,d=d[r.expando]?d:new r.Event(x,typeof d=="object"&&d),d.isTrigger=y?2:3,d.namespace=I.join("."),d.rnamespace=d.namespace?new RegExp("(^|\\.)"+I.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,d.result=void 0,d.target||(d.target=v),g=g==null?[d]:r.makeArray(g,[d]),j=r.event.special[x]||{},!(!y&&j.trigger&&j.trigger.apply(v,g)===!1))){if(!y&&!j.noBubble&&!m(v)){for(C=j.delegateType||x,n.test(C+x)||(A=A.parentNode);A;A=A.parentNode)k.push(A),E=A;E===(v.ownerDocument||p)&&k.push(E.defaultView||E.parentWindow||window)}for(P=0;(A=k[P++])&&!d.isPropagationStopped();)D=A,d.type=P>1?C:j.bindType||x,R=(c.get(A,"events")||Object.create(null))[d.type]&&c.get(A,"handle"),R&&R.apply(A,g),R=_&&A[_],R&&R.apply&&l(A)&&(d.result=R.apply(A,g),d.result===!1&&d.preventDefault());return d.type=x,!y&&!d.isDefaultPrevented()&&(!j._default||j._default.apply(k.pop(),g)===!1)&&l(v)&&_&&u(v[x])&&!m(v)&&(E=v[_],E&&(v[_]=null),r.event.triggered=x,d.isPropagationStopped()&&D.addEventListener(x,h),v[x](),d.isPropagationStopped()&&D.removeEventListener(x,h),r.event.triggered=void 0,E&&(v[_]=E)),d.result}},simulate:function(d,g,v){var y=r.extend(new r.Event,v,{type:d,isSimulated:!0});r.event.trigger(y,null,g)}}),r.fn.extend({trigger:function(d,g){return this.each(function(){r.event.trigger(d,g,this)})},triggerHandler:function(d,g){var v=this[0];if(v)return r.event.trigger(d,g,v,!0)}}),r}.apply(b,f),i!==void 0&&(T.exports=i)},692:(T,b,s)=>{var f,i,f,i;f=[s(8934)],i=function(r){"use strict";f=[],i=function(){return r}.apply(b,f),i!==void 0&&(T.exports=i)}.apply(b,f),i!==void 0&&(T.exports=i)},4278:(T,b,s)=>{var f,i;f=[s(8934)],i=function(r){"use strict";var p=window.jQuery,c=window.$;r.noConflict=function(l){return window.$===r&&(window.$=c),l&&window.jQuery===r&&(window.jQuery=p),r},typeof noGlobal=="undefined"&&(window.jQuery=window.$=r)}.apply(b,f),i!==void 0&&(T.exports=i)},4002:(T,b,s)=>{var f,i;f=[s(8934),s(655),s(8482),s(8924),s(6525),s(1009),s(5703),s(1786),s(1387),s(6572),s(8468),s(7881),s(6611),s(2632),s(8123),s(5594),s(8515),s(2365),s(5385),s(7178),s(8853),s(5488),s(7533),s(4581),s(461),s(2889),s(7429),s(8393),s(5356),s(5126),s(7722),s(692),s(4278)],i=function(r){"use strict";return r}.apply(b,f),i!==void 0&&(T.exports=i)},2632:(T,b,s)=>{var f,i;f=[s(8934),s(70),s(3932),s(2134),s(1780),s(8104),s(7163),s(9422),s(8950),s(5219),s(2455),s(7162),s(3360),s(8771),s(9081),s(2109),s(2238),s(1224),s(7060),s(8048),s(8482),s(655),s(7881)],i=function(r,p,c,l,o,u,m,n,h,d,g,v,y,P,A,E,C,_,R){"use strict";var j=/<script|<style|<link/i,D=/checked\s*(?:[^=]|=\s*.checked.)/i,k=/^\s*<!\[CDATA\[|\]\]>\s*$/g;function x(F,K){return R(F,"table")&&R(K.nodeType!==11?K:K.firstChild,"tr")&&r(F).children("tbody")[0]||F}function I(F){return F.type=(F.getAttribute("type")!==null)+"/"+F.type,F}function G(F){return(F.type||"").slice(0,5)==="true/"?F.type=F.type.slice(5):F.removeAttribute("type"),F}function O(F,K){var W,re,ne,pe,te,fe,Pe;if(K.nodeType===1){if(A.hasData(F)&&(pe=A.get(F),Pe=pe.events,Pe)){A.remove(K,"handle events");for(ne in Pe)for(W=0,re=Pe[ne].length;W<re;W++)r.event.add(K,ne,Pe[ne][W])}E.hasData(F)&&(te=E.access(F),fe=r.extend({},te),E.set(K,fe))}}function U(F,K){var W=K.nodeName.toLowerCase();W==="input"&&u.test(F.type)?K.checked=F.checked:(W==="input"||W==="textarea")&&(K.defaultValue=F.defaultValue)}function B(F,K,W,re){K=c(K);var ne,pe,te,fe,Pe,Le,nt=0,mt=F.length,dt=mt-1,ht=K[0],Rt=l(ht);if(Rt||mt>1&&typeof ht=="string"&&!P.checkClone&&D.test(ht))return F.each(function(Se){var wt=F.eq(Se);Rt&&(K[0]=ht.call(this,Se,wt.html())),B(wt,K,W,re)});if(mt&&(ne=y(K,F[0].ownerDocument,!1,F,re),pe=ne.firstChild,ne.childNodes.length===1&&(ne=pe),pe||re)){for(te=r.map(g(ne,"script"),I),fe=te.length;nt<mt;nt++)Pe=ne,nt!==dt&&(Pe=r.clone(Pe,!0,!0),fe&&r.merge(te,g(Pe,"script"))),W.call(F[nt],Pe,nt);if(fe)for(Le=te[te.length-1].ownerDocument,r.map(te,G),nt=0;nt<fe;nt++)Pe=te[nt],h.test(Pe.type||"")&&!A.access(Pe,"globalEval")&&r.contains(Le,Pe)&&(Pe.src&&(Pe.type||"").toLowerCase()!=="module"?r._evalUrl&&!Pe.noModule&&r._evalUrl(Pe.src,{nonce:Pe.nonce||Pe.getAttribute("nonce")},Le):_(Pe.textContent.replace(k,""),Pe,Le))}return F}function z(F,K,W){for(var re,ne=K?r.filter(K,F):F,pe=0;(re=ne[pe])!=null;pe++)!W&&re.nodeType===1&&r.cleanData(g(re)),re.parentNode&&(W&&p(re)&&v(g(re,"script")),re.parentNode.removeChild(re));return F}return r.extend({htmlPrefilter:function(F){return F},clone:function(F,K,W){var re,ne,pe,te,fe=F.cloneNode(!0),Pe=p(F);if(!P.noCloneChecked&&(F.nodeType===1||F.nodeType===11)&&!r.isXMLDoc(F))for(te=g(fe),pe=g(F),re=0,ne=pe.length;re<ne;re++)U(pe[re],te[re]);if(K)if(W)for(pe=pe||g(F),te=te||g(fe),re=0,ne=pe.length;re<ne;re++)O(pe[re],te[re]);else O(F,fe);return te=g(fe,"script"),te.length>0&&v(te,!Pe&&g(F,"script")),fe},cleanData:function(F){for(var K,W,re,ne=r.event.special,pe=0;(W=F[pe])!==void 0;pe++)if(C(W)){if(K=W[A.expando]){if(K.events)for(re in K.events)ne[re]?r.event.remove(W,re):r.removeEvent(W,re,K.handle);W[A.expando]=void 0}W[E.expando]&&(W[E.expando]=void 0)}}}),r.fn.extend({detach:function(F){return z(this,F,!0)},remove:function(F){return z(this,F)},text:function(F){return m(this,function(K){return K===void 0?r.text(this):this.empty().each(function(){(this.nodeType===1||this.nodeType===11||this.nodeType===9)&&(this.textContent=K)})},null,F,arguments.length)},append:function(){return B(this,arguments,function(F){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var K=x(this,F);K.appendChild(F)}})},prepend:function(){return B(this,arguments,function(F){if(this.nodeType===1||this.nodeType===11||this.nodeType===9){var K=x(this,F);K.insertBefore(F,K.firstChild)}})},before:function(){return B(this,arguments,function(F){this.parentNode&&this.parentNode.insertBefore(F,this)})},after:function(){return B(this,arguments,function(F){this.parentNode&&this.parentNode.insertBefore(F,this.nextSibling)})},empty:function(){for(var F,K=0;(F=this[K])!=null;K++)F.nodeType===1&&(r.cleanData(g(F,!1)),F.textContent="");return this},clone:function(F,K){return F=F==null?!1:F,K=K==null?F:K,this.map(function(){return r.clone(this,F,K)})},html:function(F){return m(this,function(K){var W=this[0]||{},re=0,ne=this.length;if(K===void 0&&W.nodeType===1)return W.innerHTML;if(typeof K=="string"&&!j.test(K)&&!d[(n.exec(K)||["",""])[1].toLowerCase()]){K=r.htmlPrefilter(K);try{for(;re<ne;re++)W=this[re]||{},W.nodeType===1&&(r.cleanData(g(W,!1)),W.innerHTML=K);W=0}catch(pe){}}W&&this.empty().append(K)},null,F,arguments.length)},replaceWith:function(){var F=[];return B(this,arguments,function(K){var W=this.parentNode;r.inArray(this,F)<0&&(r.cleanData(g(this)),W&&W.replaceChild(K,this))},F)}}),r.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(F,K){r.fn[F]=function(W){for(var re,ne=[],pe=r(W),te=pe.length-1,fe=0;fe<=te;fe++)re=fe===te?this:this.clone(!0),r(pe[fe])[K](re),o.apply(ne,re.get());return this.pushStack(ne)}}),r}.apply(b,f),i!==void 0&&(T.exports=i)},8123:(T,b,s)=>{var f,i;f=[s(7178)],i=function(r){"use strict";return r._evalUrl=function(p,c,l){return r.ajax({url:p,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(o){r.globalEval(o,c,l)}})},r._evalUrl}.apply(b,f),i!==void 0&&(T.exports=i)},3360:(T,b,s)=>{var f,i;f=[s(8934),s(8082),s(70),s(9422),s(8950),s(5219),s(2455),s(7162)],i=function(r,p,c,l,o,u,m,n){"use strict";var h=/<|&#?\w+;/;function d(g,v,y,P,A){for(var E,C,_,R,j,D,k=v.createDocumentFragment(),x=[],I=0,G=g.length;I<G;I++)if(E=g[I],E||E===0)if(p(E)==="object")r.merge(x,E.nodeType?[E]:E);else if(!h.test(E))x.push(v.createTextNode(E));else{for(C=C||k.appendChild(v.createElement("div")),_=(l.exec(E)||["",""])[1].toLowerCase(),R=u[_]||u._default,C.innerHTML=R[1]+r.htmlPrefilter(E)+R[2],D=R[0];D--;)C=C.lastChild;r.merge(x,C.childNodes),C=k.firstChild,C.textContent=""}for(k.textContent="",I=0;E=x[I++];){if(P&&r.inArray(E,P)>-1){A&&A.push(E);continue}if(j=c(E),C=m(k.appendChild(E),"script"),j&&n(C),y)for(D=0;E=C[D++];)o.test(E.type||"")&&y.push(E)}return k}return d}.apply(b,f),i!==void 0&&(T.exports=i)},2455:(T,b,s)=>{var f,i;f=[s(8934),s(7060)],i=function(r,p){"use strict";function c(l,o){var u;return typeof l.getElementsByTagName!="undefined"?u=l.getElementsByTagName(o||"*"):typeof l.querySelectorAll!="undefined"?u=l.querySelectorAll(o||"*"):u=[],o===void 0||o&&p(l,o)?r.merge([l],u):u}return c}.apply(b,f),i!==void 0&&(T.exports=i)},7162:(T,b,s)=>{var f,i;f=[s(9081)],i=function(r){"use strict";function p(c,l){for(var o=0,u=c.length;o<u;o++)r.set(c[o],"globalEval",!l||r.get(l[o],"globalEval"))}return p}.apply(b,f),i!==void 0&&(T.exports=i)},8771:(T,b,s)=>{var f,i;f=[s(7792),s(9523)],i=function(r,p){"use strict";return function(){var c=r.createDocumentFragment(),l=c.appendChild(r.createElement("div")),o=r.createElement("input");o.setAttribute("type","radio"),o.setAttribute("checked","checked"),o.setAttribute("name","t"),l.appendChild(o),p.checkClone=l.cloneNode(!0).cloneNode(!0).lastChild.checked,l.innerHTML="<textarea>x</textarea>",p.noCloneChecked=!!l.cloneNode(!0).lastChild.defaultValue,l.innerHTML="<option></option>",p.option=!!l.lastChild}(),p}.apply(b,f),i!==void 0&&(T.exports=i)},8950:(T,b,s)=>{var f;f=function(){"use strict";return/^$|^module$|\/(?:java|ecma)script/i}.call(b,s,b,T),f!==void 0&&(T.exports=f)},9422:(T,b,s)=>{var f;f=function(){"use strict";return/<([a-z][^\/\0>\x20\t\r\n\f]*)/i}.call(b,s,b,T),f!==void 0&&(T.exports=f)},5219:(T,b,s)=>{var f,i;f=[s(8771)],i=function(r){"use strict";var p={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};return p.tbody=p.tfoot=p.colgroup=p.caption=p.thead,p.th=p.td,r.option||(p.optgroup=p.option=[1,"<select multiple='multiple'>","</select>"]),p}.apply(b,f),i!==void 0&&(T.exports=i)},5356:(T,b,s)=>{var f,i;f=[s(8934),s(7163),s(7730),s(2134),s(618),s(610),s(3781),s(4405),s(9031),s(8048),s(8515),s(655)],i=function(r,p,c,l,o,u,m,n,h){"use strict";return r.offset={setOffset:function(d,g,v){var y,P,A,E,C,_,R,j=r.css(d,"position"),D=r(d),k={};j==="static"&&(d.style.position="relative"),C=D.offset(),A=r.css(d,"top"),_=r.css(d,"left"),R=(j==="absolute"||j==="fixed")&&(A+_).indexOf("auto")>-1,R?(y=D.position(),E=y.top,P=y.left):(E=parseFloat(A)||0,P=parseFloat(_)||0),l(g)&&(g=g.call(d,v,r.extend({},C))),g.top!=null&&(k.top=g.top-C.top+E),g.left!=null&&(k.left=g.left-C.left+P),"using"in g?g.using.call(d,k):D.css(k)}},r.fn.extend({offset:function(d){if(arguments.length)return d===void 0?this:this.each(function(P){r.offset.setOffset(this,d,P)});var g,v,y=this[0];if(!!y)return y.getClientRects().length?(g=y.getBoundingClientRect(),v=y.ownerDocument.defaultView,{top:g.top+v.pageYOffset,left:g.left+v.pageXOffset}):{top:0,left:0}},position:function(){if(!!this[0]){var d,g,v,y=this[0],P={top:0,left:0};if(r.css(y,"position")==="fixed")g=y.getBoundingClientRect();else{for(g=this.offset(),v=y.ownerDocument,d=y.offsetParent||v.documentElement;d&&(d===v.body||d===v.documentElement)&&r.css(d,"position")==="static";)d=d.parentNode;d&&d!==y&&d.nodeType===1&&(P=r(d).offset(),P.top+=r.css(d,"borderTopWidth",!0),P.left+=r.css(d,"borderLeftWidth",!0))}return{top:g.top-P.top-r.css(y,"marginTop",!0),left:g.left-P.left-r.css(y,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var d=this.offsetParent;d&&r.css(d,"position")==="static";)d=d.offsetParent;return d||c})}}),r.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(d,g){var v=g==="pageYOffset";r.fn[d]=function(y){return p(this,function(P,A,E){var C;if(h(P)?C=P:P.nodeType===9&&(C=P.defaultView),E===void 0)return C?C[g]:P[A];C?C.scrollTo(v?C.pageXOffset:E,v?E:C.pageYOffset):P[A]=E},d,y,arguments.length)}}),r.each(["top","left"],function(d,g){r.cssHooks[g]=m(n.pixelPosition,function(v,y){if(y)return y=u(v,g),o.test(y)?r(v).position()[g]+"px":y})}),r}.apply(b,f),i!==void 0&&(T.exports=i)},1387:(T,b,s)=>{var f,i;f=[s(8934),s(9081),s(6525),s(8924)],i=function(r,p){"use strict";return r.extend({queue:function(c,l,o){var u;if(c)return l=(l||"fx")+"queue",u=p.get(c,l),o&&(!u||Array.isArray(o)?u=p.access(c,l,r.makeArray(o)):u.push(o)),u||[]},dequeue:function(c,l){l=l||"fx";var o=r.queue(c,l),u=o.length,m=o.shift(),n=r._queueHooks(c,l),h=function(){r.dequeue(c,l)};m==="inprogress"&&(m=o.shift(),u--),m&&(l==="fx"&&o.unshift("inprogress"),delete n.stop,m.call(c,h,n)),!u&&n&&n.empty.fire()},_queueHooks:function(c,l){var o=l+"queueHooks";return p.get(c,o)||p.access(c,o,{empty:r.Callbacks("once memory").add(function(){p.remove(c,[l+"queue",o])})})}}),r.fn.extend({queue:function(c,l){var o=2;return typeof c!="string"&&(l=c,c="fx",o--),arguments.length<o?r.queue(this[0],c):l===void 0?this:this.each(function(){var u=r.queue(this,c,l);r._queueHooks(this,c),c==="fx"&&u[0]!=="inprogress"&&r.dequeue(this,c)})},dequeue:function(c){return this.each(function(){r.dequeue(this,c)})},clearQueue:function(c){return this.queue(c||"fx",[])},promise:function(c,l){var o,u=1,m=r.Deferred(),n=this,h=this.length,d=function(){--u||m.resolveWith(n,[n])};for(typeof c!="string"&&(l=c,c=void 0),c=c||"fx";h--;)o=p.get(n[h],c+"queueHooks"),o&&o.empty&&(u++,o.empty.add(d));return d(),m.promise(l)}}),r}.apply(b,f),i!==void 0&&(T.exports=i)},6572:(T,b,s)=>{var f,i;f=[s(8934),s(1387),s(7429)],i=function(r){"use strict";return r.fn.delay=function(p,c){return p=r.fx&&r.fx.speeds[p]||p,c=c||"fx",this.queue(c,function(l,o){var u=window.setTimeout(l,p);o.stop=function(){window.clearTimeout(u)}})},r.fn.delay}.apply(b,f),i!==void 0&&(T.exports=i)},4338:(T,b,s)=>{var f,i;f=[s(8934),s(9414)],i=function(r,p){"use strict";r.find=p,r.expr=p.selectors,r.expr[":"]=r.expr.pseudos,r.uniqueSort=r.unique=p.uniqueSort,r.text=p.getText,r.isXMLDoc=p.isXML,r.contains=p.contains,r.escapeSelector=p.escape}.apply(b,f),i!==void 0&&(T.exports=i)},655:(T,b,s)=>{var f,i;f=[s(4338)],i=function(){"use strict"}.apply(b,f),i!==void 0&&(T.exports=i)},5385:(T,b,s)=>{var f,i;f=[s(8934),s(8082),s(8104),s(2134),s(8048),s(8482),s(4043)],i=function(r,p,c,l){"use strict";var o=/\[\]$/,u=/\r?\n/g,m=/^(?:submit|button|image|reset|file)$/i,n=/^(?:input|select|textarea|keygen)/i;function h(d,g,v,y){var P;if(Array.isArray(g))r.each(g,function(A,E){v||o.test(d)?y(d,E):h(d+"["+(typeof E=="object"&&E!=null?A:"")+"]",E,v,y)});else if(!v&&p(g)==="object")for(P in g)h(d+"["+P+"]",g[P],v,y);else y(d,g)}return r.param=function(d,g){var v,y=[],P=function(A,E){var C=l(E)?E():E;y[y.length]=encodeURIComponent(A)+"="+encodeURIComponent(C==null?"":C)};if(d==null)return"";if(Array.isArray(d)||d.jquery&&!r.isPlainObject(d))r.each(d,function(){P(this.name,this.value)});else for(v in d)h(v,d[v],g,P);return y.join("&")},r.fn.extend({serialize:function(){return r.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var d=r.prop(this,"elements");return d?r.makeArray(d):this}).filter(function(){var d=this.type;return this.name&&!r(this).is(":disabled")&&n.test(this.nodeName)&&!m.test(d)&&(this.checked||!c.test(d))}).map(function(d,g){var v=r(this).val();return v==null?null:Array.isArray(v)?r.map(v,function(y){return{name:g.name,value:y.replace(u,`\r
`)}}):{name:g.name,value:v.replace(u,`\r
`)}}).get()}}),r}.apply(b,f),i!==void 0&&(T.exports=i)},8482:(T,b,s)=>{var f,i;f=[s(8934),s(8045),s(5431),s(1721),s(2495),s(8020),s(7060),s(8048),s(1764),s(655)],i=function(r,p,c,l,o,u,m){"use strict";var n=/^(?:parents|prev(?:Until|All))/,h={children:!0,contents:!0,next:!0,prev:!0};r.fn.extend({has:function(g){var v=r(g,this),y=v.length;return this.filter(function(){for(var P=0;P<y;P++)if(r.contains(this,v[P]))return!0})},closest:function(g,v){var y,P=0,A=this.length,E=[],C=typeof g!="string"&&r(g);if(!u.test(g)){for(;P<A;P++)for(y=this[P];y&&y!==v;y=y.parentNode)if(y.nodeType<11&&(C?C.index(y)>-1:y.nodeType===1&&r.find.matchesSelector(y,g))){E.push(y);break}}return this.pushStack(E.length>1?r.uniqueSort(E):E)},index:function(g){return g?typeof g=="string"?c.call(r(g),this[0]):c.call(this,g.jquery?g[0]:g):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(g,v){return this.pushStack(r.uniqueSort(r.merge(this.get(),r(g,v))))},addBack:function(g){return this.add(g==null?this.prevObject:this.prevObject.filter(g))}});function d(g,v){for(;(g=g[v])&&g.nodeType!==1;);return g}return r.each({parent:function(g){var v=g.parentNode;return v&&v.nodeType!==11?v:null},parents:function(g){return l(g,"parentNode")},parentsUntil:function(g,v,y){return l(g,"parentNode",y)},next:function(g){return d(g,"nextSibling")},prev:function(g){return d(g,"previousSibling")},nextAll:function(g){return l(g,"nextSibling")},prevAll:function(g){return l(g,"previousSibling")},nextUntil:function(g,v,y){return l(g,"nextSibling",y)},prevUntil:function(g,v,y){return l(g,"previousSibling",y)},siblings:function(g){return o((g.parentNode||{}).firstChild,g)},children:function(g){return o(g.firstChild)},contents:function(g){return g.contentDocument!=null&&p(g.contentDocument)?g.contentDocument:(m(g,"template")&&(g=g.content||g),r.merge([],g.childNodes))}},function(g,v){r.fn[g]=function(y,P){var A=r.map(this,v,y);return g.slice(-5)!=="Until"&&(P=y),P&&typeof P=="string"&&(A=r.filter(P,A)),this.length>1&&(h[g]||r.uniqueSort(A),n.test(g)&&A.reverse()),this.pushStack(A)}}),r}.apply(b,f),i!==void 0&&(T.exports=i)},1764:(T,b,s)=>{var f,i;f=[s(8934),s(5431),s(2134),s(8020),s(655)],i=function(r,p,c,l){"use strict";function o(u,m,n){return c(m)?r.grep(u,function(h,d){return!!m.call(h,d,h)!==n}):m.nodeType?r.grep(u,function(h){return h===m!==n}):typeof m!="string"?r.grep(u,function(h){return p.call(m,h)>-1!==n}):r.filter(m,u,n)}r.filter=function(u,m,n){var h=m[0];return n&&(u=":not("+u+")"),m.length===1&&h.nodeType===1?r.find.matchesSelector(h,u)?[h]:[]:r.find.matches(u,r.grep(m,function(d){return d.nodeType===1}))},r.fn.extend({find:function(u){var m,n,h=this.length,d=this;if(typeof u!="string")return this.pushStack(r(u).filter(function(){for(m=0;m<h;m++)if(r.contains(d[m],this))return!0}));for(n=this.pushStack([]),m=0;m<h;m++)r.find(u,d[m],n);return h>1?r.uniqueSort(n):n},filter:function(u){return this.pushStack(o(this,u||[],!1))},not:function(u){return this.pushStack(o(this,u||[],!0))},is:function(u){return!!o(this,typeof u=="string"&&l.test(u)?r(u):u||[],!1).length}})}.apply(b,f),i!==void 0&&(T.exports=i)},1721:(T,b,s)=>{var f,i;f=[s(8934)],i=function(r){"use strict";return function(p,c,l){for(var o=[],u=l!==void 0;(p=p[c])&&p.nodeType!==9;)if(p.nodeType===1){if(u&&r(p).is(l))break;o.push(p)}return o}}.apply(b,f),i!==void 0&&(T.exports=i)},8020:(T,b,s)=>{var f,i;f=[s(8934),s(655)],i=function(r){"use strict";return r.expr.match.needsContext}.apply(b,f),i!==void 0&&(T.exports=i)},2495:(T,b,s)=>{var f;f=function(){"use strict";return function(i,r){for(var p=[];i;i=i.nextSibling)i.nodeType===1&&i!==r&&p.push(i);return p}}.call(b,s,b,T),f!==void 0&&(T.exports=f)},3:(T,b,s)=>{var f,i;f=[s(4194)],i=function(r){"use strict";return r.call(Object)}.apply(b,f),i!==void 0&&(T.exports=i)},3727:(T,b,s)=>{var f;f=function(){"use strict";return[]}.call(b,s,b,T),f!==void 0&&(T.exports=f)},5949:(T,b,s)=>{var f;f=function(){"use strict";return{}}.call(b,s,b,T),f!==void 0&&(T.exports=f)},7792:(T,b,s)=>{var f;f=function(){"use strict";return window.document}.call(b,s,b,T),f!==void 0&&(T.exports=f)},7730:(T,b,s)=>{var f,i;f=[s(7792)],i=function(r){"use strict";return r.documentElement}.apply(b,f),i!==void 0&&(T.exports=i)},3932:(T,b,s)=>{var f,i;f=[s(3727)],i=function(r){"use strict";return r.flat?function(p){return r.flat.call(p)}:function(p){return r.concat.apply([],p)}}.apply(b,f),i!==void 0&&(T.exports=i)},4194:(T,b,s)=>{var f,i;f=[s(9694)],i=function(r){"use strict";return r.toString}.apply(b,f),i!==void 0&&(T.exports=i)},8045:(T,b,s)=>{var f;f=function(){"use strict";return Object.getPrototypeOf}.call(b,s,b,T),f!==void 0&&(T.exports=f)},9694:(T,b,s)=>{var f,i;f=[s(5949)],i=function(r){"use strict";return r.hasOwnProperty}.apply(b,f),i!==void 0&&(T.exports=i)},5431:(T,b,s)=>{var f,i;f=[s(3727)],i=function(r){"use strict";return r.indexOf}.apply(b,f),i!==void 0&&(T.exports=i)},2134:(T,b,s)=>{var f;f=function(){"use strict";return function(r){return typeof r=="function"&&typeof r.nodeType!="number"&&typeof r.item!="function"}}.call(b,s,b,T),f!==void 0&&(T.exports=f)},9031:(T,b,s)=>{var f;f=function(){"use strict";return function(r){return r!=null&&r===r.window}}.call(b,s,b,T),f!==void 0&&(T.exports=f)},8308:(T,b,s)=>{var f;f=function(){"use strict";return/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source}.call(b,s,b,T),f!==void 0&&(T.exports=f)},1780:(T,b,s)=>{var f,i;f=[s(3727)],i=function(r){"use strict";return r.push}.apply(b,f),i!==void 0&&(T.exports=i)},8104:(T,b,s)=>{var f;f=function(){"use strict";return/^(?:checkbox|radio)$/i}.call(b,s,b,T),f!==void 0&&(T.exports=f)},6871:(T,b,s)=>{var f,i;f=[s(8308)],i=function(r){"use strict";return new RegExp("^(?:([+-])=|)("+r+")([a-z%]*)$","i")}.apply(b,f),i!==void 0&&(T.exports=i)},8663:(T,b,s)=>{var f;f=function(){"use strict";return/[^\x20\t\r\n\f]+/g}.call(b,s,b,T),f!==void 0&&(T.exports=f)},9508:(T,b,s)=>{var f,i;f=[s(2992)],i=function(r){"use strict";return new RegExp("^"+r+"+|((?:^|[^\\\\])(?:\\\\.)*)"+r+"+$","g")}.apply(b,f),i!==void 0&&(T.exports=i)},3623:(T,b,s)=>{var f,i;f=[s(3727)],i=function(r){"use strict";return r.slice}.apply(b,f),i!==void 0&&(T.exports=i)},9523:(T,b,s)=>{var f;f=function(){"use strict";return{}}.call(b,s,b,T),f!==void 0&&(T.exports=f)},7763:(T,b,s)=>{var f,i;f=[s(5949)],i=function(r){"use strict";return r.toString}.apply(b,f),i!==void 0&&(T.exports=i)},2992:(T,b,s)=>{var f;f=function(){"use strict";return"[\\x20\\t\\r\\n\\f]"}.call(b,s,b,T),f!==void 0&&(T.exports=f)},5594:(T,b,s)=>{var f,i;f=[s(8934),s(2134),s(8048),s(2632),s(8482)],i=function(r,p){"use strict";return r.fn.extend({wrapAll:function(c){var l;return this[0]&&(p(c)&&(c=c.call(this[0])),l=r(c,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&l.insertBefore(this[0]),l.map(function(){for(var o=this;o.firstElementChild;)o=o.firstElementChild;return o}).append(this)),this},wrapInner:function(c){return p(c)?this.each(function(l){r(this).wrapInner(c.call(this,l))}):this.each(function(){var l=r(this),o=l.contents();o.length?o.wrapAll(c):l.append(c)})},wrap:function(c){var l=p(c);return this.each(function(o){r(this).wrapAll(l?c.call(this,o):c)})},unwrap:function(c){return this.parent(c).not("body").each(function(){r(this).replaceWith(this.childNodes)}),this}}),r}.apply(b,f),i!==void 0&&(T.exports=i)},6486:function(T,b,s){T=s.nmd(T);var f;/**
* @license
* Lodash <https://lodash.com/>
* Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
* Released under MIT license <https://lodash.com/license>
* Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
* Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
*/(function(){var i,r="4.17.21",p=200,c="Unsupported core-js use. Try https://npms.io/search?q=ponyfill.",l="Expected a function",o="Invalid `variable` option passed into `_.template`",u="__lodash_hash_undefined__",m=500,n="__lodash_placeholder__",h=1,d=2,g=4,v=1,y=2,P=1,A=2,E=4,C=8,_=16,R=32,j=64,D=128,k=256,x=512,I=30,G="...",O=800,U=16,B=1,z=2,F=3,K=1/0,W=9007199254740991,re=17976931348623157e292,ne=0/0,pe=4294967295,te=pe-1,fe=pe>>>1,Pe=[["ary",D],["bind",P],["bindKey",A],["curry",C],["curryRight",_],["flip",x],["partial",R],["partialRight",j],["rearg",k]],Le="[object Arguments]",nt="[object Array]",mt="[object AsyncFunction]",dt="[object Boolean]",ht="[object Date]",Rt="[object DOMException]",Se="[object Error]",wt="[object Function]",Ge="[object GeneratorFunction]",He="[object Map]",Bt="[object Number]",Oe="[object Null]",le="[object Object]",Ce="[object Promise]",je="[object Proxy]",oe="[object RegExp]",ye="[object Set]",he="[object String]",we="[object Symbol]",Xe="[object Undefined]",qe="[object WeakMap]",Je="[object WeakSet]",_e="[object ArrayBuffer]",$e="[object DataView]",Qe="[object Float32Array]",Ze="[object Float64Array]",Ut="[object Int8Array]",Lt="[object Int16Array]",Ct="[object Int32Array]",_r="[object Uint8Array]",nr="[object Uint8ClampedArray]",Ht="[object Uint16Array]",gr="[object Uint32Array]",Mt=/\b__p \+= '';/g,fr=/\b(__p \+=) '' \+/g,yt=/(__e\(.*?\)|\b__t\)) \+\n'';/g,Ar=/&(?:amp|lt|gt|quot|#39);/g,Or=/[&<>"']/g,lr=RegExp(Ar.source),Nr=RegExp(Or.source),Rr=/<%-([\s\S]+?)%>/g,ai=/<%([\s\S]+?)%>/g,Kr=/<%=([\s\S]+?)%>/g,M=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,$=/^\w*$/,X=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Y=/[\\^$.*+?()[\]{}|]/g,H=RegExp(Y.source),Z=/^\s+/,ee=/\s/,ae=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,de=/\{\n\/\* \[wrapped with (.+)\] \*/,me=/,? & /,Ee=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,Ae=/[()=,{}\[\]\/\s]/,Ie=/\\(\\)?/g,We=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,be=/\w*$/,Me=/^[-+]0x[0-9a-f]+$/i,bt=/^0b[01]+$/i,jt=/^\[object .+?Constructor\]$/,ot=/^0o[0-7]+$/i,Yt=/^(?:0|[1-9]\d*)$/,Fr=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,Et=/($^)/,Za=/['\n\r\u2028\u2029\\]/g,_i="\\ud800-\\udfff",Ja="\\u0300-\\u036f",Qa="\\ufe20-\\ufe2f",ep="\\u20d0-\\u20ff",_o=Ja+Qa+ep,Ao="\\u2700-\\u27bf",Ro="a-z\\xdf-\\xf6\\xf8-\\xff",tp="\\xac\\xb1\\xd7\\xf7",rp="\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf",ip="\\u2000-\\u206f",np=" \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",Co="A-Z\\xc0-\\xd6\\xd8-\\xde",jo="\\ufe0e\\ufe0f",So=tp+rp+ip+np,gn="['\u2019]",op="["+_i+"]",xo="["+So+"]",Ai="["+_o+"]",Do="\\d+",sp="["+Ao+"]",ko="["+Ro+"]",Io="[^"+_i+So+Do+Ao+Ro+Co+"]",fn="\\ud83c[\\udffb-\\udfff]",ap="(?:"+Ai+"|"+fn+")",Lo="[^"+_i+"]",mn="(?:\\ud83c[\\udde6-\\uddff]){2}",hn="[\\ud800-\\udbff][\\udc00-\\udfff]",qr="["+Co+"]",Mo="\\u200d",Oo="(?:"+ko+"|"+Io+")",pp="(?:"+qr+"|"+Io+")",No="(?:"+gn+"(?:d|ll|m|re|s|t|ve))?",Fo="(?:"+gn+"(?:D|LL|M|RE|S|T|VE))?",Go=ap+"?",Bo="["+jo+"]?",lp="(?:"+Mo+"(?:"+[Lo,mn,hn].join("|")+")"+Bo+Go+")*",up="\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",cp="\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])",Uo=Bo+Go+lp,dp="(?:"+[sp,mn,hn].join("|")+")"+Uo,gp="(?:"+[Lo+Ai+"?",Ai,mn,hn,op].join("|")+")",fp=RegExp(gn,"g"),mp=RegExp(Ai,"g"),yn=RegExp(fn+"(?="+fn+")|"+gp+Uo,"g"),hp=RegExp([qr+"?"+ko+"+"+No+"(?="+[xo,qr,"$"].join("|")+")",pp+"+"+Fo+"(?="+[xo,qr+Oo,"$"].join("|")+")",qr+"?"+Oo+"+"+No,qr+"+"+Fo,cp,up,Do,dp].join("|"),"g"),yp=RegExp("["+Mo+_i+_o+jo+"]"),bp=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,vp=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],Pp=-1,pt={};pt[Qe]=pt[Ze]=pt[Ut]=pt[Lt]=pt[Ct]=pt[_r]=pt[nr]=pt[Ht]=pt[gr]=!0,pt[Le]=pt[nt]=pt[_e]=pt[dt]=pt[$e]=pt[ht]=pt[Se]=pt[wt]=pt[He]=pt[Bt]=pt[le]=pt[oe]=pt[ye]=pt[he]=pt[qe]=!1;var at={};at[Le]=at[nt]=at[_e]=at[$e]=at[dt]=at[ht]=at[Qe]=at[Ze]=at[Ut]=at[Lt]=at[Ct]=at[He]=at[Bt]=at[le]=at[oe]=at[ye]=at[he]=at[we]=at[_r]=at[nr]=at[Ht]=at[gr]=!0,at[Se]=at[wt]=at[qe]=!1;var wp={\u00C0:"A",\u00C1:"A",\u00C2:"A",\u00C3:"A",\u00C4:"A",\u00C5:"A",\u00E0:"a",\u00E1:"a",\u00E2:"a",\u00E3:"a",\u00E4:"a",\u00E5:"a",\u00C7:"C",\u00E7:"c",\u00D0:"D",\u00F0:"d",\u00C8:"E",\u00C9:"E",\u00CA:"E",\u00CB:"E",\u00E8:"e",\u00E9:"e",\u00EA:"e",\u00EB:"e",\u00CC:"I",\u00CD:"I",\u00CE:"I",\u00CF:"I",\u00EC:"i",\u00ED:"i",\u00EE:"i",\u00EF:"i",\u00D1:"N",\u00F1:"n",\u00D2:"O",\u00D3:"O",\u00D4:"O",\u00D5:"O",\u00D6:"O",\u00D8:"O",\u00F2:"o",\u00F3:"o",\u00F4:"o",\u00F5:"o",\u00F6:"o",\u00F8:"o",\u00D9:"U",\u00DA:"U",\u00DB:"U",\u00DC:"U",\u00F9:"u",\u00FA:"u",\u00FB:"u",\u00FC:"u",\u00DD:"Y",\u00FD:"y",\u00FF:"y",\u00C6:"Ae",\u00E6:"ae",\u00DE:"Th",\u00FE:"th",\u00DF:"ss",\u0100:"A",\u0102:"A",\u0104:"A",\u0101:"a",\u0103:"a",\u0105:"a",\u0106:"C",\u0108:"C",\u010A:"C",\u010C:"C",\u0107:"c",\u0109:"c",\u010B:"c",\u010D:"c",\u010E:"D",\u0110:"D",\u010F:"d",\u0111:"d",\u0112:"E",\u0114:"E",\u0116:"E",\u0118:"E",\u011A:"E",\u0113:"e",\u0115:"e",\u0117:"e",\u0119:"e",\u011B:"e",\u011C:"G",\u011E:"G",\u0120:"G",\u0122:"G",\u011D:"g",\u011F:"g",\u0121:"g",\u0123:"g",\u0124:"H",\u0126:"H",\u0125:"h",\u0127:"h",\u0128:"I",\u012A:"I",\u012C:"I",\u012E:"I",\u0130:"I",\u0129:"i",\u012B:"i",\u012D:"i",\u012F:"i",\u0131:"i",\u0134:"J",\u0135:"j",\u0136:"K",\u0137:"k",\u0138:"k",\u0139:"L",\u013B:"L",\u013D:"L",\u013F:"L",\u0141:"L",\u013A:"l",\u013C:"l",\u013E:"l",\u0140:"l",\u0142:"l",\u0143:"N",\u0145:"N",\u0147:"N",\u014A:"N",\u0144:"n",\u0146:"n",\u0148:"n",\u014B:"n",\u014C:"O",\u014E:"O",\u0150:"O",\u014D:"o",\u014F:"o",\u0151:"o",\u0154:"R",\u0156:"R",\u0158:"R",\u0155:"r",\u0157:"r",\u0159:"r",\u015A:"S",\u015C:"S",\u015E:"S",\u0160:"S",\u015B:"s",\u015D:"s",\u015F:"s",\u0161:"s",\u0162:"T",\u0164:"T",\u0166:"T",\u0163:"t",\u0165:"t",\u0167:"t",\u0168:"U",\u016A:"U",\u016C:"U",\u016E:"U",\u0170:"U",\u0172:"U",\u0169:"u",\u016B:"u",\u016D:"u",\u016F:"u",\u0171:"u",\u0173:"u",\u0174:"W",\u0175:"w",\u0176:"Y",\u0177:"y",\u0178:"Y",\u0179:"Z",\u017B:"Z",\u017D:"Z",\u017A:"z",\u017C:"z",\u017E:"z",\u0132:"IJ",\u0133:"ij",\u0152:"Oe",\u0153:"oe",\u0149:"'n",\u017F:"s"},Ep={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},Tp={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"},_p={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},Ap=parseFloat,Rp=parseInt,Ho=typeof s.g=="object"&&s.g&&s.g.Object===Object&&s.g,Cp=typeof self=="object"&&self&&self.Object===Object&&self,_t=Ho||Cp||Function("return this")(),Vo=b&&!b.nodeType&&b,pi=Vo&&!0&&T&&!T.nodeType&&T,$o=pi&&pi.exports===Vo,bn=$o&&Ho.process,Xt=function(){try{var J=pi&&pi.require&&pi.require("util").types;return J||bn&&bn.binding&&bn.binding("util")}catch(se){}}(),zo=Xt&&Xt.isArrayBuffer,Wo=Xt&&Xt.isDate,Ko=Xt&&Xt.isMap,qo=Xt&&Xt.isRegExp,Yo=Xt&&Xt.isSet,Xo=Xt&&Xt.isTypedArray;function Vt(J,se,ie){switch(ie.length){case 0:return J.call(se);case 1:return J.call(se,ie[0]);case 2:return J.call(se,ie[0],ie[1]);case 3:return J.call(se,ie[0],ie[1],ie[2])}return J.apply(se,ie)}function jp(J,se,ie,Te){for(var Ne=-1,et=J==null?0:J.length;++Ne<et;){var vt=J[Ne];se(Te,vt,ie(vt),J)}return Te}function Zt(J,se){for(var ie=-1,Te=J==null?0:J.length;++ie<Te&&se(J[ie],ie,J)!==!1;);return J}function Sp(J,se){for(var ie=J==null?0:J.length;ie--&&se(J[ie],ie,J)!==!1;);return J}function Zo(J,se){for(var ie=-1,Te=J==null?0:J.length;++ie<Te;)if(!se(J[ie],ie,J))return!1;return!0}function Cr(J,se){for(var ie=-1,Te=J==null?0:J.length,Ne=0,et=[];++ie<Te;){var vt=J[ie];se(vt,ie,J)&&(et[Ne++]=vt)}return et}function Ri(J,se){var ie=J==null?0:J.length;return!!ie&&Yr(J,se,0)>-1}function vn(J,se,ie){for(var Te=-1,Ne=J==null?0:J.length;++Te<Ne;)if(ie(se,J[Te]))return!0;return!1}function lt(J,se){for(var ie=-1,Te=J==null?0:J.length,Ne=Array(Te);++ie<Te;)Ne[ie]=se(J[ie],ie,J);return Ne}function jr(J,se){for(var ie=-1,Te=se.length,Ne=J.length;++ie<Te;)J[Ne+ie]=se[ie];return J}function Pn(J,se,ie,Te){var Ne=-1,et=J==null?0:J.length;for(Te&&et&&(ie=J[++Ne]);++Ne<et;)ie=se(ie,J[Ne],Ne,J);return ie}function xp(J,se,ie,Te){var Ne=J==null?0:J.length;for(Te&&Ne&&(ie=J[--Ne]);Ne--;)ie=se(ie,J[Ne],Ne,J);return ie}function wn(J,se){for(var ie=-1,Te=J==null?0:J.length;++ie<Te;)if(se(J[ie],ie,J))return!0;return!1}var Dp=En("length");function kp(J){return J.split("")}function Ip(J){return J.match(Ee)||[]}function Jo(J,se,ie){var Te;return ie(J,function(Ne,et,vt){if(se(Ne,et,vt))return Te=et,!1}),Te}function Ci(J,se,ie,Te){for(var Ne=J.length,et=ie+(Te?1:-1);Te?et--:++et<Ne;)if(se(J[et],et,J))return et;return-1}function Yr(J,se,ie){return se===se?zp(J,se,ie):Ci(J,Qo,ie)}function Lp(J,se,ie,Te){for(var Ne=ie-1,et=J.length;++Ne<et;)if(Te(J[Ne],se))return Ne;return-1}function Qo(J){return J!==J}function es(J,se){var ie=J==null?0:J.length;return ie?_n(J,se)/ie:ne}function En(J){return function(se){return se==null?i:se[J]}}function Tn(J){return function(se){return J==null?i:J[se]}}function ts(J,se,ie,Te,Ne){return Ne(J,function(et,vt,st){ie=Te?(Te=!1,et):se(ie,et,vt,st)}),ie}function Mp(J,se){var ie=J.length;for(J.sort(se);ie--;)J[ie]=J[ie].value;return J}function _n(J,se){for(var ie,Te=-1,Ne=J.length;++Te<Ne;){var et=se(J[Te]);et!==i&&(ie=ie===i?et:ie+et)}return ie}function An(J,se){for(var ie=-1,Te=Array(J);++ie<J;)Te[ie]=se(ie);return Te}function Op(J,se){return lt(se,function(ie){return[ie,J[ie]]})}function rs(J){return J&&J.slice(0,ss(J)+1).replace(Z,"")}function $t(J){return function(se){return J(se)}}function Rn(J,se){return lt(se,function(ie){return J[ie]})}function li(J,se){return J.has(se)}function is(J,se){for(var ie=-1,Te=J.length;++ie<Te&&Yr(se,J[ie],0)>-1;);return ie}function ns(J,se){for(var ie=J.length;ie--&&Yr(se,J[ie],0)>-1;);return ie}function Np(J,se){for(var ie=J.length,Te=0;ie--;)J[ie]===se&&++Te;return Te}var Fp=Tn(wp),Gp=Tn(Ep);function Bp(J){return"\\"+_p[J]}function Up(J,se){return J==null?i:J[se]}function Xr(J){return yp.test(J)}function Hp(J){return bp.test(J)}function Vp(J){for(var se,ie=[];!(se=J.next()).done;)ie.push(se.value);return ie}function Cn(J){var se=-1,ie=Array(J.size);return J.forEach(function(Te,Ne){ie[++se]=[Ne,Te]}),ie}function os(J,se){return function(ie){return J(se(ie))}}function Sr(J,se){for(var ie=-1,Te=J.length,Ne=0,et=[];++ie<Te;){var vt=J[ie];(vt===se||vt===n)&&(J[ie]=n,et[Ne++]=ie)}return et}function ji(J){var se=-1,ie=Array(J.size);return J.forEach(function(Te){ie[++se]=Te}),ie}function $p(J){var se=-1,ie=Array(J.size);return J.forEach(function(Te){ie[++se]=[Te,Te]}),ie}function zp(J,se,ie){for(var Te=ie-1,Ne=J.length;++Te<Ne;)if(J[Te]===se)return Te;return-1}function Wp(J,se,ie){for(var Te=ie+1;Te--;)if(J[Te]===se)return Te;return Te}function Zr(J){return Xr(J)?qp(J):Dp(J)}function or(J){return Xr(J)?Yp(J):kp(J)}function ss(J){for(var se=J.length;se--&&ee.test(J.charAt(se)););return se}var Kp=Tn(Tp);function qp(J){for(var se=yn.lastIndex=0;yn.test(J);)++se;return se}function Yp(J){return J.match(yn)||[]}function Xp(J){return J.match(hp)||[]}var Zp=function J(se){se=se==null?_t:Si.defaults(_t.Object(),se,Si.pick(_t,vp));var ie=se.Array,Te=se.Date,Ne=se.Error,et=se.Function,vt=se.Math,st=se.Object,jn=se.RegExp,Jp=se.String,Jt=se.TypeError,xi=ie.prototype,Qp=et.prototype,Jr=st.prototype,Di=se["__core-js_shared__"],ki=Qp.toString,rt=Jr.hasOwnProperty,el=0,as=function(){var e=/[^.]+$/.exec(Di&&Di.keys&&Di.keys.IE_PROTO||"");return e?"Symbol(src)_1."+e:""}(),Ii=Jr.toString,tl=ki.call(st),rl=_t._,il=jn("^"+ki.call(rt).replace(Y,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Li=$o?se.Buffer:i,xr=se.Symbol,Mi=se.Uint8Array,ps=Li?Li.allocUnsafe:i,Oi=os(st.getPrototypeOf,st),ls=st.create,us=Jr.propertyIsEnumerable,Ni=xi.splice,cs=xr?xr.isConcatSpreadable:i,ui=xr?xr.iterator:i,Gr=xr?xr.toStringTag:i,Fi=function(){try{var e=$r(st,"defineProperty");return e({},"",{}),e}catch(t){}}(),nl=se.clearTimeout!==_t.clearTimeout&&se.clearTimeout,ol=Te&&Te.now!==_t.Date.now&&Te.now,sl=se.setTimeout!==_t.setTimeout&&se.setTimeout,Gi=vt.ceil,Bi=vt.floor,Sn=st.getOwnPropertySymbols,al=Li?Li.isBuffer:i,ds=se.isFinite,pl=xi.join,ll=os(st.keys,st),Pt=vt.max,St=vt.min,ul=Te.now,cl=se.parseInt,gs=vt.random,dl=xi.reverse,xn=$r(se,"DataView"),ci=$r(se,"Map"),Dn=$r(se,"Promise"),Qr=$r(se,"Set"),di=$r(se,"WeakMap"),gi=$r(st,"create"),Ui=di&&new di,ei={},gl=zr(xn),fl=zr(ci),ml=zr(Dn),hl=zr(Qr),yl=zr(di),Hi=xr?xr.prototype:i,fi=Hi?Hi.valueOf:i,fs=Hi?Hi.toString:i;function L(e){if(ct(e)&&!Fe(e)&&!(e instanceof Ke)){if(e instanceof Qt)return e;if(rt.call(e,"__wrapped__"))return ma(e)}return new Qt(e)}var ti=function(){function e(){}return function(t){if(!ut(t))return{};if(ls)return ls(t);e.prototype=t;var a=new e;return e.prototype=i,a}}();function Vi(){}function Qt(e,t){this.__wrapped__=e,this.__actions__=[],this.__chain__=!!t,this.__index__=0,this.__values__=i}L.templateSettings={escape:Rr,evaluate:ai,interpolate:Kr,variable:"",imports:{_:L}},L.prototype=Vi.prototype,L.prototype.constructor=L,Qt.prototype=ti(Vi.prototype),Qt.prototype.constructor=Qt;function Ke(e){this.__wrapped__=e,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=pe,this.__views__=[]}function bl(){var e=new Ke(this.__wrapped__);return e.__actions__=Ot(this.__actions__),e.__dir__=this.__dir__,e.__filtered__=this.__filtered__,e.__iteratees__=Ot(this.__iteratees__),e.__takeCount__=this.__takeCount__,e.__views__=Ot(this.__views__),e}function vl(){if(this.__filtered__){var e=new Ke(this);e.__dir__=-1,e.__filtered__=!0}else e=this.clone(),e.__dir__*=-1;return e}function Pl(){var e=this.__wrapped__.value(),t=this.__dir__,a=Fe(e),w=t<0,S=a?e.length:0,N=ku(0,S,this.__views__),V=N.start,q=N.end,Q=q-V,ue=w?q:V-1,ce=this.__iteratees__,ge=ce.length,ve=0,Re=St(Q,this.__takeCount__);if(!a||!w&&S==Q&&Re==Q)return Fs(e,this.__actions__);var De=[];e:for(;Q--&&ve<Re;){ue+=t;for(var Ue=-1,ke=e[ue];++Ue<ge;){var ze=ce[Ue],Ye=ze.iteratee,Kt=ze.type,It=Ye(ke);if(Kt==z)ke=It;else if(!It){if(Kt==B)continue e;break e}}De[ve++]=ke}return De}Ke.prototype=ti(Vi.prototype),Ke.prototype.constructor=Ke;function Br(e){var t=-1,a=e==null?0:e.length;for(this.clear();++t<a;){var w=e[t];this.set(w[0],w[1])}}function wl(){this.__data__=gi?gi(null):{},this.size=0}function El(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}function Tl(e){var t=this.__data__;if(gi){var a=t[e];return a===u?i:a}return rt.call(t,e)?t[e]:i}function _l(e){var t=this.__data__;return gi?t[e]!==i:rt.call(t,e)}function Al(e,t){var a=this.__data__;return this.size+=this.has(e)?0:1,a[e]=gi&&t===i?u:t,this}Br.prototype.clear=wl,Br.prototype.delete=El,Br.prototype.get=Tl,Br.prototype.has=_l,Br.prototype.set=Al;function mr(e){var t=-1,a=e==null?0:e.length;for(this.clear();++t<a;){var w=e[t];this.set(w[0],w[1])}}function Rl(){this.__data__=[],this.size=0}function Cl(e){var t=this.__data__,a=$i(t,e);if(a<0)return!1;var w=t.length-1;return a==w?t.pop():Ni.call(t,a,1),--this.size,!0}function jl(e){var t=this.__data__,a=$i(t,e);return a<0?i:t[a][1]}function Sl(e){return $i(this.__data__,e)>-1}function xl(e,t){var a=this.__data__,w=$i(a,e);return w<0?(++this.size,a.push([e,t])):a[w][1]=t,this}mr.prototype.clear=Rl,mr.prototype.delete=Cl,mr.prototype.get=jl,mr.prototype.has=Sl,mr.prototype.set=xl;function hr(e){var t=-1,a=e==null?0:e.length;for(this.clear();++t<a;){var w=e[t];this.set(w[0],w[1])}}function Dl(){this.size=0,this.__data__={hash:new Br,map:new(ci||mr),string:new Br}}function kl(e){var t=rn(this,e).delete(e);return this.size-=t?1:0,t}function Il(e){return rn(this,e).get(e)}function Ll(e){return rn(this,e).has(e)}function Ml(e,t){var a=rn(this,e),w=a.size;return a.set(e,t),this.size+=a.size==w?0:1,this}hr.prototype.clear=Dl,hr.prototype.delete=kl,hr.prototype.get=Il,hr.prototype.has=Ll,hr.prototype.set=Ml;function Ur(e){var t=-1,a=e==null?0:e.length;for(this.__data__=new hr;++t<a;)this.add(e[t])}function Ol(e){return this.__data__.set(e,u),this}function Nl(e){return this.__data__.has(e)}Ur.prototype.add=Ur.prototype.push=Ol,Ur.prototype.has=Nl;function sr(e){var t=this.__data__=new mr(e);this.size=t.size}function Fl(){this.__data__=new mr,this.size=0}function Gl(e){var t=this.__data__,a=t.delete(e);return this.size=t.size,a}function Bl(e){return this.__data__.get(e)}function Ul(e){return this.__data__.has(e)}function Hl(e,t){var a=this.__data__;if(a instanceof mr){var w=a.__data__;if(!ci||w.length<p-1)return w.push([e,t]),this.size=++a.size,this;a=this.__data__=new hr(w)}return a.set(e,t),this.size=a.size,this}sr.prototype.clear=Fl,sr.prototype.delete=Gl,sr.prototype.get=Bl,sr.prototype.has=Ul,sr.prototype.set=Hl;function ms(e,t){var a=Fe(e),w=!a&&Wr(e),S=!a&&!w&&Mr(e),N=!a&&!w&&!S&&oi(e),V=a||w||S||N,q=V?An(e.length,Jp):[],Q=q.length;for(var ue in e)(t||rt.call(e,ue))&&!(V&&(ue=="length"||S&&(ue=="offset"||ue=="parent")||N&&(ue=="buffer"||ue=="byteLength"||ue=="byteOffset")||Pr(ue,Q)))&&q.push(ue);return q}function hs(e){var t=e.length;return t?e[Hn(0,t-1)]:i}function Vl(e,t){return nn(Ot(e),Hr(t,0,e.length))}function $l(e){return nn(Ot(e))}function kn(e,t,a){(a!==i&&!ar(e[t],a)||a===i&&!(t in e))&&yr(e,t,a)}function mi(e,t,a){var w=e[t];(!(rt.call(e,t)&&ar(w,a))||a===i&&!(t in e))&&yr(e,t,a)}function $i(e,t){for(var a=e.length;a--;)if(ar(e[a][0],t))return a;return-1}function zl(e,t,a,w){return Dr(e,function(S,N,V){t(w,S,a(S),V)}),w}function ys(e,t){return e&&cr(t,Tt(t),e)}function Wl(e,t){return e&&cr(t,Ft(t),e)}function yr(e,t,a){t=="__proto__"&&Fi?Fi(e,t,{configurable:!0,enumerable:!0,value:a,writable:!0}):e[t]=a}function In(e,t){for(var a=-1,w=t.length,S=ie(w),N=e==null;++a<w;)S[a]=N?i:fo(e,t[a]);return S}function Hr(e,t,a){return e===e&&(a!==i&&(e=e<=a?e:a),t!==i&&(e=e>=t?e:t)),e}function er(e,t,a,w,S,N){var V,q=t&h,Q=t&d,ue=t&g;if(a&&(V=S?a(e,w,S,N):a(e)),V!==i)return V;if(!ut(e))return e;var ce=Fe(e);if(ce){if(V=Lu(e),!q)return Ot(e,V)}else{var ge=xt(e),ve=ge==wt||ge==Ge;if(Mr(e))return Us(e,q);if(ge==le||ge==Le||ve&&!S){if(V=Q||ve?{}:sa(e),!q)return Q?Tu(e,Wl(V,e)):Eu(e,ys(V,e))}else{if(!at[ge])return S?e:{};V=Mu(e,ge,q)}}N||(N=new sr);var Re=N.get(e);if(Re)return Re;N.set(e,V),Ma(e)?e.forEach(function(ke){V.add(er(ke,t,a,ke,e,N))}):Ia(e)&&e.forEach(function(ke,ze){V.set(ze,er(ke,t,a,ze,e,N))});var De=ue?Q?Qn:Jn:Q?Ft:Tt,Ue=ce?i:De(e);return Zt(Ue||e,function(ke,ze){Ue&&(ze=ke,ke=e[ze]),mi(V,ze,er(ke,t,a,ze,e,N))}),V}function Kl(e){var t=Tt(e);return function(a){return bs(a,e,t)}}function bs(e,t,a){var w=a.length;if(e==null)return!w;for(e=st(e);w--;){var S=a[w],N=t[S],V=e[S];if(V===i&&!(S in e)||!N(V))return!1}return!0}function vs(e,t,a){if(typeof e!="function")throw new Jt(l);return Ei(function(){e.apply(i,a)},t)}function hi(e,t,a,w){var S=-1,N=Ri,V=!0,q=e.length,Q=[],ue=t.length;if(!q)return Q;a&&(t=lt(t,$t(a))),w?(N=vn,V=!1):t.length>=p&&(N=li,V=!1,t=new Ur(t));e:for(;++S<q;){var ce=e[S],ge=a==null?ce:a(ce);if(ce=w||ce!==0?ce:0,V&&ge===ge){for(var ve=ue;ve--;)if(t[ve]===ge)continue e;Q.push(ce)}else N(t,ge,w)||Q.push(ce)}return Q}var Dr=Ws(ur),Ps=Ws(Mn,!0);function ql(e,t){var a=!0;return Dr(e,function(w,S,N){return a=!!t(w,S,N),a}),a}function zi(e,t,a){for(var w=-1,S=e.length;++w<S;){var N=e[w],V=t(N);if(V!=null&&(q===i?V===V&&!Wt(V):a(V,q)))var q=V,Q=N}return Q}function Yl(e,t,a,w){var S=e.length;for(a=Be(a),a<0&&(a=-a>S?0:S+a),w=w===i||w>S?S:Be(w),w<0&&(w+=S),w=a>w?0:Na(w);a<w;)e[a++]=t;return e}function ws(e,t){var a=[];return Dr(e,function(w,S,N){t(w,S,N)&&a.push(w)}),a}function At(e,t,a,w,S){var N=-1,V=e.length;for(a||(a=Nu),S||(S=[]);++N<V;){var q=e[N];t>0&&a(q)?t>1?At(q,t-1,a,w,S):jr(S,q):w||(S[S.length]=q)}return S}var Ln=Ks(),Es=Ks(!0);function ur(e,t){return e&&Ln(e,t,Tt)}function Mn(e,t){return e&&Es(e,t,Tt)}function Wi(e,t){return Cr(t,function(a){return wr(e[a])})}function Vr(e,t){t=Ir(t,e);for(var a=0,w=t.length;e!=null&&a<w;)e=e[dr(t[a++])];return a&&a==w?e:i}function Ts(e,t,a){var w=t(e);return Fe(e)?w:jr(w,a(e))}function Dt(e){return e==null?e===i?Xe:Oe:Gr&&Gr in st(e)?Du(e):$u(e)}function On(e,t){return e>t}function Xl(e,t){return e!=null&&rt.call(e,t)}function Zl(e,t){return e!=null&&t in st(e)}function Jl(e,t,a){return e>=St(t,a)&&e<Pt(t,a)}function Nn(e,t,a){for(var w=a?vn:Ri,S=e[0].length,N=e.length,V=N,q=ie(N),Q=1/0,ue=[];V--;){var ce=e[V];V&&t&&(ce=lt(ce,$t(t))),Q=St(ce.length,Q),q[V]=!a&&(t||S>=120&&ce.length>=120)?new Ur(V&&ce):i}ce=e[0];var ge=-1,ve=q[0];e:for(;++ge<S&&ue.length<Q;){var Re=ce[ge],De=t?t(Re):Re;if(Re=a||Re!==0?Re:0,!(ve?li(ve,De):w(ue,De,a))){for(V=N;--V;){var Ue=q[V];if(!(Ue?li(Ue,De):w(e[V],De,a)))continue e}ve&&ve.push(De),ue.push(Re)}}return ue}function Ql(e,t,a,w){return ur(e,function(S,N,V){t(w,a(S),N,V)}),w}function yi(e,t,a){t=Ir(t,e),e=ua(e,t);var w=e==null?e:e[dr(rr(t))];return w==null?i:Vt(w,e,a)}function _s(e){return ct(e)&&Dt(e)==Le}function eu(e){return ct(e)&&Dt(e)==_e}function tu(e){return ct(e)&&Dt(e)==ht}function bi(e,t,a,w,S){return e===t?!0:e==null||t==null||!ct(e)&&!ct(t)?e!==e&&t!==t:ru(e,t,a,w,bi,S)}function ru(e,t,a,w,S,N){var V=Fe(e),q=Fe(t),Q=V?nt:xt(e),ue=q?nt:xt(t);Q=Q==Le?le:Q,ue=ue==Le?le:ue;var ce=Q==le,ge=ue==le,ve=Q==ue;if(ve&&Mr(e)){if(!Mr(t))return!1;V=!0,ce=!1}if(ve&&!ce)return N||(N=new sr),V||oi(e)?ia(e,t,a,w,S,N):Su(e,t,Q,a,w,S,N);if(!(a&v)){var Re=ce&&rt.call(e,"__wrapped__"),De=ge&&rt.call(t,"__wrapped__");if(Re||De){var Ue=Re?e.value():e,ke=De?t.value():t;return N||(N=new sr),S(Ue,ke,a,w,N)}}return ve?(N||(N=new sr),xu(e,t,a,w,S,N)):!1}function iu(e){return ct(e)&&xt(e)==He}function Fn(e,t,a,w){var S=a.length,N=S,V=!w;if(e==null)return!N;for(e=st(e);S--;){var q=a[S];if(V&&q[2]?q[1]!==e[q[0]]:!(q[0]in e))return!1}for(;++S<N;){q=a[S];var Q=q[0],ue=e[Q],ce=q[1];if(V&&q[2]){if(ue===i&&!(Q in e))return!1}else{var ge=new sr;if(w)var ve=w(ue,ce,Q,e,t,ge);if(!(ve===i?bi(ce,ue,v|y,w,ge):ve))return!1}}return!0}function As(e){if(!ut(e)||Gu(e))return!1;var t=wr(e)?il:jt;return t.test(zr(e))}function nu(e){return ct(e)&&Dt(e)==oe}function ou(e){return ct(e)&&xt(e)==ye}function su(e){return ct(e)&&un(e.length)&&!!pt[Dt(e)]}function Rs(e){return typeof e=="function"?e:e==null?Gt:typeof e=="object"?Fe(e)?Ss(e[0],e[1]):js(e):qa(e)}function Gn(e){if(!wi(e))return ll(e);var t=[];for(var a in st(e))rt.call(e,a)&&a!="constructor"&&t.push(a);return t}function au(e){if(!ut(e))return Vu(e);var t=wi(e),a=[];for(var w in e)w=="constructor"&&(t||!rt.call(e,w))||a.push(w);return a}function Bn(e,t){return e<t}function Cs(e,t){var a=-1,w=Nt(e)?ie(e.length):[];return Dr(e,function(S,N,V){w[++a]=t(S,N,V)}),w}function js(e){var t=to(e);return t.length==1&&t[0][2]?pa(t[0][0],t[0][1]):function(a){return a===e||Fn(a,e,t)}}function Ss(e,t){return io(e)&&aa(t)?pa(dr(e),t):function(a){var w=fo(a,e);return w===i&&w===t?mo(a,e):bi(t,w,v|y)}}function Ki(e,t,a,w,S){e!==t&&Ln(t,function(N,V){if(S||(S=new sr),ut(N))pu(e,t,V,a,Ki,w,S);else{var q=w?w(oo(e,V),N,V+"",e,t,S):i;q===i&&(q=N),kn(e,V,q)}},Ft)}function pu(e,t,a,w,S,N,V){var q=oo(e,a),Q=oo(t,a),ue=V.get(Q);if(ue){kn(e,a,ue);return}var ce=N?N(q,Q,a+"",e,t,V):i,ge=ce===i;if(ge){var ve=Fe(Q),Re=!ve&&Mr(Q),De=!ve&&!Re&&oi(Q);ce=Q,ve||Re||De?Fe(q)?ce=q:gt(q)?ce=Ot(q):Re?(ge=!1,ce=Us(Q,!0)):De?(ge=!1,ce=Hs(Q,!0)):ce=[]:Ti(Q)||Wr(Q)?(ce=q,Wr(q)?ce=Fa(q):(!ut(q)||wr(q))&&(ce=sa(Q))):ge=!1}ge&&(V.set(Q,ce),S(ce,Q,w,N,V),V.delete(Q)),kn(e,a,ce)}function xs(e,t){var a=e.length;if(!!a)return t+=t<0?a:0,Pr(t,a)?e[t]:i}function Ds(e,t,a){t.length?t=lt(t,function(N){return Fe(N)?function(V){return Vr(V,N.length===1?N[0]:N)}:N}):t=[Gt];var w=-1;t=lt(t,$t(xe()));var S=Cs(e,function(N,V,q){var Q=lt(t,function(ue){return ue(N)});return{criteria:Q,index:++w,value:N}});return Mp(S,function(N,V){return wu(N,V,a)})}function lu(e,t){return ks(e,t,function(a,w){return mo(e,w)})}function ks(e,t,a){for(var w=-1,S=t.length,N={};++w<S;){var V=t[w],q=Vr(e,V);a(q,V)&&vi(N,Ir(V,e),q)}return N}function uu(e){return function(t){return Vr(t,e)}}function Un(e,t,a,w){var S=w?Lp:Yr,N=-1,V=t.length,q=e;for(e===t&&(t=Ot(t)),a&&(q=lt(e,$t(a)));++N<V;)for(var Q=0,ue=t[N],ce=a?a(ue):ue;(Q=S(q,ce,Q,w))>-1;)q!==e&&Ni.call(q,Q,1),Ni.call(e,Q,1);return e}function Is(e,t){for(var a=e?t.length:0,w=a-1;a--;){var S=t[a];if(a==w||S!==N){var N=S;Pr(S)?Ni.call(e,S,1):zn(e,S)}}return e}function Hn(e,t){return e+Bi(gs()*(t-e+1))}function cu(e,t,a,w){for(var S=-1,N=Pt(Gi((t-e)/(a||1)),0),V=ie(N);N--;)V[w?N:++S]=e,e+=a;return V}function Vn(e,t){var a="";if(!e||t<1||t>W)return a;do t%2&&(a+=e),t=Bi(t/2),t&&(e+=e);while(t);return a}function Ve(e,t){return so(la(e,t,Gt),e+"")}function du(e){return hs(si(e))}function gu(e,t){var a=si(e);return nn(a,Hr(t,0,a.length))}function vi(e,t,a,w){if(!ut(e))return e;t=Ir(t,e);for(var S=-1,N=t.length,V=N-1,q=e;q!=null&&++S<N;){var Q=dr(t[S]),ue=a;if(Q==="__proto__"||Q==="constructor"||Q==="prototype")return e;if(S!=V){var ce=q[Q];ue=w?w(ce,Q,q):i,ue===i&&(ue=ut(ce)?ce:Pr(t[S+1])?[]:{})}mi(q,Q,ue),q=q[Q]}return e}var Ls=Ui?function(e,t){return Ui.set(e,t),e}:Gt,fu=Fi?function(e,t){return Fi(e,"toString",{configurable:!0,enumerable:!1,value:yo(t),writable:!0})}:Gt;function mu(e){return nn(si(e))}function tr(e,t,a){var w=-1,S=e.length;t<0&&(t=-t>S?0:S+t),a=a>S?S:a,a<0&&(a+=S),S=t>a?0:a-t>>>0,t>>>=0;for(var N=ie(S);++w<S;)N[w]=e[w+t];return N}function hu(e,t){var a;return Dr(e,function(w,S,N){return a=t(w,S,N),!a}),!!a}function qi(e,t,a){var w=0,S=e==null?w:e.length;if(typeof t=="number"&&t===t&&S<=fe){for(;w<S;){var N=w+S>>>1,V=e[N];V!==null&&!Wt(V)&&(a?V<=t:V<t)?w=N+1:S=N}return S}return $n(e,t,Gt,a)}function $n(e,t,a,w){var S=0,N=e==null?0:e.length;if(N===0)return 0;t=a(t);for(var V=t!==t,q=t===null,Q=Wt(t),ue=t===i;S<N;){var ce=Bi((S+N)/2),ge=a(e[ce]),ve=ge!==i,Re=ge===null,De=ge===ge,Ue=Wt(ge);if(V)var ke=w||De;else ue?ke=De&&(w||ve):q?ke=De&&ve&&(w||!Re):Q?ke=De&&ve&&!Re&&(w||!Ue):Re||Ue?ke=!1:ke=w?ge<=t:ge<t;ke?S=ce+1:N=ce}return St(N,te)}function Ms(e,t){for(var a=-1,w=e.length,S=0,N=[];++a<w;){var V=e[a],q=t?t(V):V;if(!a||!ar(q,Q)){var Q=q;N[S++]=V===0?0:V}}return N}function Os(e){return typeof e=="number"?e:Wt(e)?ne:+e}function zt(e){if(typeof e=="string")return e;if(Fe(e))return lt(e,zt)+"";if(Wt(e))return fs?fs.call(e):"";var t=e+"";return t=="0"&&1/e==-K?"-0":t}function kr(e,t,a){var w=-1,S=Ri,N=e.length,V=!0,q=[],Q=q;if(a)V=!1,S=vn;else if(N>=p){var ue=t?null:Cu(e);if(ue)return ji(ue);V=!1,S=li,Q=new Ur}else Q=t?[]:q;e:for(;++w<N;){var ce=e[w],ge=t?t(ce):ce;if(ce=a||ce!==0?ce:0,V&&ge===ge){for(var ve=Q.length;ve--;)if(Q[ve]===ge)continue e;t&&Q.push(ge),q.push(ce)}else S(Q,ge,a)||(Q!==q&&Q.push(ge),q.push(ce))}return q}function zn(e,t){return t=Ir(t,e),e=ua(e,t),e==null||delete e[dr(rr(t))]}function Ns(e,t,a,w){return vi(e,t,a(Vr(e,t)),w)}function Yi(e,t,a,w){for(var S=e.length,N=w?S:-1;(w?N--:++N<S)&&t(e[N],N,e););return a?tr(e,w?0:N,w?N+1:S):tr(e,w?N+1:0,w?S:N)}function Fs(e,t){var a=e;return a instanceof Ke&&(a=a.value()),Pn(t,function(w,S){return S.func.apply(S.thisArg,jr([w],S.args))},a)}function Wn(e,t,a){var w=e.length;if(w<2)return w?kr(e[0]):[];for(var S=-1,N=ie(w);++S<w;)for(var V=e[S],q=-1;++q<w;)q!=S&&(N[S]=hi(N[S]||V,e[q],t,a));return kr(At(N,1),t,a)}function Gs(e,t,a){for(var w=-1,S=e.length,N=t.length,V={};++w<S;){var q=w<N?t[w]:i;a(V,e[w],q)}return V}function Kn(e){return gt(e)?e:[]}function qn(e){return typeof e=="function"?e:Gt}function Ir(e,t){return Fe(e)?e:io(e,t)?[e]:fa(tt(e))}var yu=Ve;function Lr(e,t,a){var w=e.length;return a=a===i?w:a,!t&&a>=w?e:tr(e,t,a)}var Bs=nl||function(e){return _t.clearTimeout(e)};function Us(e,t){if(t)return e.slice();var a=e.length,w=ps?ps(a):new e.constructor(a);return e.copy(w),w}function Yn(e){var t=new e.constructor(e.byteLength);return new Mi(t).set(new Mi(e)),t}function bu(e,t){var a=t?Yn(e.buffer):e.buffer;return new e.constructor(a,e.byteOffset,e.byteLength)}function vu(e){var t=new e.constructor(e.source,be.exec(e));return t.lastIndex=e.lastIndex,t}function Pu(e){return fi?st(fi.call(e)):{}}function Hs(e,t){var a=t?Yn(e.buffer):e.buffer;return new e.constructor(a,e.byteOffset,e.length)}function Vs(e,t){if(e!==t){var a=e!==i,w=e===null,S=e===e,N=Wt(e),V=t!==i,q=t===null,Q=t===t,ue=Wt(t);if(!q&&!ue&&!N&&e>t||N&&V&&Q&&!q&&!ue||w&&V&&Q||!a&&Q||!S)return 1;if(!w&&!N&&!ue&&e<t||ue&&a&&S&&!w&&!N||q&&a&&S||!V&&S||!Q)return-1}return 0}function wu(e,t,a){for(var w=-1,S=e.criteria,N=t.criteria,V=S.length,q=a.length;++w<V;){var Q=Vs(S[w],N[w]);if(Q){if(w>=q)return Q;var ue=a[w];return Q*(ue=="desc"?-1:1)}}return e.index-t.index}function $s(e,t,a,w){for(var S=-1,N=e.length,V=a.length,q=-1,Q=t.length,ue=Pt(N-V,0),ce=ie(Q+ue),ge=!w;++q<Q;)ce[q]=t[q];for(;++S<V;)(ge||S<N)&&(ce[a[S]]=e[S]);for(;ue--;)ce[q++]=e[S++];return ce}function zs(e,t,a,w){for(var S=-1,N=e.length,V=-1,q=a.length,Q=-1,ue=t.length,ce=Pt(N-q,0),ge=ie(ce+ue),ve=!w;++S<ce;)ge[S]=e[S];for(var Re=S;++Q<ue;)ge[Re+Q]=t[Q];for(;++V<q;)(ve||S<N)&&(ge[Re+a[V]]=e[S++]);return ge}function Ot(e,t){var a=-1,w=e.length;for(t||(t=ie(w));++a<w;)t[a]=e[a];return t}function cr(e,t,a,w){var S=!a;a||(a={});for(var N=-1,V=t.length;++N<V;){var q=t[N],Q=w?w(a[q],e[q],q,a,e):i;Q===i&&(Q=e[q]),S?yr(a,q,Q):mi(a,q,Q)}return a}function Eu(e,t){return cr(e,ro(e),t)}function Tu(e,t){return cr(e,na(e),t)}function Xi(e,t){return function(a,w){var S=Fe(a)?jp:zl,N=t?t():{};return S(a,e,xe(w,2),N)}}function ri(e){return Ve(function(t,a){var w=-1,S=a.length,N=S>1?a[S-1]:i,V=S>2?a[2]:i;for(N=e.length>3&&typeof N=="function"?(S--,N):i,V&&kt(a[0],a[1],V)&&(N=S<3?i:N,S=1),t=st(t);++w<S;){var q=a[w];q&&e(t,q,w,N)}return t})}function Ws(e,t){return function(a,w){if(a==null)return a;if(!Nt(a))return e(a,w);for(var S=a.length,N=t?S:-1,V=st(a);(t?N--:++N<S)&&w(V[N],N,V)!==!1;);return a}}function Ks(e){return function(t,a,w){for(var S=-1,N=st(t),V=w(t),q=V.length;q--;){var Q=V[e?q:++S];if(a(N[Q],Q,N)===!1)break}return t}}function _u(e,t,a){var w=t&P,S=Pi(e);function N(){var V=this&&this!==_t&&this instanceof N?S:e;return V.apply(w?a:this,arguments)}return N}function qs(e){return function(t){t=tt(t);var a=Xr(t)?or(t):i,w=a?a[0]:t.charAt(0),S=a?Lr(a,1).join(""):t.slice(1);return w[e]()+S}}function ii(e){return function(t){return Pn(Wa(za(t).replace(fp,"")),e,"")}}function Pi(e){return function(){var t=arguments;switch(t.length){case 0:return new e;case 1:return new e(t[0]);case 2:return new e(t[0],t[1]);case 3:return new e(t[0],t[1],t[2]);case 4:return new e(t[0],t[1],t[2],t[3]);case 5:return new e(t[0],t[1],t[2],t[3],t[4]);case 6:return new e(t[0],t[1],t[2],t[3],t[4],t[5]);case 7:return new e(t[0],t[1],t[2],t[3],t[4],t[5],t[6])}var a=ti(e.prototype),w=e.apply(a,t);return ut(w)?w:a}}function Au(e,t,a){var w=Pi(e);function S(){for(var N=arguments.length,V=ie(N),q=N,Q=ni(S);q--;)V[q]=arguments[q];var ue=N<3&&V[0]!==Q&&V[N-1]!==Q?[]:Sr(V,Q);if(N-=ue.length,N<a)return Qs(e,t,Zi,S.placeholder,i,V,ue,i,i,a-N);var ce=this&&this!==_t&&this instanceof S?w:e;return Vt(ce,this,V)}return S}function Ys(e){return function(t,a,w){var S=st(t);if(!Nt(t)){var N=xe(a,3);t=Tt(t),a=function(q){return N(S[q],q,S)}}var V=e(t,a,w);return V>-1?S[N?t[V]:V]:i}}function Xs(e){return vr(function(t){var a=t.length,w=a,S=Qt.prototype.thru;for(e&&t.reverse();w--;){var N=t[w];if(typeof N!="function")throw new Jt(l);if(S&&!V&&tn(N)=="wrapper")var V=new Qt([],!0)}for(w=V?w:a;++w<a;){N=t[w];var q=tn(N),Q=q=="wrapper"?eo(N):i;Q&&no(Q[0])&&Q[1]==(D|C|R|k)&&!Q[4].length&&Q[9]==1?V=V[tn(Q[0])].apply(V,Q[3]):V=N.length==1&&no(N)?V[q]():V.thru(N)}return function(){var ue=arguments,ce=ue[0];if(V&&ue.length==1&&Fe(ce))return V.plant(ce).value();for(var ge=0,ve=a?t[ge].apply(this,ue):ce;++ge<a;)ve=t[ge].call(this,ve);return ve}})}function Zi(e,t,a,w,S,N,V,q,Q,ue){var ce=t&D,ge=t&P,ve=t&A,Re=t&(C|_),De=t&x,Ue=ve?i:Pi(e);function ke(){for(var ze=arguments.length,Ye=ie(ze),Kt=ze;Kt--;)Ye[Kt]=arguments[Kt];if(Re)var It=ni(ke),qt=Np(Ye,It);if(w&&(Ye=$s(Ye,w,S,Re)),N&&(Ye=zs(Ye,N,V,Re)),ze-=qt,Re&&ze<ue){var ft=Sr(Ye,It);return Qs(e,t,Zi,ke.placeholder,a,Ye,ft,q,Q,ue-ze)}var pr=ge?a:this,Tr=ve?pr[e]:e;return ze=Ye.length,q?Ye=zu(Ye,q):De&&ze>1&&Ye.reverse(),ce&&Q<ze&&(Ye.length=Q),this&&this!==_t&&this instanceof ke&&(Tr=Ue||Pi(Tr)),Tr.apply(pr,Ye)}return ke}function Zs(e,t){return function(a,w){return Ql(a,e,t(w),{})}}function Ji(e,t){return function(a,w){var S;if(a===i&&w===i)return t;if(a!==i&&(S=a),w!==i){if(S===i)return w;typeof a=="string"||typeof w=="string"?(a=zt(a),w=zt(w)):(a=Os(a),w=Os(w)),S=e(a,w)}return S}}function Xn(e){return vr(function(t){return t=lt(t,$t(xe())),Ve(function(a){var w=this;return e(t,function(S){return Vt(S,w,a)})})})}function Qi(e,t){t=t===i?" ":zt(t);var a=t.length;if(a<2)return a?Vn(t,e):t;var w=Vn(t,Gi(e/Zr(t)));return Xr(t)?Lr(or(w),0,e).join(""):w.slice(0,e)}function Ru(e,t,a,w){var S=t&P,N=Pi(e);function V(){for(var q=-1,Q=arguments.length,ue=-1,ce=w.length,ge=ie(ce+Q),ve=this&&this!==_t&&this instanceof V?N:e;++ue<ce;)ge[ue]=w[ue];for(;Q--;)ge[ue++]=arguments[++q];return Vt(ve,S?a:this,ge)}return V}function Js(e){return function(t,a,w){return w&&typeof w!="number"&&kt(t,a,w)&&(a=w=i),t=Er(t),a===i?(a=t,t=0):a=Er(a),w=w===i?t<a?1:-1:Er(w),cu(t,a,w,e)}}function en(e){return function(t,a){return typeof t=="string"&&typeof a=="string"||(t=ir(t),a=ir(a)),e(t,a)}}function Qs(e,t,a,w,S,N,V,q,Q,ue){var ce=t&C,ge=ce?V:i,ve=ce?i:V,Re=ce?N:i,De=ce?i:N;t|=ce?R:j,t&=~(ce?j:R),t&E||(t&=~(P|A));var Ue=[e,t,S,Re,ge,De,ve,q,Q,ue],ke=a.apply(i,Ue);return no(e)&&ca(ke,Ue),ke.placeholder=w,da(ke,e,t)}function Zn(e){var t=vt[e];return function(a,w){if(a=ir(a),w=w==null?0:St(Be(w),292),w&&ds(a)){var S=(tt(a)+"e").split("e"),N=t(S[0]+"e"+(+S[1]+w));return S=(tt(N)+"e").split("e"),+(S[0]+"e"+(+S[1]-w))}return t(a)}}var Cu=Qr&&1/ji(new Qr([,-0]))[1]==K?function(e){return new Qr(e)}:Po;function ea(e){return function(t){var a=xt(t);return a==He?Cn(t):a==ye?$p(t):Op(t,e(t))}}function br(e,t,a,w,S,N,V,q){var Q=t&A;if(!Q&&typeof e!="function")throw new Jt(l);var ue=w?w.length:0;if(ue||(t&=~(R|j),w=S=i),V=V===i?V:Pt(Be(V),0),q=q===i?q:Be(q),ue-=S?S.length:0,t&j){var ce=w,ge=S;w=S=i}var ve=Q?i:eo(e),Re=[e,t,a,w,S,ce,ge,N,V,q];if(ve&&Hu(Re,ve),e=Re[0],t=Re[1],a=Re[2],w=Re[3],S=Re[4],q=Re[9]=Re[9]===i?Q?0:e.length:Pt(Re[9]-ue,0),!q&&t&(C|_)&&(t&=~(C|_)),!t||t==P)var De=_u(e,t,a);else t==C||t==_?De=Au(e,t,q):(t==R||t==(P|R))&&!S.length?De=Ru(e,t,a,w):De=Zi.apply(i,Re);var Ue=ve?Ls:ca;return da(Ue(De,Re),e,t)}function ta(e,t,a,w){return e===i||ar(e,Jr[a])&&!rt.call(w,a)?t:e}function ra(e,t,a,w,S,N){return ut(e)&&ut(t)&&(N.set(t,e),Ki(e,t,i,ra,N),N.delete(t)),e}function ju(e){return Ti(e)?i:e}function ia(e,t,a,w,S,N){var V=a&v,q=e.length,Q=t.length;if(q!=Q&&!(V&&Q>q))return!1;var ue=N.get(e),ce=N.get(t);if(ue&&ce)return ue==t&&ce==e;var ge=-1,ve=!0,Re=a&y?new Ur:i;for(N.set(e,t),N.set(t,e);++ge<q;){var De=e[ge],Ue=t[ge];if(w)var ke=V?w(Ue,De,ge,t,e,N):w(De,Ue,ge,e,t,N);if(ke!==i){if(ke)continue;ve=!1;break}if(Re){if(!wn(t,function(ze,Ye){if(!li(Re,Ye)&&(De===ze||S(De,ze,a,w,N)))return Re.push(Ye)})){ve=!1;break}}else if(!(De===Ue||S(De,Ue,a,w,N))){ve=!1;break}}return N.delete(e),N.delete(t),ve}function Su(e,t,a,w,S,N,V){switch(a){case $e:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case _e:return!(e.byteLength!=t.byteLength||!N(new Mi(e),new Mi(t)));case dt:case ht:case Bt:return ar(+e,+t);case Se:return e.name==t.name&&e.message==t.message;case oe:case he:return e==t+"";case He:var q=Cn;case ye:var Q=w&v;if(q||(q=ji),e.size!=t.size&&!Q)return!1;var ue=V.get(e);if(ue)return ue==t;w|=y,V.set(e,t);var ce=ia(q(e),q(t),w,S,N,V);return V.delete(e),ce;case we:if(fi)return fi.call(e)==fi.call(t)}return!1}function xu(e,t,a,w,S,N){var V=a&v,q=Jn(e),Q=q.length,ue=Jn(t),ce=ue.length;if(Q!=ce&&!V)return!1;for(var ge=Q;ge--;){var ve=q[ge];if(!(V?ve in t:rt.call(t,ve)))return!1}var Re=N.get(e),De=N.get(t);if(Re&&De)return Re==t&&De==e;var Ue=!0;N.set(e,t),N.set(t,e);for(var ke=V;++ge<Q;){ve=q[ge];var ze=e[ve],Ye=t[ve];if(w)var Kt=V?w(Ye,ze,ve,t,e,N):w(ze,Ye,ve,e,t,N);if(!(Kt===i?ze===Ye||S(ze,Ye,a,w,N):Kt)){Ue=!1;break}ke||(ke=ve=="constructor")}if(Ue&&!ke){var It=e.constructor,qt=t.constructor;It!=qt&&"constructor"in e&&"constructor"in t&&!(typeof It=="function"&&It instanceof It&&typeof qt=="function"&&qt instanceof qt)&&(Ue=!1)}return N.delete(e),N.delete(t),Ue}function vr(e){return so(la(e,i,ba),e+"")}function Jn(e){return Ts(e,Tt,ro)}function Qn(e){return Ts(e,Ft,na)}var eo=Ui?function(e){return Ui.get(e)}:Po;function tn(e){for(var t=e.name+"",a=ei[t],w=rt.call(ei,t)?a.length:0;w--;){var S=a[w],N=S.func;if(N==null||N==e)return S.name}return t}function ni(e){var t=rt.call(L,"placeholder")?L:e;return t.placeholder}function xe(){var e=L.iteratee||bo;return e=e===bo?Rs:e,arguments.length?e(arguments[0],arguments[1]):e}function rn(e,t){var a=e.__data__;return Fu(t)?a[typeof t=="string"?"string":"hash"]:a.map}function to(e){for(var t=Tt(e),a=t.length;a--;){var w=t[a],S=e[w];t[a]=[w,S,aa(S)]}return t}function $r(e,t){var a=Up(e,t);return As(a)?a:i}function Du(e){var t=rt.call(e,Gr),a=e[Gr];try{e[Gr]=i;var w=!0}catch(N){}var S=Ii.call(e);return w&&(t?e[Gr]=a:delete e[Gr]),S}var ro=Sn?function(e){return e==null?[]:(e=st(e),Cr(Sn(e),function(t){return us.call(e,t)}))}:wo,na=Sn?function(e){for(var t=[];e;)jr(t,ro(e)),e=Oi(e);return t}:wo,xt=Dt;(xn&&xt(new xn(new ArrayBuffer(1)))!=$e||ci&&xt(new ci)!=He||Dn&&xt(Dn.resolve())!=Ce||Qr&&xt(new Qr)!=ye||di&&xt(new di)!=qe)&&(xt=function(e){var t=Dt(e),a=t==le?e.constructor:i,w=a?zr(a):"";if(w)switch(w){case gl:return $e;case fl:return He;case ml:return Ce;case hl:return ye;case yl:return qe}return t});function ku(e,t,a){for(var w=-1,S=a.length;++w<S;){var N=a[w],V=N.size;switch(N.type){case"drop":e+=V;break;case"dropRight":t-=V;break;case"take":t=St(t,e+V);break;case"takeRight":e=Pt(e,t-V);break}}return{start:e,end:t}}function Iu(e){var t=e.match(de);return t?t[1].split(me):[]}function oa(e,t,a){t=Ir(t,e);for(var w=-1,S=t.length,N=!1;++w<S;){var V=dr(t[w]);if(!(N=e!=null&&a(e,V)))break;e=e[V]}return N||++w!=S?N:(S=e==null?0:e.length,!!S&&un(S)&&Pr(V,S)&&(Fe(e)||Wr(e)))}function Lu(e){var t=e.length,a=new e.constructor(t);return t&&typeof e[0]=="string"&&rt.call(e,"index")&&(a.index=e.index,a.input=e.input),a}function sa(e){return typeof e.constructor=="function"&&!wi(e)?ti(Oi(e)):{}}function Mu(e,t,a){var w=e.constructor;switch(t){case _e:return Yn(e);case dt:case ht:return new w(+e);case $e:return bu(e,a);case Qe:case Ze:case Ut:case Lt:case Ct:case _r:case nr:case Ht:case gr:return Hs(e,a);case He:return new w;case Bt:case he:return new w(e);case oe:return vu(e);case ye:return new w;case we:return Pu(e)}}function Ou(e,t){var a=t.length;if(!a)return e;var w=a-1;return t[w]=(a>1?"& ":"")+t[w],t=t.join(a>2?", ":" "),e.replace(ae,`{
/* [wrapped with `+t+`] */
`)}function Nu(e){return Fe(e)||Wr(e)||!!(cs&&e&&e[cs])}function Pr(e,t){var a=typeof e;return t=t==null?W:t,!!t&&(a=="number"||a!="symbol"&&Yt.test(e))&&e>-1&&e%1==0&&e<t}function kt(e,t,a){if(!ut(a))return!1;var w=typeof t;return(w=="number"?Nt(a)&&Pr(t,a.length):w=="string"&&t in a)?ar(a[t],e):!1}function io(e,t){if(Fe(e))return!1;var a=typeof e;return a=="number"||a=="symbol"||a=="boolean"||e==null||Wt(e)?!0:$.test(e)||!M.test(e)||t!=null&&e in st(t)}function Fu(e){var t=typeof e;return t=="string"||t=="number"||t=="symbol"||t=="boolean"?e!=="__proto__":e===null}function no(e){var t=tn(e),a=L[t];if(typeof a!="function"||!(t in Ke.prototype))return!1;if(e===a)return!0;var w=eo(a);return!!w&&e===w[0]}function Gu(e){return!!as&&as in e}var Bu=Di?wr:Eo;function wi(e){var t=e&&e.constructor,a=typeof t=="function"&&t.prototype||Jr;return e===a}function aa(e){return e===e&&!ut(e)}function pa(e,t){return function(a){return a==null?!1:a[e]===t&&(t!==i||e in st(a))}}function Uu(e){var t=pn(e,function(w){return a.size===m&&a.clear(),w}),a=t.cache;return t}function Hu(e,t){var a=e[1],w=t[1],S=a|w,N=S<(P|A|D),V=w==D&&a==C||w==D&&a==k&&e[7].length<=t[8]||w==(D|k)&&t[7].length<=t[8]&&a==C;if(!(N||V))return e;w&P&&(e[2]=t[2],S|=a&P?0:E);var q=t[3];if(q){var Q=e[3];e[3]=Q?$s(Q,q,t[4]):q,e[4]=Q?Sr(e[3],n):t[4]}return q=t[5],q&&(Q=e[5],e[5]=Q?zs(Q,q,t[6]):q,e[6]=Q?Sr(e[5],n):t[6]),q=t[7],q&&(e[7]=q),w&D&&(e[8]=e[8]==null?t[8]:St(e[8],t[8])),e[9]==null&&(e[9]=t[9]),e[0]=t[0],e[1]=S,e}function Vu(e){var t=[];if(e!=null)for(var a in st(e))t.push(a);return t}function $u(e){return Ii.call(e)}function la(e,t,a){return t=Pt(t===i?e.length-1:t,0),function(){for(var w=arguments,S=-1,N=Pt(w.length-t,0),V=ie(N);++S<N;)V[S]=w[t+S];S=-1;for(var q=ie(t+1);++S<t;)q[S]=w[S];return q[t]=a(V),Vt(e,this,q)}}function ua(e,t){return t.length<2?e:Vr(e,tr(t,0,-1))}function zu(e,t){for(var a=e.length,w=St(t.length,a),S=Ot(e);w--;){var N=t[w];e[w]=Pr(N,a)?S[N]:i}return e}function oo(e,t){if(!(t==="constructor"&&typeof e[t]=="function")&&t!="__proto__")return e[t]}var ca=ga(Ls),Ei=sl||function(e,t){return _t.setTimeout(e,t)},so=ga(fu);function da(e,t,a){var w=t+"";return so(e,Ou(w,Wu(Iu(w),a)))}function ga(e){var t=0,a=0;return function(){var w=ul(),S=U-(w-a);if(a=w,S>0){if(++t>=O)return arguments[0]}else t=0;return e.apply(i,arguments)}}function nn(e,t){var a=-1,w=e.length,S=w-1;for(t=t===i?w:t;++a<t;){var N=Hn(a,S),V=e[N];e[N]=e[a],e[a]=V}return e.length=t,e}var fa=Uu(function(e){var t=[];return e.charCodeAt(0)===46&&t.push(""),e.replace(X,function(a,w,S,N){t.push(S?N.replace(Ie,"$1"):w||a)}),t});function dr(e){if(typeof e=="string"||Wt(e))return e;var t=e+"";return t=="0"&&1/e==-K?"-0":t}function zr(e){if(e!=null){try{return ki.call(e)}catch(t){}try{return e+""}catch(t){}}return""}function Wu(e,t){return Zt(Pe,function(a){var w="_."+a[0];t&a[1]&&!Ri(e,w)&&e.push(w)}),e.sort()}function ma(e){if(e instanceof Ke)return e.clone();var t=new Qt(e.__wrapped__,e.__chain__);return t.__actions__=Ot(e.__actions__),t.__index__=e.__index__,t.__values__=e.__values__,t}function Ku(e,t,a){(a?kt(e,t,a):t===i)?t=1:t=Pt(Be(t),0);var w=e==null?0:e.length;if(!w||t<1)return[];for(var S=0,N=0,V=ie(Gi(w/t));S<w;)V[N++]=tr(e,S,S+=t);return V}function qu(e){for(var t=-1,a=e==null?0:e.length,w=0,S=[];++t<a;){var N=e[t];N&&(S[w++]=N)}return S}function Yu(){var e=arguments.length;if(!e)return[];for(var t=ie(e-1),a=arguments[0],w=e;w--;)t[w-1]=arguments[w];return jr(Fe(a)?Ot(a):[a],At(t,1))}var Xu=Ve(function(e,t){return gt(e)?hi(e,At(t,1,gt,!0)):[]}),Zu=Ve(function(e,t){var a=rr(t);return gt(a)&&(a=i),gt(e)?hi(e,At(t,1,gt,!0),xe(a,2)):[]}),Ju=Ve(function(e,t){var a=rr(t);return gt(a)&&(a=i),gt(e)?hi(e,At(t,1,gt,!0),i,a):[]});function Qu(e,t,a){var w=e==null?0:e.length;return w?(t=a||t===i?1:Be(t),tr(e,t<0?0:t,w)):[]}function ec(e,t,a){var w=e==null?0:e.length;return w?(t=a||t===i?1:Be(t),t=w-t,tr(e,0,t<0?0:t)):[]}function tc(e,t){return e&&e.length?Yi(e,xe(t,3),!0,!0):[]}function rc(e,t){return e&&e.length?Yi(e,xe(t,3),!0):[]}function ic(e,t,a,w){var S=e==null?0:e.length;return S?(a&&typeof a!="number"&&kt(e,t,a)&&(a=0,w=S),Yl(e,t,a,w)):[]}function ha(e,t,a){var w=e==null?0:e.length;if(!w)return-1;var S=a==null?0:Be(a);return S<0&&(S=Pt(w+S,0)),Ci(e,xe(t,3),S)}function ya(e,t,a){var w=e==null?0:e.length;if(!w)return-1;var S=w-1;return a!==i&&(S=Be(a),S=a<0?Pt(w+S,0):St(S,w-1)),Ci(e,xe(t,3),S,!0)}function ba(e){var t=e==null?0:e.length;return t?At(e,1):[]}function nc(e){var t=e==null?0:e.length;return t?At(e,K):[]}function oc(e,t){var a=e==null?0:e.length;return a?(t=t===i?1:Be(t),At(e,t)):[]}function sc(e){for(var t=-1,a=e==null?0:e.length,w={};++t<a;){var S=e[t];w[S[0]]=S[1]}return w}function va(e){return e&&e.length?e[0]:i}function ac(e,t,a){var w=e==null?0:e.length;if(!w)return-1;var S=a==null?0:Be(a);return S<0&&(S=Pt(w+S,0)),Yr(e,t,S)}function pc(e){var t=e==null?0:e.length;return t?tr(e,0,-1):[]}var lc=Ve(function(e){var t=lt(e,Kn);return t.length&&t[0]===e[0]?Nn(t):[]}),uc=Ve(function(e){var t=rr(e),a=lt(e,Kn);return t===rr(a)?t=i:a.pop(),a.length&&a[0]===e[0]?Nn(a,xe(t,2)):[]}),cc=Ve(function(e){var t=rr(e),a=lt(e,Kn);return t=typeof t=="function"?t:i,t&&a.pop(),a.length&&a[0]===e[0]?Nn(a,i,t):[]});function dc(e,t){return e==null?"":pl.call(e,t)}function rr(e){var t=e==null?0:e.length;return t?e[t-1]:i}function gc(e,t,a){var w=e==null?0:e.length;if(!w)return-1;var S=w;return a!==i&&(S=Be(a),S=S<0?Pt(w+S,0):St(S,w-1)),t===t?Wp(e,t,S):Ci(e,Qo,S,!0)}function fc(e,t){return e&&e.length?xs(e,Be(t)):i}var mc=Ve(Pa);function Pa(e,t){return e&&e.length&&t&&t.length?Un(e,t):e}function hc(e,t,a){return e&&e.length&&t&&t.length?Un(e,t,xe(a,2)):e}function yc(e,t,a){return e&&e.length&&t&&t.length?Un(e,t,i,a):e}var bc=vr(function(e,t){var a=e==null?0:e.length,w=In(e,t);return Is(e,lt(t,function(S){return Pr(S,a)?+S:S}).sort(Vs)),w});function vc(e,t){var a=[];if(!(e&&e.length))return a;var w=-1,S=[],N=e.length;for(t=xe(t,3);++w<N;){var V=e[w];t(V,w,e)&&(a.push(V),S.push(w))}return Is(e,S),a}function ao(e){return e==null?e:dl.call(e)}function Pc(e,t,a){var w=e==null?0:e.length;return w?(a&&typeof a!="number"&&kt(e,t,a)?(t=0,a=w):(t=t==null?0:Be(t),a=a===i?w:Be(a)),tr(e,t,a)):[]}function wc(e,t){return qi(e,t)}function Ec(e,t,a){return $n(e,t,xe(a,2))}function Tc(e,t){var a=e==null?0:e.length;if(a){var w=qi(e,t);if(w<a&&ar(e[w],t))return w}return-1}function _c(e,t){return qi(e,t,!0)}function Ac(e,t,a){return $n(e,t,xe(a,2),!0)}function Rc(e,t){var a=e==null?0:e.length;if(a){var w=qi(e,t,!0)-1;if(ar(e[w],t))return w}return-1}function Cc(e){return e&&e.length?Ms(e):[]}function jc(e,t){return e&&e.length?Ms(e,xe(t,2)):[]}function Sc(e){var t=e==null?0:e.length;return t?tr(e,1,t):[]}function xc(e,t,a){return e&&e.length?(t=a||t===i?1:Be(t),tr(e,0,t<0?0:t)):[]}function Dc(e,t,a){var w=e==null?0:e.length;return w?(t=a||t===i?1:Be(t),t=w-t,tr(e,t<0?0:t,w)):[]}function kc(e,t){return e&&e.length?Yi(e,xe(t,3),!1,!0):[]}function Ic(e,t){return e&&e.length?Yi(e,xe(t,3)):[]}var Lc=Ve(function(e){return kr(At(e,1,gt,!0))}),Mc=Ve(function(e){var t=rr(e);return gt(t)&&(t=i),kr(At(e,1,gt,!0),xe(t,2))}),Oc=Ve(function(e){var t=rr(e);return t=typeof t=="function"?t:i,kr(At(e,1,gt,!0),i,t)});function Nc(e){return e&&e.length?kr(e):[]}function Fc(e,t){return e&&e.length?kr(e,xe(t,2)):[]}function Gc(e,t){return t=typeof t=="function"?t:i,e&&e.length?kr(e,i,t):[]}function po(e){if(!(e&&e.length))return[];var t=0;return e=Cr(e,function(a){if(gt(a))return t=Pt(a.length,t),!0}),An(t,function(a){return lt(e,En(a))})}function wa(e,t){if(!(e&&e.length))return[];var a=po(e);return t==null?a:lt(a,function(w){return Vt(t,i,w)})}var Bc=Ve(function(e,t){return gt(e)?hi(e,t):[]}),Uc=Ve(function(e){return Wn(Cr(e,gt))}),Hc=Ve(function(e){var t=rr(e);return gt(t)&&(t=i),Wn(Cr(e,gt),xe(t,2))}),Vc=Ve(function(e){var t=rr(e);return t=typeof t=="function"?t:i,Wn(Cr(e,gt),i,t)}),$c=Ve(po);function zc(e,t){return Gs(e||[],t||[],mi)}function Wc(e,t){return Gs(e||[],t||[],vi)}var Kc=Ve(function(e){var t=e.length,a=t>1?e[t-1]:i;return a=typeof a=="function"?(e.pop(),a):i,wa(e,a)});function Ea(e){var t=L(e);return t.__chain__=!0,t}function qc(e,t){return t(e),e}function on(e,t){return t(e)}var Yc=vr(function(e){var t=e.length,a=t?e[0]:0,w=this.__wrapped__,S=function(N){return In(N,e)};return t>1||this.__actions__.length||!(w instanceof Ke)||!Pr(a)?this.thru(S):(w=w.slice(a,+a+(t?1:0)),w.__actions__.push({func:on,args:[S],thisArg:i}),new Qt(w,this.__chain__).thru(function(N){return t&&!N.length&&N.push(i),N}))});function Xc(){return Ea(this)}function Zc(){return new Qt(this.value(),this.__chain__)}function Jc(){this.__values__===i&&(this.__values__=Oa(this.value()));var e=this.__index__>=this.__values__.length,t=e?i:this.__values__[this.__index__++];return{done:e,value:t}}function Qc(){return this}function ed(e){for(var t,a=this;a instanceof Vi;){var w=ma(a);w.__index__=0,w.__values__=i,t?S.__wrapped__=w:t=w;var S=w;a=a.__wrapped__}return S.__wrapped__=e,t}function td(){var e=this.__wrapped__;if(e instanceof Ke){var t=e;return this.__actions__.length&&(t=new Ke(this)),t=t.reverse(),t.__actions__.push({func:on,args:[ao],thisArg:i}),new Qt(t,this.__chain__)}return this.thru(ao)}function rd(){return Fs(this.__wrapped__,this.__actions__)}var id=Xi(function(e,t,a){rt.call(e,a)?++e[a]:yr(e,a,1)});function nd(e,t,a){var w=Fe(e)?Zo:ql;return a&&kt(e,t,a)&&(t=i),w(e,xe(t,3))}function od(e,t){var a=Fe(e)?Cr:ws;return a(e,xe(t,3))}var sd=Ys(ha),ad=Ys(ya);function pd(e,t){return At(sn(e,t),1)}function ld(e,t){return At(sn(e,t),K)}function ud(e,t,a){return a=a===i?1:Be(a),At(sn(e,t),a)}function Ta(e,t){var a=Fe(e)?Zt:Dr;return a(e,xe(t,3))}function _a(e,t){var a=Fe(e)?Sp:Ps;return a(e,xe(t,3))}var cd=Xi(function(e,t,a){rt.call(e,a)?e[a].push(t):yr(e,a,[t])});function dd(e,t,a,w){e=Nt(e)?e:si(e),a=a&&!w?Be(a):0;var S=e.length;return a<0&&(a=Pt(S+a,0)),cn(e)?a<=S&&e.indexOf(t,a)>-1:!!S&&Yr(e,t,a)>-1}var gd=Ve(function(e,t,a){var w=-1,S=typeof t=="function",N=Nt(e)?ie(e.length):[];return Dr(e,function(V){N[++w]=S?Vt(t,V,a):yi(V,t,a)}),N}),fd=Xi(function(e,t,a){yr(e,a,t)});function sn(e,t){var a=Fe(e)?lt:Cs;return a(e,xe(t,3))}function md(e,t,a,w){return e==null?[]:(Fe(t)||(t=t==null?[]:[t]),a=w?i:a,Fe(a)||(a=a==null?[]:[a]),Ds(e,t,a))}var hd=Xi(function(e,t,a){e[a?0:1].push(t)},function(){return[[],[]]});function yd(e,t,a){var w=Fe(e)?Pn:ts,S=arguments.length<3;return w(e,xe(t,4),a,S,Dr)}function bd(e,t,a){var w=Fe(e)?xp:ts,S=arguments.length<3;return w(e,xe(t,4),a,S,Ps)}function vd(e,t){var a=Fe(e)?Cr:ws;return a(e,ln(xe(t,3)))}function Pd(e){var t=Fe(e)?hs:du;return t(e)}function wd(e,t,a){(a?kt(e,t,a):t===i)?t=1:t=Be(t);var w=Fe(e)?Vl:gu;return w(e,t)}function Ed(e){var t=Fe(e)?$l:mu;return t(e)}function Td(e){if(e==null)return 0;if(Nt(e))return cn(e)?Zr(e):e.length;var t=xt(e);return t==He||t==ye?e.size:Gn(e).length}function _d(e,t,a){var w=Fe(e)?wn:hu;return a&&kt(e,t,a)&&(t=i),w(e,xe(t,3))}var Ad=Ve(function(e,t){if(e==null)return[];var a=t.length;return a>1&&kt(e,t[0],t[1])?t=[]:a>2&&kt(t[0],t[1],t[2])&&(t=[t[0]]),Ds(e,At(t,1),[])}),an=ol||function(){return _t.Date.now()};function Rd(e,t){if(typeof t!="function")throw new Jt(l);return e=Be(e),function(){if(--e<1)return t.apply(this,arguments)}}function Aa(e,t,a){return t=a?i:t,t=e&&t==null?e.length:t,br(e,D,i,i,i,i,t)}function Ra(e,t){var a;if(typeof t!="function")throw new Jt(l);return e=Be(e),function(){return--e>0&&(a=t.apply(this,arguments)),e<=1&&(t=i),a}}var lo=Ve(function(e,t,a){var w=P;if(a.length){var S=Sr(a,ni(lo));w|=R}return br(e,w,t,a,S)}),Ca=Ve(function(e,t,a){var w=P|A;if(a.length){var S=Sr(a,ni(Ca));w|=R}return br(t,w,e,a,S)});function ja(e,t,a){t=a?i:t;var w=br(e,C,i,i,i,i,i,t);return w.placeholder=ja.placeholder,w}function Sa(e,t,a){t=a?i:t;var w=br(e,_,i,i,i,i,i,t);return w.placeholder=Sa.placeholder,w}function xa(e,t,a){var w,S,N,V,q,Q,ue=0,ce=!1,ge=!1,ve=!0;if(typeof e!="function")throw new Jt(l);t=ir(t)||0,ut(a)&&(ce=!!a.leading,ge="maxWait"in a,N=ge?Pt(ir(a.maxWait)||0,t):N,ve="trailing"in a?!!a.trailing:ve);function Re(ft){var pr=w,Tr=S;return w=S=i,ue=ft,V=e.apply(Tr,pr),V}function De(ft){return ue=ft,q=Ei(ze,t),ce?Re(ft):V}function Ue(ft){var pr=ft-Q,Tr=ft-ue,Ya=t-pr;return ge?St(Ya,N-Tr):Ya}function ke(ft){var pr=ft-Q,Tr=ft-ue;return Q===i||pr>=t||pr<0||ge&&Tr>=N}function ze(){var ft=an();if(ke(ft))return Ye(ft);q=Ei(ze,Ue(ft))}function Ye(ft){return q=i,ve&&w?Re(ft):(w=S=i,V)}function Kt(){q!==i&&Bs(q),ue=0,w=Q=S=q=i}function It(){return q===i?V:Ye(an())}function qt(){var ft=an(),pr=ke(ft);if(w=arguments,S=this,Q=ft,pr){if(q===i)return De(Q);if(ge)return Bs(q),q=Ei(ze,t),Re(Q)}return q===i&&(q=Ei(ze,t)),V}return qt.cancel=Kt,qt.flush=It,qt}var Cd=Ve(function(e,t){return vs(e,1,t)}),jd=Ve(function(e,t,a){return vs(e,ir(t)||0,a)});function Sd(e){return br(e,x)}function pn(e,t){if(typeof e!="function"||t!=null&&typeof t!="function")throw new Jt(l);var a=function(){var w=arguments,S=t?t.apply(this,w):w[0],N=a.cache;if(N.has(S))return N.get(S);var V=e.apply(this,w);return a.cache=N.set(S,V)||N,V};return a.cache=new(pn.Cache||hr),a}pn.Cache=hr;function ln(e){if(typeof e!="function")throw new Jt(l);return function(){var t=arguments;switch(t.length){case 0:return!e.call(this);case 1:return!e.call(this,t[0]);case 2:return!e.call(this,t[0],t[1]);case 3:return!e.call(this,t[0],t[1],t[2])}return!e.apply(this,t)}}function xd(e){return Ra(2,e)}var Dd=yu(function(e,t){t=t.length==1&&Fe(t[0])?lt(t[0],$t(xe())):lt(At(t,1),$t(xe()));var a=t.length;return Ve(function(w){for(var S=-1,N=St(w.length,a);++S<N;)w[S]=t[S].call(this,w[S]);return Vt(e,this,w)})}),uo=Ve(function(e,t){var a=Sr(t,ni(uo));return br(e,R,i,t,a)}),Da=Ve(function(e,t){var a=Sr(t,ni(Da));return br(e,j,i,t,a)}),kd=vr(function(e,t){return br(e,k,i,i,i,t)});function Id(e,t){if(typeof e!="function")throw new Jt(l);return t=t===i?t:Be(t),Ve(e,t)}function Ld(e,t){if(typeof e!="function")throw new Jt(l);return t=t==null?0:Pt(Be(t),0),Ve(function(a){var w=a[t],S=Lr(a,0,t);return w&&jr(S,w),Vt(e,this,S)})}function Md(e,t,a){var w=!0,S=!0;if(typeof e!="function")throw new Jt(l);return ut(a)&&(w="leading"in a?!!a.leading:w,S="trailing"in a?!!a.trailing:S),xa(e,t,{leading:w,maxWait:t,trailing:S})}function Od(e){return Aa(e,1)}function Nd(e,t){return uo(qn(t),e)}function Fd(){if(!arguments.length)return[];var e=arguments[0];return Fe(e)?e:[e]}function Gd(e){return er(e,g)}function Bd(e,t){return t=typeof t=="function"?t:i,er(e,g,t)}function Ud(e){return er(e,h|g)}function Hd(e,t){return t=typeof t=="function"?t:i,er(e,h|g,t)}function Vd(e,t){return t==null||bs(e,t,Tt(t))}function ar(e,t){return e===t||e!==e&&t!==t}var $d=en(On),zd=en(function(e,t){return e>=t}),Wr=_s(function(){return arguments}())?_s:function(e){return ct(e)&&rt.call(e,"callee")&&!us.call(e,"callee")},Fe=ie.isArray,Wd=zo?$t(zo):eu;function Nt(e){return e!=null&&un(e.length)&&!wr(e)}function gt(e){return ct(e)&&Nt(e)}function Kd(e){return e===!0||e===!1||ct(e)&&Dt(e)==dt}var Mr=al||Eo,qd=Wo?$t(Wo):tu;function Yd(e){return ct(e)&&e.nodeType===1&&!Ti(e)}function Xd(e){if(e==null)return!0;if(Nt(e)&&(Fe(e)||typeof e=="string"||typeof e.splice=="function"||Mr(e)||oi(e)||Wr(e)))return!e.length;var t=xt(e);if(t==He||t==ye)return!e.size;if(wi(e))return!Gn(e).length;for(var a in e)if(rt.call(e,a))return!1;return!0}function Zd(e,t){return bi(e,t)}function Jd(e,t,a){a=typeof a=="function"?a:i;var w=a?a(e,t):i;return w===i?bi(e,t,i,a):!!w}function co(e){if(!ct(e))return!1;var t=Dt(e);return t==Se||t==Rt||typeof e.message=="string"&&typeof e.name=="string"&&!Ti(e)}function Qd(e){return typeof e=="number"&&ds(e)}function wr(e){if(!ut(e))return!1;var t=Dt(e);return t==wt||t==Ge||t==mt||t==je}function ka(e){return typeof e=="number"&&e==Be(e)}function un(e){return typeof e=="number"&&e>-1&&e%1==0&&e<=W}function ut(e){var t=typeof e;return e!=null&&(t=="object"||t=="function")}function ct(e){return e!=null&&typeof e=="object"}var Ia=Ko?$t(Ko):iu;function eg(e,t){return e===t||Fn(e,t,to(t))}function tg(e,t,a){return a=typeof a=="function"?a:i,Fn(e,t,to(t),a)}function rg(e){return La(e)&&e!=+e}function ig(e){if(Bu(e))throw new Ne(c);return As(e)}function ng(e){return e===null}function og(e){return e==null}function La(e){return typeof e=="number"||ct(e)&&Dt(e)==Bt}function Ti(e){if(!ct(e)||Dt(e)!=le)return!1;var t=Oi(e);if(t===null)return!0;var a=rt.call(t,"constructor")&&t.constructor;return typeof a=="function"&&a instanceof a&&ki.call(a)==tl}var go=qo?$t(qo):nu;function sg(e){return ka(e)&&e>=-W&&e<=W}var Ma=Yo?$t(Yo):ou;function cn(e){return typeof e=="string"||!Fe(e)&&ct(e)&&Dt(e)==he}function Wt(e){return typeof e=="symbol"||ct(e)&&Dt(e)==we}var oi=Xo?$t(Xo):su;function ag(e){return e===i}function pg(e){return ct(e)&&xt(e)==qe}function lg(e){return ct(e)&&Dt(e)==Je}var ug=en(Bn),cg=en(function(e,t){return e<=t});function Oa(e){if(!e)return[];if(Nt(e))return cn(e)?or(e):Ot(e);if(ui&&e[ui])return Vp(e[ui]());var t=xt(e),a=t==He?Cn:t==ye?ji:si;return a(e)}function Er(e){if(!e)return e===0?e:0;if(e=ir(e),e===K||e===-K){var t=e<0?-1:1;return t*re}return e===e?e:0}function Be(e){var t=Er(e),a=t%1;return t===t?a?t-a:t:0}function Na(e){return e?Hr(Be(e),0,pe):0}function ir(e){if(typeof e=="number")return e;if(Wt(e))return ne;if(ut(e)){var t=typeof e.valueOf=="function"?e.valueOf():e;e=ut(t)?t+"":t}if(typeof e!="string")return e===0?e:+e;e=rs(e);var a=bt.test(e);return a||ot.test(e)?Rp(e.slice(2),a?2:8):Me.test(e)?ne:+e}function Fa(e){return cr(e,Ft(e))}function dg(e){return e?Hr(Be(e),-W,W):e===0?e:0}function tt(e){return e==null?"":zt(e)}var gg=ri(function(e,t){if(wi(t)||Nt(t)){cr(t,Tt(t),e);return}for(var a in t)rt.call(t,a)&&mi(e,a,t[a])}),Ga=ri(function(e,t){cr(t,Ft(t),e)}),dn=ri(function(e,t,a,w){cr(t,Ft(t),e,w)}),fg=ri(function(e,t,a,w){cr(t,Tt(t),e,w)}),mg=vr(In);function hg(e,t){var a=ti(e);return t==null?a:ys(a,t)}var yg=Ve(function(e,t){e=st(e);var a=-1,w=t.length,S=w>2?t[2]:i;for(S&&kt(t[0],t[1],S)&&(w=1);++a<w;)for(var N=t[a],V=Ft(N),q=-1,Q=V.length;++q<Q;){var ue=V[q],ce=e[ue];(ce===i||ar(ce,Jr[ue])&&!rt.call(e,ue))&&(e[ue]=N[ue])}return e}),bg=Ve(function(e){return e.push(i,ra),Vt(Ba,i,e)});function vg(e,t){return Jo(e,xe(t,3),ur)}function Pg(e,t){return Jo(e,xe(t,3),Mn)}function wg(e,t){return e==null?e:Ln(e,xe(t,3),Ft)}function Eg(e,t){return e==null?e:Es(e,xe(t,3),Ft)}function Tg(e,t){return e&&ur(e,xe(t,3))}function _g(e,t){return e&&Mn(e,xe(t,3))}function Ag(e){return e==null?[]:Wi(e,Tt(e))}function Rg(e){return e==null?[]:Wi(e,Ft(e))}function fo(e,t,a){var w=e==null?i:Vr(e,t);return w===i?a:w}function Cg(e,t){return e!=null&&oa(e,t,Xl)}function mo(e,t){return e!=null&&oa(e,t,Zl)}var jg=Zs(function(e,t,a){t!=null&&typeof t.toString!="function"&&(t=Ii.call(t)),e[t]=a},yo(Gt)),Sg=Zs(function(e,t,a){t!=null&&typeof t.toString!="function"&&(t=Ii.call(t)),rt.call(e,t)?e[t].push(a):e[t]=[a]},xe),xg=Ve(yi);function Tt(e){return Nt(e)?ms(e):Gn(e)}function Ft(e){return Nt(e)?ms(e,!0):au(e)}function Dg(e,t){var a={};return t=xe(t,3),ur(e,function(w,S,N){yr(a,t(w,S,N),w)}),a}function kg(e,t){var a={};return t=xe(t,3),ur(e,function(w,S,N){yr(a,S,t(w,S,N))}),a}var Ig=ri(function(e,t,a){Ki(e,t,a)}),Ba=ri(function(e,t,a,w){Ki(e,t,a,w)}),Lg=vr(function(e,t){var a={};if(e==null)return a;var w=!1;t=lt(t,function(N){return N=Ir(N,e),w||(w=N.length>1),N}),cr(e,Qn(e),a),w&&(a=er(a,h|d|g,ju));for(var S=t.length;S--;)zn(a,t[S]);return a});function Mg(e,t){return Ua(e,ln(xe(t)))}var Og=vr(function(e,t){return e==null?{}:lu(e,t)});function Ua(e,t){if(e==null)return{};var a=lt(Qn(e),function(w){return[w]});return t=xe(t),ks(e,a,function(w,S){return t(w,S[0])})}function Ng(e,t,a){t=Ir(t,e);var w=-1,S=t.length;for(S||(S=1,e=i);++w<S;){var N=e==null?i:e[dr(t[w])];N===i&&(w=S,N=a),e=wr(N)?N.call(e):N}return e}function Fg(e,t,a){return e==null?e:vi(e,t,a)}function Gg(e,t,a,w){return w=typeof w=="function"?w:i,e==null?e:vi(e,t,a,w)}var Ha=ea(Tt),Va=ea(Ft);function Bg(e,t,a){var w=Fe(e),S=w||Mr(e)||oi(e);if(t=xe(t,4),a==null){var N=e&&e.constructor;S?a=w?new N:[]:ut(e)?a=wr(N)?ti(Oi(e)):{}:a={}}return(S?Zt:ur)(e,function(V,q,Q){return t(a,V,q,Q)}),a}function Ug(e,t){return e==null?!0:zn(e,t)}function Hg(e,t,a){return e==null?e:Ns(e,t,qn(a))}function Vg(e,t,a,w){return w=typeof w=="function"?w:i,e==null?e:Ns(e,t,qn(a),w)}function si(e){return e==null?[]:Rn(e,Tt(e))}function $g(e){return e==null?[]:Rn(e,Ft(e))}function zg(e,t,a){return a===i&&(a=t,t=i),a!==i&&(a=ir(a),a=a===a?a:0),t!==i&&(t=ir(t),t=t===t?t:0),Hr(ir(e),t,a)}function Wg(e,t,a){return t=Er(t),a===i?(a=t,t=0):a=Er(a),e=ir(e),Jl(e,t,a)}function Kg(e,t,a){if(a&&typeof a!="boolean"&&kt(e,t,a)&&(t=a=i),a===i&&(typeof t=="boolean"?(a=t,t=i):typeof e=="boolean"&&(a=e,e=i)),e===i&&t===i?(e=0,t=1):(e=Er(e),t===i?(t=e,e=0):t=Er(t)),e>t){var w=e;e=t,t=w}if(a||e%1||t%1){var S=gs();return St(e+S*(t-e+Ap("1e-"+((S+"").length-1))),t)}return Hn(e,t)}var qg=ii(function(e,t,a){return t=t.toLowerCase(),e+(a?$a(t):t)});function $a(e){return ho(tt(e).toLowerCase())}function za(e){return e=tt(e),e&&e.replace(Fr,Fp).replace(mp,"")}function Yg(e,t,a){e=tt(e),t=zt(t);var w=e.length;a=a===i?w:Hr(Be(a),0,w);var S=a;return a-=t.length,a>=0&&e.slice(a,S)==t}function Xg(e){return e=tt(e),e&&Nr.test(e)?e.replace(Or,Gp):e}function Zg(e){return e=tt(e),e&&H.test(e)?e.replace(Y,"\\$&"):e}var Jg=ii(function(e,t,a){return e+(a?"-":"")+t.toLowerCase()}),Qg=ii(function(e,t,a){return e+(a?" ":"")+t.toLowerCase()}),ef=qs("toLowerCase");function tf(e,t,a){e=tt(e),t=Be(t);var w=t?Zr(e):0;if(!t||w>=t)return e;var S=(t-w)/2;return Qi(Bi(S),a)+e+Qi(Gi(S),a)}function rf(e,t,a){e=tt(e),t=Be(t);var w=t?Zr(e):0;return t&&w<t?e+Qi(t-w,a):e}function nf(e,t,a){e=tt(e),t=Be(t);var w=t?Zr(e):0;return t&&w<t?Qi(t-w,a)+e:e}function of(e,t,a){return a||t==null?t=0:t&&(t=+t),cl(tt(e).replace(Z,""),t||0)}function sf(e,t,a){return(a?kt(e,t,a):t===i)?t=1:t=Be(t),Vn(tt(e),t)}function af(){var e=arguments,t=tt(e[0]);return e.length<3?t:t.replace(e[1],e[2])}var pf=ii(function(e,t,a){return e+(a?"_":"")+t.toLowerCase()});function lf(e,t,a){return a&&typeof a!="number"&&kt(e,t,a)&&(t=a=i),a=a===i?pe:a>>>0,a?(e=tt(e),e&&(typeof t=="string"||t!=null&&!go(t))&&(t=zt(t),!t&&Xr(e))?Lr(or(e),0,a):e.split(t,a)):[]}var uf=ii(function(e,t,a){return e+(a?" ":"")+ho(t)});function cf(e,t,a){return e=tt(e),a=a==null?0:Hr(Be(a),0,e.length),t=zt(t),e.slice(a,a+t.length)==t}function df(e,t,a){var w=L.templateSettings;a&&kt(e,t,a)&&(t=i),e=tt(e),t=dn({},t,w,ta);var S=dn({},t.imports,w.imports,ta),N=Tt(S),V=Rn(S,N),q,Q,ue=0,ce=t.interpolate||Et,ge="__p += '",ve=jn((t.escape||Et).source+"|"+ce.source+"|"+(ce===Kr?We:Et).source+"|"+(t.evaluate||Et).source+"|$","g"),Re="//# sourceURL="+(rt.call(t,"sourceURL")?(t.sourceURL+"").replace(/\s/g," "):"lodash.templateSources["+ ++Pp+"]")+`
`;e.replace(ve,function(ke,ze,Ye,Kt,It,qt){return Ye||(Ye=Kt),ge+=e.slice(ue,qt).replace(Za,Bp),ze&&(q=!0,ge+=`' +
__e(`+ze+`) +
'`),It&&(Q=!0,ge+=`';
`+It+`;
__p += '`),Ye&&(ge+=`' +
((__t = (`+Ye+`)) == null ? '' : __t) +
'`),ue=qt+ke.length,ke}),ge+=`';
`;var De=rt.call(t,"variable")&&t.variable;if(!De)ge=`with (obj) {
`+ge+`
}
`;else if(Ae.test(De))throw new Ne(o);ge=(Q?ge.replace(Mt,""):ge).replace(fr,"$1").replace(yt,"$1;"),ge="function("+(De||"obj")+`) {
`+(De?"":`obj || (obj = {});
`)+"var __t, __p = ''"+(q?", __e = _.escape":"")+(Q?`, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
`:`;
`)+ge+`return __p
}`;var Ue=Ka(function(){return et(N,Re+"return "+ge).apply(i,V)});if(Ue.source=ge,co(Ue))throw Ue;return Ue}function gf(e){return tt(e).toLowerCase()}function ff(e){return tt(e).toUpperCase()}function mf(e,t,a){if(e=tt(e),e&&(a||t===i))return rs(e);if(!e||!(t=zt(t)))return e;var w=or(e),S=or(t),N=is(w,S),V=ns(w,S)+1;return Lr(w,N,V).join("")}function hf(e,t,a){if(e=tt(e),e&&(a||t===i))return e.slice(0,ss(e)+1);if(!e||!(t=zt(t)))return e;var w=or(e),S=ns(w,or(t))+1;return Lr(w,0,S).join("")}function yf(e,t,a){if(e=tt(e),e&&(a||t===i))return e.replace(Z,"");if(!e||!(t=zt(t)))return e;var w=or(e),S=is(w,or(t));return Lr(w,S).join("")}function bf(e,t){var a=I,w=G;if(ut(t)){var S="separator"in t?t.separator:S;a="length"in t?Be(t.length):a,w="omission"in t?zt(t.omission):w}e=tt(e);var N=e.length;if(Xr(e)){var V=or(e);N=V.length}if(a>=N)return e;var q=a-Zr(w);if(q<1)return w;var Q=V?Lr(V,0,q).join(""):e.slice(0,q);if(S===i)return Q+w;if(V&&(q+=Q.length-q),go(S)){if(e.slice(q).search(S)){var ue,ce=Q;for(S.global||(S=jn(S.source,tt(be.exec(S))+"g")),S.lastIndex=0;ue=S.exec(ce);)var ge=ue.index;Q=Q.slice(0,ge===i?q:ge)}}else if(e.indexOf(zt(S),q)!=q){var ve=Q.lastIndexOf(S);ve>-1&&(Q=Q.slice(0,ve))}return Q+w}function vf(e){return e=tt(e),e&&lr.test(e)?e.replace(Ar,Kp):e}var Pf=ii(function(e,t,a){return e+(a?" ":"")+t.toUpperCase()}),ho=qs("toUpperCase");function Wa(e,t,a){return e=tt(e),t=a?i:t,t===i?Hp(e)?Xp(e):Ip(e):e.match(t)||[]}var Ka=Ve(function(e,t){try{return Vt(e,i,t)}catch(a){return co(a)?a:new Ne(a)}}),wf=vr(function(e,t){return Zt(t,function(a){a=dr(a),yr(e,a,lo(e[a],e))}),e});function Ef(e){var t=e==null?0:e.length,a=xe();return e=t?lt(e,function(w){if(typeof w[1]!="function")throw new Jt(l);return[a(w[0]),w[1]]}):[],Ve(function(w){for(var S=-1;++S<t;){var N=e[S];if(Vt(N[0],this,w))return Vt(N[1],this,w)}})}function Tf(e){return Kl(er(e,h))}function yo(e){return function(){return e}}function _f(e,t){return e==null||e!==e?t:e}var Af=Xs(),Rf=Xs(!0);function Gt(e){return e}function bo(e){return Rs(typeof e=="function"?e:er(e,h))}function Cf(e){return js(er(e,h))}function jf(e,t){return Ss(e,er(t,h))}var Sf=Ve(function(e,t){return function(a){return yi(a,e,t)}}),xf=Ve(function(e,t){return function(a){return yi(e,a,t)}});function vo(e,t,a){var w=Tt(t),S=Wi(t,w);a==null&&!(ut(t)&&(S.length||!w.length))&&(a=t,t=e,e=this,S=Wi(t,Tt(t)));var N=!(ut(a)&&"chain"in a)||!!a.chain,V=wr(e);return Zt(S,function(q){var Q=t[q];e[q]=Q,V&&(e.prototype[q]=function(){var ue=this.__chain__;if(N||ue){var ce=e(this.__wrapped__),ge=ce.__actions__=Ot(this.__actions__);return ge.push({func:Q,args:arguments,thisArg:e}),ce.__chain__=ue,ce}return Q.apply(e,jr([this.value()],arguments))})}),e}function Df(){return _t._===this&&(_t._=rl),this}function Po(){}function kf(e){return e=Be(e),Ve(function(t){return xs(t,e)})}var If=Xn(lt),Lf=Xn(Zo),Mf=Xn(wn);function qa(e){return io(e)?En(dr(e)):uu(e)}function Of(e){return function(t){return e==null?i:Vr(e,t)}}var Nf=Js(),Ff=Js(!0);function wo(){return[]}function Eo(){return!1}function Gf(){return{}}function Bf(){return""}function Uf(){return!0}function Hf(e,t){if(e=Be(e),e<1||e>W)return[];var a=pe,w=St(e,pe);t=xe(t),e-=pe;for(var S=An(w,t);++a<e;)t(a);return S}function Vf(e){return Fe(e)?lt(e,dr):Wt(e)?[e]:Ot(fa(tt(e)))}function $f(e){var t=++el;return tt(e)+t}var zf=Ji(function(e,t){return e+t},0),Wf=Zn("ceil"),Kf=Ji(function(e,t){return e/t},1),qf=Zn("floor");function Yf(e){return e&&e.length?zi(e,Gt,On):i}function Xf(e,t){return e&&e.length?zi(e,xe(t,2),On):i}function Zf(e){return es(e,Gt)}function Jf(e,t){return es(e,xe(t,2))}function Qf(e){return e&&e.length?zi(e,Gt,Bn):i}function em(e,t){return e&&e.length?zi(e,xe(t,2),Bn):i}var tm=Ji(function(e,t){return e*t},1),rm=Zn("round"),im=Ji(function(e,t){return e-t},0);function nm(e){return e&&e.length?_n(e,Gt):0}function om(e,t){return e&&e.length?_n(e,xe(t,2)):0}return L.after=Rd,L.ary=Aa,L.assign=gg,L.assignIn=Ga,L.assignInWith=dn,L.assignWith=fg,L.at=mg,L.before=Ra,L.bind=lo,L.bindAll=wf,L.bindKey=Ca,L.castArray=Fd,L.chain=Ea,L.chunk=Ku,L.compact=qu,L.concat=Yu,L.cond=Ef,L.conforms=Tf,L.constant=yo,L.countBy=id,L.create=hg,L.curry=ja,L.curryRight=Sa,L.debounce=xa,L.defaults=yg,L.defaultsDeep=bg,L.defer=Cd,L.delay=jd,L.difference=Xu,L.differenceBy=Zu,L.differenceWith=Ju,L.drop=Qu,L.dropRight=ec,L.dropRightWhile=tc,L.dropWhile=rc,L.fill=ic,L.filter=od,L.flatMap=pd,L.flatMapDeep=ld,L.flatMapDepth=ud,L.flatten=ba,L.flattenDeep=nc,L.flattenDepth=oc,L.flip=Sd,L.flow=Af,L.flowRight=Rf,L.fromPairs=sc,L.functions=Ag,L.functionsIn=Rg,L.groupBy=cd,L.initial=pc,L.intersection=lc,L.intersectionBy=uc,L.intersectionWith=cc,L.invert=jg,L.invertBy=Sg,L.invokeMap=gd,L.iteratee=bo,L.keyBy=fd,L.keys=Tt,L.keysIn=Ft,L.map=sn,L.mapKeys=Dg,L.mapValues=kg,L.matches=Cf,L.matchesProperty=jf,L.memoize=pn,L.merge=Ig,L.mergeWith=Ba,L.method=Sf,L.methodOf=xf,L.mixin=vo,L.negate=ln,L.nthArg=kf,L.omit=Lg,L.omitBy=Mg,L.once=xd,L.orderBy=md,L.over=If,L.overArgs=Dd,L.overEvery=Lf,L.overSome=Mf,L.partial=uo,L.partialRight=Da,L.partition=hd,L.pick=Og,L.pickBy=Ua,L.property=qa,L.propertyOf=Of,L.pull=mc,L.pullAll=Pa,L.pullAllBy=hc,L.pullAllWith=yc,L.pullAt=bc,L.range=Nf,L.rangeRight=Ff,L.rearg=kd,L.reject=vd,L.remove=vc,L.rest=Id,L.reverse=ao,L.sampleSize=wd,L.set=Fg,L.setWith=Gg,L.shuffle=Ed,L.slice=Pc,L.sortBy=Ad,L.sortedUniq=Cc,L.sortedUniqBy=jc,L.split=lf,L.spread=Ld,L.tail=Sc,L.take=xc,L.takeRight=Dc,L.takeRightWhile=kc,L.takeWhile=Ic,L.tap=qc,L.throttle=Md,L.thru=on,L.toArray=Oa,L.toPairs=Ha,L.toPairsIn=Va,L.toPath=Vf,L.toPlainObject=Fa,L.transform=Bg,L.unary=Od,L.union=Lc,L.unionBy=Mc,L.unionWith=Oc,L.uniq=Nc,L.uniqBy=Fc,L.uniqWith=Gc,L.unset=Ug,L.unzip=po,L.unzipWith=wa,L.update=Hg,L.updateWith=Vg,L.values=si,L.valuesIn=$g,L.without=Bc,L.words=Wa,L.wrap=Nd,L.xor=Uc,L.xorBy=Hc,L.xorWith=Vc,L.zip=$c,L.zipObject=zc,L.zipObjectDeep=Wc,L.zipWith=Kc,L.entries=Ha,L.entriesIn=Va,L.extend=Ga,L.extendWith=dn,vo(L,L),L.add=zf,L.attempt=Ka,L.camelCase=qg,L.capitalize=$a,L.ceil=Wf,L.clamp=zg,L.clone=Gd,L.cloneDeep=Ud,L.cloneDeepWith=Hd,L.cloneWith=Bd,L.conformsTo=Vd,L.deburr=za,L.defaultTo=_f,L.divide=Kf,L.endsWith=Yg,L.eq=ar,L.escape=Xg,L.escapeRegExp=Zg,L.every=nd,L.find=sd,L.findIndex=ha,L.findKey=vg,L.findLast=ad,L.findLastIndex=ya,L.findLastKey=Pg,L.floor=qf,L.forEach=Ta,L.forEachRight=_a,L.forIn=wg,L.forInRight=Eg,L.forOwn=Tg,L.forOwnRight=_g,L.get=fo,L.gt=$d,L.gte=zd,L.has=Cg,L.hasIn=mo,L.head=va,L.identity=Gt,L.includes=dd,L.indexOf=ac,L.inRange=Wg,L.invoke=xg,L.isArguments=Wr,L.isArray=Fe,L.isArrayBuffer=Wd,L.isArrayLike=Nt,L.isArrayLikeObject=gt,L.isBoolean=Kd,L.isBuffer=Mr,L.isDate=qd,L.isElement=Yd,L.isEmpty=Xd,L.isEqual=Zd,L.isEqualWith=Jd,L.isError=co,L.isFinite=Qd,L.isFunction=wr,L.isInteger=ka,L.isLength=un,L.isMap=Ia,L.isMatch=eg,L.isMatchWith=tg,L.isNaN=rg,L.isNative=ig,L.isNil=og,L.isNull=ng,L.isNumber=La,L.isObject=ut,L.isObjectLike=ct,L.isPlainObject=Ti,L.isRegExp=go,L.isSafeInteger=sg,L.isSet=Ma,L.isString=cn,L.isSymbol=Wt,L.isTypedArray=oi,L.isUndefined=ag,L.isWeakMap=pg,L.isWeakSet=lg,L.join=dc,L.kebabCase=Jg,L.last=rr,L.lastIndexOf=gc,L.lowerCase=Qg,L.lowerFirst=ef,L.lt=ug,L.lte=cg,L.max=Yf,L.maxBy=Xf,L.mean=Zf,L.meanBy=Jf,L.min=Qf,L.minBy=em,L.stubArray=wo,L.stubFalse=Eo,L.stubObject=Gf,L.stubString=Bf,L.stubTrue=Uf,L.multiply=tm,L.nth=fc,L.noConflict=Df,L.noop=Po,L.now=an,L.pad=tf,L.padEnd=rf,L.padStart=nf,L.parseInt=of,L.random=Kg,L.reduce=yd,L.reduceRight=bd,L.repeat=sf,L.replace=af,L.result=Ng,L.round=rm,L.runInContext=J,L.sample=Pd,L.size=Td,L.snakeCase=pf,L.some=_d,L.sortedIndex=wc,L.sortedIndexBy=Ec,L.sortedIndexOf=Tc,L.sortedLastIndex=_c,L.sortedLastIndexBy=Ac,L.sortedLastIndexOf=Rc,L.startCase=uf,L.startsWith=cf,L.subtract=im,L.sum=nm,L.sumBy=om,L.template=df,L.times=Hf,L.toFinite=Er,L.toInteger=Be,L.toLength=Na,L.toLower=gf,L.toNumber=ir,L.toSafeInteger=dg,L.toString=tt,L.toUpper=ff,L.trim=mf,L.trimEnd=hf,L.trimStart=yf,L.truncate=bf,L.unescape=vf,L.uniqueId=$f,L.upperCase=Pf,L.upperFirst=ho,L.each=Ta,L.eachRight=_a,L.first=va,vo(L,function(){var e={};return ur(L,function(t,a){rt.call(L.prototype,a)||(e[a]=t)}),e}(),{chain:!1}),L.VERSION=r,Zt(["bind","bindKey","curry","curryRight","partial","partialRight"],function(e){L[e].placeholder=L}),Zt(["drop","take"],function(e,t){Ke.prototype[e]=function(a){a=a===i?1:Pt(Be(a),0);var w=this.__filtered__&&!t?new Ke(this):this.clone();return w.__filtered__?w.__takeCount__=St(a,w.__takeCount__):w.__views__.push({size:St(a,pe),type:e+(w.__dir__<0?"Right":"")}),w},Ke.prototype[e+"Right"]=function(a){return this.reverse()[e](a).reverse()}}),Zt(["filter","map","takeWhile"],function(e,t){var a=t+1,w=a==B||a==F;Ke.prototype[e]=function(S){var N=this.clone();return N.__iteratees__.push({iteratee:xe(S,3),type:a}),N.__filtered__=N.__filtered__||w,N}}),Zt(["head","last"],function(e,t){var a="take"+(t?"Right":"");Ke.prototype[e]=function(){return this[a](1).value()[0]}}),Zt(["initial","tail"],function(e,t){var a="drop"+(t?"":"Right");Ke.prototype[e]=function(){return this.__filtered__?new Ke(this):this[a](1)}}),Ke.prototype.compact=function(){return this.filter(Gt)},Ke.prototype.find=function(e){return this.filter(e).head()},Ke.prototype.findLast=function(e){return this.reverse().find(e)},Ke.prototype.invokeMap=Ve(function(e,t){return typeof e=="function"?new Ke(this):this.map(function(a){return yi(a,e,t)})}),Ke.prototype.reject=function(e){return this.filter(ln(xe(e)))},Ke.prototype.slice=function(e,t){e=Be(e);var a=this;return a.__filtered__&&(e>0||t<0)?new Ke(a):(e<0?a=a.takeRight(-e):e&&(a=a.drop(e)),t!==i&&(t=Be(t),a=t<0?a.dropRight(-t):a.take(t-e)),a)},Ke.prototype.takeRightWhile=function(e){return this.reverse().takeWhile(e).reverse()},Ke.prototype.toArray=function(){return this.take(pe)},ur(Ke.prototype,function(e,t){var a=/^(?:filter|find|map|reject)|While$/.test(t),w=/^(?:head|last)$/.test(t),S=L[w?"take"+(t=="last"?"Right":""):t],N=w||/^find/.test(t);!S||(L.prototype[t]=function(){var V=this.__wrapped__,q=w?[1]:arguments,Q=V instanceof Ke,ue=q[0],ce=Q||Fe(V),ge=function(ze){var Ye=S.apply(L,jr([ze],q));return w&&ve?Ye[0]:Ye};ce&&a&&typeof ue=="function"&&ue.length!=1&&(Q=ce=!1);var ve=this.__chain__,Re=!!this.__actions__.length,De=N&&!ve,Ue=Q&&!Re;if(!N&&ce){V=Ue?V:new Ke(this);var ke=e.apply(V,q);return ke.__actions__.push({func:on,args:[ge],thisArg:i}),new Qt(ke,ve)}return De&&Ue?e.apply(this,q):(ke=this.thru(ge),De?w?ke.value()[0]:ke.value():ke)})}),Zt(["pop","push","shift","sort","splice","unshift"],function(e){var t=xi[e],a=/^(?:push|sort|unshift)$/.test(e)?"tap":"thru",w=/^(?:pop|shift)$/.test(e);L.prototype[e]=function(){var S=arguments;if(w&&!this.__chain__){var N=this.value();return t.apply(Fe(N)?N:[],S)}return this[a](function(V){return t.apply(Fe(V)?V:[],S)})}}),ur(Ke.prototype,function(e,t){var a=L[t];if(a){var w=a.name+"";rt.call(ei,w)||(ei[w]=[]),ei[w].push({name:t,func:a})}}),ei[Zi(i,A).name]=[{name:"wrapper",func:i}],Ke.prototype.clone=bl,Ke.prototype.reverse=vl,Ke.prototype.value=Pl,L.prototype.at=Yc,L.prototype.chain=Xc,L.prototype.commit=Zc,L.prototype.next=Jc,L.prototype.plant=ed,L.prototype.reverse=td,L.prototype.toJSON=L.prototype.valueOf=L.prototype.value=rd,L.prototype.first=L.prototype.head,ui&&(L.prototype[ui]=Qc),L},Si=Zp();_t._=Si,f=function(){return Si}.call(b,s,b,T),f!==i&&(T.exports=f)}).call(this)},7874:()=>{(function(T){var b="\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\b",s={pattern:/(^(["']?)\w+\2)[ \t]+\S.*/,lookbehind:!0,alias:"punctuation",inside:null},f={bash:s,environment:{pattern:RegExp("\\$"+b),alias:"constant"},variable:[{pattern:/\$?\(\([\s\S]+?\)\)/,greedy:!0,inside:{variable:[{pattern:/(^\$\(\([\s\S]+)\)\)/,lookbehind:!0},/^\$\(\(/],number:/\b0x[\dA-Fa-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:[Ee]-?\d+)?/,operator:/--|\+\+|\*\*=?|<<=?|>>=?|&&|\|\||[=!+\-*/%<>^&|]=?|[?~:]/,punctuation:/\(\(?|\)\)?|,|;/}},{pattern:/\$\((?:\([^)]+\)|[^()])+\)|`[^`]+`/,greedy:!0,inside:{variable:/^\$\(|^`|\)$|`$/}},{pattern:/\$\{[^}]+\}/,greedy:!0,inside:{operator:/:[-=?+]?|[!\/]|##?|%%?|\^\^?|,,?/,punctuation:/[\[\]]/,environment:{pattern:RegExp("(\\{)"+b),lookbehind:!0,alias:"constant"}}},/\$(?:\w+|[#?*!@$])/],entity:/\\(?:[abceEfnrtv\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/};T.languages.bash={shebang:{pattern:/^#!\s*\/.*/,alias:"important"},comment:{pattern:/(^|[^"{\\$])#.*/,lookbehind:!0},"function-name":[{pattern:/(\bfunction\s+)[\w-]+(?=(?:\s*\(?:\s*\))?\s*\{)/,lookbehind:!0,alias:"function"},{pattern:/\b[\w-]+(?=\s*\(\s*\)\s*\{)/,alias:"function"}],"for-or-select":{pattern:/(\b(?:for|select)\s+)\w+(?=\s+in\s)/,alias:"variable",lookbehind:!0},"assign-left":{pattern:/(^|[\s;|&]|[<>]\()\w+(?:\.\w+)*(?=\+?=)/,inside:{environment:{pattern:RegExp("(^|[\\s;|&]|[<>]\\()"+b),lookbehind:!0,alias:"constant"}},alias:"variable",lookbehind:!0},parameter:{pattern:/(^|\s)-{1,2}(?:\w+:[+-]?)?\w+(?:\.\w+)*(?=[=\s]|$)/,alias:"variable",lookbehind:!0},string:[{pattern:/((?:^|[^<])<<-?\s*)(\w+)\s[\s\S]*?(?:\r?\n|\r)\2/,lookbehind:!0,greedy:!0,inside:f},{pattern:/((?:^|[^<])<<-?\s*)(["'])(\w+)\2\s[\s\S]*?(?:\r?\n|\r)\3/,lookbehind:!0,greedy:!0,inside:{bash:s}},{pattern:/(^|[^\\](?:\\\\)*)"(?:\\[\s\S]|\$\([^)]+\)|\$(?!\()|`[^`]+`|[^"\\`$])*"/,lookbehind:!0,greedy:!0,inside:f},{pattern:/(^|[^$\\])'[^']*'/,lookbehind:!0,greedy:!0},{pattern:/\$'(?:[^'\\]|\\[\s\S])*'/,greedy:!0,inside:{entity:f.entity}}],environment:{pattern:RegExp("\\$?"+b),alias:"constant"},variable:f.variable,function:{pattern:/(^|[\s;|&]|[<>]\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cargo|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|java|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|sysctl|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\s;|&])/,lookbehind:!0},keyword:{pattern:/(^|[\s;|&]|[<>]\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\s;|&])/,lookbehind:!0},builtin:{pattern:/(^|[\s;|&]|[<>]\()(?:\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\s;|&])/,lookbehind:!0,alias:"class-name"},boolean:{pattern:/(^|[\s;|&]|[<>]\()(?:false|true)(?=$|[)\s;|&])/,lookbehind:!0},"file-descriptor":{pattern:/\B&\d\b/,alias:"important"},operator:{pattern:/\d?<>|>\||\+=|=[=~]?|!=?|<<[<-]?|[&\d]?>>|\d[<>]&?|[<>][&=]?|&[>&]?|\|[&|]?/,inside:{"file-descriptor":{pattern:/^\d/,alias:"important"}}},punctuation:/\$?\(\(?|\)\)?|\.\.|[{}[\];\\]/,number:{pattern:/(^|\s)(?:[1-9]\d*|0)(?:[.,]\d+)?\b/,lookbehind:!0}},s.inside=T.languages.bash;for(var i=["comment","function-name","for-or-select","assign-left","parameter","string","environment","function","keyword","builtin","boolean","file-descriptor","operator","punctuation","number"],r=f.variable[1].inside,p=0;p<i.length;p++)r[i[p]]=T.languages.bash[i[p]];T.languages.sh=T.languages.bash,T.languages.shell=T.languages.bash})(Prism)},57:()=>{(function(T){function b(o){return RegExp("(^(?:"+o+"):[ 	]*(?![ 	]))[^]+","i")}T.languages.http={"request-line":{pattern:/^(?:CONNECT|DELETE|GET|HEAD|OPTIONS|PATCH|POST|PRI|PUT|SEARCH|TRACE)\s(?:https?:\/\/|\/)\S*\sHTTP\/[\d.]+/m,inside:{method:{pattern:/^[A-Z]+\b/,alias:"property"},"request-target":{pattern:/^(\s)(?:https?:\/\/|\/)\S*(?=\s)/,lookbehind:!0,alias:"url",inside:T.languages.uri},"http-version":{pattern:/^(\s)HTTP\/[\d.]+/,lookbehind:!0,alias:"property"}}},"response-status":{pattern:/^HTTP\/[\d.]+ \d+ .+/m,inside:{"http-version":{pattern:/^HTTP\/[\d.]+/,alias:"property"},"status-code":{pattern:/^(\s)\d+(?=\s)/,lookbehind:!0,alias:"number"},"reason-phrase":{pattern:/^(\s).+/,lookbehind:!0,alias:"string"}}},header:{pattern:/^[\w-]+:.+(?:(?:\r\n?|\n)[ \t].+)*/m,inside:{"header-value":[{pattern:b(/Content-Security-Policy/.source),lookbehind:!0,alias:["csp","languages-csp"],inside:T.languages.csp},{pattern:b(/Public-Key-Pins(?:-Report-Only)?/.source),lookbehind:!0,alias:["hpkp","languages-hpkp"],inside:T.languages.hpkp},{pattern:b(/Strict-Transport-Security/.source),lookbehind:!0,alias:["hsts","languages-hsts"],inside:T.languages.hsts},{pattern:b(/[^:]+/.source),lookbehind:!0}],"header-name":{pattern:/^[^:]+/,alias:"keyword"},punctuation:/^:/}}};var s=T.languages,f={"application/javascript":s.javascript,"application/json":s.json||s.javascript,"application/xml":s.xml,"text/xml":s.xml,"text/html":s.html,"text/css":s.css,"text/plain":s.plain},i={"application/json":!0,"application/xml":!0};function r(o){var u=o.replace(/^[a-z]+\//,""),m="\\w+/(?:[\\w.-]+\\+)+"+u+"(?![+\\w.-])";return"(?:"+o+"|"+m+")"}var p;for(var c in f)if(f[c]){p=p||{};var l=i[c]?r(c):c;p[c.replace(/\//g,"-")]={pattern:RegExp("("+/content-type:\s*/.source+l+/(?:(?:\r\n?|\n)[\w-].*)*(?:\r(?:\n|(?!\n))|\n)/.source+")"+/[^ \t\w-][\s\S]*/.source,"i"),lookbehind:!0,inside:f[c]}}p&&T.languages.insertBefore("http","header",p)})(Prism)},4277:()=>{Prism.languages.json={property:{pattern:/(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?=\s*:)/,lookbehind:!0,greedy:!0},string:{pattern:/(^|[^\\])"(?:\\.|[^\\"\r\n])*"(?!\s*:)/,lookbehind:!0,greedy:!0},comment:{pattern:/\/\/.*|\/\*[\s\S]*?(?:\*\/|$)/,greedy:!0},number:/-?\b\d+(?:\.\d+)?(?:e[+-]?\d+)?\b/i,punctuation:/[{}[\],]/,operator:/:/,boolean:/\b(?:false|true)\b/,null:{pattern:/\bnull\b/,alias:"keyword"}},Prism.languages.webmanifest=Prism.languages.json},366:()=>{Prism.languages.python={comment:{pattern:/(^|[^\\])#.*/,lookbehind:!0,greedy:!0},"string-interpolation":{pattern:/(?:f|fr|rf)(?:("""|''')[\s\S]*?\1|("|')(?:\\.|(?!\2)[^\\\r\n])*\2)/i,greedy:!0,inside:{interpolation:{pattern:/((?:^|[^{])(?:\{\{)*)\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}]|\{(?!\{)(?:[^{}])+\})+\})+\}/,lookbehind:!0,inside:{"format-spec":{pattern:/(:)[^:(){}]+(?=\}$)/,lookbehind:!0},"conversion-option":{pattern:/![sra](?=[:}]$)/,alias:"punctuation"},rest:null}},string:/[\s\S]+/}},"triple-quoted-string":{pattern:/(?:[rub]|br|rb)?("""|''')[\s\S]*?\1/i,greedy:!0,alias:"string"},string:{pattern:/(?:[rub]|br|rb)?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/i,greedy:!0},function:{pattern:/((?:^|\s)def[ \t]+)[a-zA-Z_]\w*(?=\s*\()/g,lookbehind:!0},"class-name":{pattern:/(\bclass\s+)\w+/i,lookbehind:!0},decorator:{pattern:/(^[\t ]*)@\w+(?:\.\w+)*/m,lookbehind:!0,alias:["annotation","punctuation"],inside:{punctuation:/\./}},keyword:/\b(?:_(?=\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\b/,builtin:/\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\b/,boolean:/\b(?:False|None|True)\b/,number:/\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\b|(?:\b\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\B\.\d+(?:_\d+)*)(?:e[+-]?\d+(?:_\d+)*)?j?(?!\w)/i,operator:/[-+%=]=?|!=|:=|\*\*?=?|\/\/?=?|<[<=>]?|>[=>]?|[&|^~]/,punctuation:/[{}[\];(),.:]/},Prism.languages.python["string-interpolation"].inside.interpolation.inside.rest=Prism.languages.python,Prism.languages.py=Prism.languages.python},5660:(T,b,s)=>{var f=typeof window!="undefined"?window:typeof WorkerGlobalScope!="undefined"&&self instanceof WorkerGlobalScope?self:{};/**
 * Prism: Lightweight, robust, elegant syntax highlighting
 *
 * @license MIT <https://opensource.org/licenses/MIT>
 * @author Lea Verou <https://lea.verou.me>
 * @namespace
 * @public
 */var i=function(r){var p=/(?:^|\s)lang(?:uage)?-([\w-]+)(?=\s|$)/i,c=0,l={},o={manual:r.Prism&&r.Prism.manual,disableWorkerMessageHandler:r.Prism&&r.Prism.disableWorkerMessageHandler,util:{encode:function E(C){return C instanceof u?new u(C.type,E(C.content),C.alias):Array.isArray(C)?C.map(E):C.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ")},type:function(E){return Object.prototype.toString.call(E).slice(8,-1)},objId:function(E){return E.__id||Object.defineProperty(E,"__id",{value:++c}),E.__id},clone:function E(C,_){_=_||{};var R,j;switch(o.util.type(C)){case"Object":if(j=o.util.objId(C),_[j])return _[j];R={},_[j]=R;for(var D in C)C.hasOwnProperty(D)&&(R[D]=E(C[D],_));return R;case"Array":return j=o.util.objId(C),_[j]?_[j]:(R=[],_[j]=R,C.forEach(function(k,x){R[x]=E(k,_)}),R);default:return C}},getLanguage:function(E){for(;E;){var C=p.exec(E.className);if(C)return C[1].toLowerCase();E=E.parentElement}return"none"},setLanguage:function(E,C){E.className=E.className.replace(RegExp(p,"gi"),""),E.classList.add("language-"+C)},currentScript:function(){if(typeof document=="undefined")return null;if("currentScript"in document&&1<2)return document.currentScript;try{throw new Error}catch(R){var E=(/at [^(\r\n]*\((.*):[^:]+:[^:]+\)$/i.exec(R.stack)||[])[1];if(E){var C=document.getElementsByTagName("script");for(var _ in C)if(C[_].src==E)return C[_]}return null}},isActive:function(E,C,_){for(var R="no-"+C;E;){var j=E.classList;if(j.contains(C))return!0;if(j.contains(R))return!1;E=E.parentElement}return!!_}},languages:{plain:l,plaintext:l,text:l,txt:l,extend:function(E,C){var _=o.util.clone(o.languages[E]);for(var R in C)_[R]=C[R];return _},insertBefore:function(E,C,_,R){R=R||o.languages;var j=R[E],D={};for(var k in j)if(j.hasOwnProperty(k)){if(k==C)for(var x in _)_.hasOwnProperty(x)&&(D[x]=_[x]);_.hasOwnProperty(k)||(D[k]=j[k])}var I=R[E];return R[E]=D,o.languages.DFS(o.languages,function(G,O){O===I&&G!=E&&(this[G]=D)}),D},DFS:function E(C,_,R,j){j=j||{};var D=o.util.objId;for(var k in C)if(C.hasOwnProperty(k)){_.call(C,k,C[k],R||k);var x=C[k],I=o.util.type(x);I==="Object"&&!j[D(x)]?(j[D(x)]=!0,E(x,_,null,j)):I==="Array"&&!j[D(x)]&&(j[D(x)]=!0,E(x,_,k,j))}}},plugins:{},highlightAll:function(E,C){o.highlightAllUnder(document,E,C)},highlightAllUnder:function(E,C,_){var R={callback:_,container:E,selector:'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'};o.hooks.run("before-highlightall",R),R.elements=Array.prototype.slice.apply(R.container.querySelectorAll(R.selector)),o.hooks.run("before-all-elements-highlight",R);for(var j=0,D;D=R.elements[j++];)o.highlightElement(D,C===!0,R.callback)},highlightElement:function(E,C,_){var R=o.util.getLanguage(E),j=o.languages[R];o.util.setLanguage(E,R);var D=E.parentElement;D&&D.nodeName.toLowerCase()==="pre"&&o.util.setLanguage(D,R);var k=E.textContent,x={element:E,language:R,grammar:j,code:k};function I(O){x.highlightedCode=O,o.hooks.run("before-insert",x),x.element.innerHTML=x.highlightedCode,o.hooks.run("after-highlight",x),o.hooks.run("complete",x),_&&_.call(x.element)}if(o.hooks.run("before-sanity-check",x),D=x.element.parentElement,D&&D.nodeName.toLowerCase()==="pre"&&!D.hasAttribute("tabindex")&&D.setAttribute("tabindex","0"),!x.code){o.hooks.run("complete",x),_&&_.call(x.element);return}if(o.hooks.run("before-highlight",x),!x.grammar){I(o.util.encode(x.code));return}if(C&&r.Worker){var G=new Worker(o.filename);G.onmessage=function(O){I(O.data)},G.postMessage(JSON.stringify({language:x.language,code:x.code,immediateClose:!0}))}else I(o.highlight(x.code,x.grammar,x.language))},highlight:function(E,C,_){var R={code:E,grammar:C,language:_};if(o.hooks.run("before-tokenize",R),!R.grammar)throw new Error('The language "'+R.language+'" has no grammar.');return R.tokens=o.tokenize(R.code,R.grammar),o.hooks.run("after-tokenize",R),u.stringify(o.util.encode(R.tokens),R.language)},tokenize:function(E,C){var _=C.rest;if(_){for(var R in _)C[R]=_[R];delete C.rest}var j=new h;return d(j,j.head,E),n(E,j,C,j.head,0),v(j)},hooks:{all:{},add:function(E,C){var _=o.hooks.all;_[E]=_[E]||[],_[E].push(C)},run:function(E,C){var _=o.hooks.all[E];if(!(!_||!_.length))for(var R=0,j;j=_[R++];)j(C)}},Token:u};r.Prism=o;function u(E,C,_,R){this.type=E,this.content=C,this.alias=_,this.length=(R||"").length|0}u.stringify=function E(C,_){if(typeof C=="string")return C;if(Array.isArray(C)){var R="";return C.forEach(function(I){R+=E(I,_)}),R}var j={type:C.type,content:E(C.content,_),tag:"span",classes:["token",C.type],attributes:{},language:_},D=C.alias;D&&(Array.isArray(D)?Array.prototype.push.apply(j.classes,D):j.classes.push(D)),o.hooks.run("wrap",j);var k="";for(var x in j.attributes)k+=" "+x+'="'+(j.attributes[x]||"").replace(/"/g,"&quot;")+'"';return"<"+j.tag+' class="'+j.classes.join(" ")+'"'+k+">"+j.content+"</"+j.tag+">"};function m(E,C,_,R){E.lastIndex=C;var j=E.exec(_);if(j&&R&&j[1]){var D=j[1].length;j.index+=D,j[0]=j[0].slice(D)}return j}function n(E,C,_,R,j,D){for(var k in _)if(!(!_.hasOwnProperty(k)||!_[k])){var x=_[k];x=Array.isArray(x)?x:[x];for(var I=0;I<x.length;++I){if(D&&D.cause==k+","+I)return;var G=x[I],O=G.inside,U=!!G.lookbehind,B=!!G.greedy,z=G.alias;if(B&&!G.pattern.global){var F=G.pattern.toString().match(/[imsuy]*$/)[0];G.pattern=RegExp(G.pattern.source,F+"g")}for(var K=G.pattern||G,W=R.next,re=j;W!==C.tail&&!(D&&re>=D.reach);re+=W.value.length,W=W.next){var ne=W.value;if(C.length>E.length)return;if(!(ne instanceof u)){var pe=1,te;if(B){if(te=m(K,re,E,U),!te||te.index>=E.length)break;var nt=te.index,fe=te.index+te[0].length,Pe=re;for(Pe+=W.value.length;nt>=Pe;)W=W.next,Pe+=W.value.length;if(Pe-=W.value.length,re=Pe,W.value instanceof u)continue;for(var Le=W;Le!==C.tail&&(Pe<fe||typeof Le.value=="string");Le=Le.next)pe++,Pe+=Le.value.length;pe--,ne=E.slice(re,Pe),te.index-=re}else if(te=m(K,0,ne,U),!te)continue;var nt=te.index,mt=te[0],dt=ne.slice(0,nt),ht=ne.slice(nt+mt.length),Rt=re+ne.length;D&&Rt>D.reach&&(D.reach=Rt);var Se=W.prev;dt&&(Se=d(C,Se,dt),re+=dt.length),g(C,Se,pe);var wt=new u(k,O?o.tokenize(mt,O):mt,z,mt);if(W=d(C,Se,wt),ht&&d(C,W,ht),pe>1){var Ge={cause:k+","+I,reach:Rt};n(E,C,_,W.prev,re,Ge),D&&Ge.reach>D.reach&&(D.reach=Ge.reach)}}}}}}function h(){var E={value:null,prev:null,next:null},C={value:null,prev:E,next:null};E.next=C,this.head=E,this.tail=C,this.length=0}function d(E,C,_){var R=C.next,j={value:_,prev:C,next:R};return C.next=j,R.prev=j,E.length++,j}function g(E,C,_){for(var R=C.next,j=0;j<_&&R!==E.tail;j++)R=R.next;C.next=R,R.prev=C,E.length-=j}function v(E){for(var C=[],_=E.head.next;_!==E.tail;)C.push(_.value),_=_.next;return C}if(!r.document)return r.addEventListener&&(o.disableWorkerMessageHandler||r.addEventListener("message",function(E){var C=JSON.parse(E.data),_=C.language,R=C.code,j=C.immediateClose;r.postMessage(o.highlight(R,o.languages[_],_)),j&&r.close()},!1)),o;var y=o.util.currentScript();y&&(o.filename=y.src,y.hasAttribute("data-manual")&&(o.manual=!0));function P(){o.manual||o.highlightAll()}if(!o.manual){var A=document.readyState;A==="loading"||A==="interactive"&&y&&y.defer?document.addEventListener("DOMContentLoaded",P):window.requestAnimationFrame?window.requestAnimationFrame(P):window.setTimeout(P,16)}return o}(f);T.exports&&(T.exports=i),typeof s.g!="undefined"&&(s.g.Prism=i),i.languages.markup={comment:{pattern:/<!--(?:(?!<!--)[\s\S])*?-->/,greedy:!0},prolog:{pattern:/<\?[\s\S]+?\?>/,greedy:!0},doctype:{pattern:/<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,greedy:!0,inside:{"internal-subset":{pattern:/(^[^\[]*\[)[\s\S]+(?=\]>$)/,lookbehind:!0,greedy:!0,inside:null},string:{pattern:/"[^"]*"|'[^']*'/,greedy:!0},punctuation:/^<!|>$|[[\]]/,"doctype-tag":/^DOCTYPE/i,name:/[^\s<>'"]+/}},cdata:{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,greedy:!0},tag:{pattern:/<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,greedy:!0,inside:{tag:{pattern:/^<\/?[^\s>\/]+/,inside:{punctuation:/^<\/?/,namespace:/^[^\s>\/:]+:/}},"special-attr":[],"attr-value":{pattern:/=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,inside:{punctuation:[{pattern:/^=/,alias:"attr-equals"},{pattern:/^(\s*)["']|["']$/,lookbehind:!0}]}},punctuation:/\/?>/,"attr-name":{pattern:/[^\s>\/]+/,inside:{namespace:/^[^\s>\/:]+:/}}}},entity:[{pattern:/&[\da-z]{1,8};/i,alias:"named-entity"},/&#x?[\da-f]{1,8};/i]},i.languages.markup.tag.inside["attr-value"].inside.entity=i.languages.markup.entity,i.languages.markup.doctype.inside["internal-subset"].inside=i.languages.markup,i.hooks.add("wrap",function(r){r.type==="entity"&&(r.attributes.title=r.content.replace(/&amp;/,"&"))}),Object.defineProperty(i.languages.markup.tag,"addInlined",{value:function(p,c){var l={};l["language-"+c]={pattern:/(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,lookbehind:!0,inside:i.languages[c]},l.cdata=/^<!\[CDATA\[|\]\]>$/i;var o={"included-cdata":{pattern:/<!\[CDATA\[[\s\S]*?\]\]>/i,inside:l}};o["language-"+c]={pattern:/[\s\S]+/,inside:i.languages[c]};var u={};u[p]={pattern:RegExp(/(<__[^>]*>)(?:<!\[CDATA\[(?:[^\]]|\](?!\]>))*\]\]>|(?!<!\[CDATA\[)[\s\S])*?(?=<\/__>)/.source.replace(/__/g,function(){return p}),"i"),lookbehind:!0,greedy:!0,inside:o},i.languages.insertBefore("markup","cdata",u)}}),Object.defineProperty(i.languages.markup.tag,"addAttribute",{value:function(r,p){i.languages.markup.tag.inside["special-attr"].push({pattern:RegExp(/(^|["'\s])/.source+"(?:"+r+")"+/\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))/.source,"i"),lookbehind:!0,inside:{"attr-name":/^[^\s=]+/,"attr-value":{pattern:/=[\s\S]+/,inside:{value:{pattern:/(^=\s*(["']|(?!["'])))\S[\s\S]*(?=\2$)/,lookbehind:!0,alias:[p,"language-"+p],inside:i.languages[p]},punctuation:[{pattern:/^=/,alias:"attr-equals"},/"|'/]}}}})}}),i.languages.html=i.languages.markup,i.languages.mathml=i.languages.markup,i.languages.svg=i.languages.markup,i.languages.xml=i.languages.extend("markup",{}),i.languages.ssml=i.languages.xml,i.languages.atom=i.languages.xml,i.languages.rss=i.languages.xml,function(r){var p=/(?:"(?:\\(?:\r\n|[\s\S])|[^"\\\r\n])*"|'(?:\\(?:\r\n|[\s\S])|[^'\\\r\n])*')/;r.languages.css={comment:/\/\*[\s\S]*?\*\//,atrule:{pattern:RegExp("@[\\w-](?:"+/[^;{\s"']|\s+(?!\s)/.source+"|"+p.source+")*?"+/(?:;|(?=\s*\{))/.source),inside:{rule:/^@[\w-]+/,"selector-function-argument":{pattern:/(\bselector\s*\(\s*(?![\s)]))(?:[^()\s]|\s+(?![\s)])|\((?:[^()]|\([^()]*\))*\))+(?=\s*\))/,lookbehind:!0,alias:"selector"},keyword:{pattern:/(^|[^\w-])(?:and|not|only|or)(?![\w-])/,lookbehind:!0}}},url:{pattern:RegExp("\\burl\\((?:"+p.source+"|"+/(?:[^\\\r\n()"']|\\[\s\S])*/.source+")\\)","i"),greedy:!0,inside:{function:/^url/i,punctuation:/^\(|\)$/,string:{pattern:RegExp("^"+p.source+"$"),alias:"url"}}},selector:{pattern:RegExp(`(^|[{}\\s])[^{}\\s](?:[^{};"'\\s]|\\s+(?![\\s{])|`+p.source+")*(?=\\s*\\{)"),lookbehind:!0},string:{pattern:p,greedy:!0},property:{pattern:/(^|[^-\w\xA0-\uFFFF])(?!\s)[-_a-z\xA0-\uFFFF](?:(?!\s)[-\w\xA0-\uFFFF])*(?=\s*:)/i,lookbehind:!0},important:/!important\b/i,function:{pattern:/(^|[^-a-z0-9])[-a-z0-9]+(?=\()/i,lookbehind:!0},punctuation:/[(){};:,]/},r.languages.css.atrule.inside.rest=r.languages.css;var c=r.languages.markup;c&&(c.tag.addInlined("style","css"),c.tag.addAttribute("style","css"))}(i),i.languages.clike={comment:[{pattern:/(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,lookbehind:!0,greedy:!0},{pattern:/(^|[^\\:])\/\/.*/,lookbehind:!0,greedy:!0}],string:{pattern:/(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,greedy:!0},"class-name":{pattern:/(\b(?:class|extends|implements|instanceof|interface|new|trait)\s+|\bcatch\s+\()[\w.\\]+/i,lookbehind:!0,inside:{punctuation:/[.\\]/}},keyword:/\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\b/,boolean:/\b(?:false|true)\b/,function:/\b\w+(?=\()/,number:/\b0x[\da-f]+\b|(?:\b\d+(?:\.\d*)?|\B\.\d+)(?:e[+-]?\d+)?/i,operator:/[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,punctuation:/[{}[\];(),.:]/},i.languages.javascript=i.languages.extend("clike",{"class-name":[i.languages.clike["class-name"],{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$A-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\.(?:constructor|prototype))/,lookbehind:!0}],keyword:[{pattern:/((?:^|\})\s*)catch\b/,lookbehind:!0},{pattern:/(^|[^.]|\.\.\.\s*)\b(?:as|assert(?=\s*\{)|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\s*(?:\{|$))|for|from(?=\s*(?:['"]|$))|function|(?:get|set)(?=\s*(?:[#\[$\w\xA0-\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,lookbehind:!0}],function:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,number:{pattern:RegExp(/(^|[^\w$])/.source+"(?:"+(/NaN|Infinity/.source+"|"+/0[bB][01]+(?:_[01]+)*n?/.source+"|"+/0[oO][0-7]+(?:_[0-7]+)*n?/.source+"|"+/0[xX][\dA-Fa-f]+(?:_[\dA-Fa-f]+)*n?/.source+"|"+/\d+(?:_\d+)*n/.source+"|"+/(?:\d+(?:_\d+)*(?:\.(?:\d+(?:_\d+)*)?)?|\.\d+(?:_\d+)*)(?:[Ee][+-]?\d+(?:_\d+)*)?/.source)+")"+/(?![\w$])/.source),lookbehind:!0},operator:/--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/}),i.languages.javascript["class-name"][0].pattern=/(\b(?:class|extends|implements|instanceof|interface|new)\s+)[\w.\\]+/,i.languages.insertBefore("javascript","keyword",{regex:{pattern:RegExp(/((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)/.source+/\//.source+"(?:"+/(?:\[(?:[^\]\\\r\n]|\\.)*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}/.source+"|"+/(?:\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.|\[(?:[^[\]\\\r\n]|\\.)*\])*\])*\]|\\.|[^/\\\[\r\n])+\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source+")"+/(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/.source),lookbehind:!0,greedy:!0,inside:{"regex-source":{pattern:/^(\/)[\s\S]+(?=\/[a-z]*$)/,lookbehind:!0,alias:"language-regex",inside:i.languages.regex},"regex-delimiter":/^\/|\/$/,"regex-flags":/^[a-z]+$/}},"function-variable":{pattern:/#?(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)\s*=>))/,alias:"function"},parameter:[{pattern:/(function(?:\s+(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*)?\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\))/,lookbehind:!0,inside:i.languages.javascript},{pattern:/(^|[^$\w\xA0-\uFFFF])(?!\s)[_$a-z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*=>)/i,lookbehind:!0,inside:i.languages.javascript},{pattern:/(\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*=>)/,lookbehind:!0,inside:i.languages.javascript},{pattern:/((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()\s]|\s+(?![\s)])|\([^()]*\))+(?=\s*\)\s*\{)/,lookbehind:!0,inside:i.languages.javascript}],constant:/\b[A-Z](?:[A-Z_]|\dx?)*\b/}),i.languages.insertBefore("javascript","string",{hashbang:{pattern:/^#!.*/,greedy:!0,alias:"comment"},"template-string":{pattern:/`(?:\\[\s\S]|\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}|(?!\$\{)[^\\`])*`/,greedy:!0,inside:{"template-punctuation":{pattern:/^`|`$/,alias:"string"},interpolation:{pattern:/((?:^|[^\\])(?:\\{2})*)\$\{(?:[^{}]|\{(?:[^{}]|\{[^}]*\})*\})+\}/,lookbehind:!0,inside:{"interpolation-punctuation":{pattern:/^\$\{|\}$/,alias:"punctuation"},rest:i.languages.javascript}},string:/[\s\S]+/}},"string-property":{pattern:/((?:^|[,{])[ \t]*)(["'])(?:\\(?:\r\n|[\s\S])|(?!\2)[^\\\r\n])*\2(?=\s*:)/m,lookbehind:!0,greedy:!0,alias:"property"}}),i.languages.insertBefore("javascript","operator",{"literal-property":{pattern:/((?:^|[,{])[ \t]*)(?!\s)[_$a-zA-Z\xA0-\uFFFF](?:(?!\s)[$\w\xA0-\uFFFF])*(?=\s*:)/m,lookbehind:!0,alias:"property"}}),i.languages.markup&&(i.languages.markup.tag.addInlined("script","javascript"),i.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,"javascript")),i.languages.js=i.languages.javascript,function(){if(typeof i=="undefined"||typeof document=="undefined")return;Element.prototype.matches||(Element.prototype.matches=Element.prototype.msMatchesSelector||Element.prototype.webkitMatchesSelector);var r="Loading\u2026",p=function(y,P){return"\u2716 Error "+y+" while fetching file: "+P},c="\u2716 Error: File does not exist or is empty",l={js:"javascript",py:"python",rb:"ruby",ps1:"powershell",psm1:"powershell",sh:"bash",bat:"batch",h:"c",tex:"latex"},o="data-src-status",u="loading",m="loaded",n="failed",h="pre[data-src]:not(["+o+'="'+m+'"]):not(['+o+'="'+u+'"])';function d(y,P,A){var E=new XMLHttpRequest;E.open("GET",y,!0),E.onreadystatechange=function(){E.readyState==4&&(E.status<400&&E.responseText?P(E.responseText):E.status>=400?A(p(E.status,E.statusText)):A(c))},E.send(null)}function g(y){var P=/^\s*(\d+)\s*(?:(,)\s*(?:(\d+)\s*)?)?$/.exec(y||"");if(P){var A=Number(P[1]),E=P[2],C=P[3];return E?C?[A,Number(C)]:[A,void 0]:[A,A]}}i.hooks.add("before-highlightall",function(y){y.selector+=", "+h}),i.hooks.add("before-sanity-check",function(y){var P=y.element;if(P.matches(h)){y.code="",P.setAttribute(o,u);var A=P.appendChild(document.createElement("CODE"));A.textContent=r;var E=P.getAttribute("data-src"),C=y.language;if(C==="none"){var _=(/\.(\w+)$/.exec(E)||[,"none"])[1];C=l[_]||_}i.util.setLanguage(A,C),i.util.setLanguage(P,C);var R=i.plugins.autoloader;R&&R.loadLanguages(C),d(E,function(j){P.setAttribute(o,m);var D=g(P.getAttribute("data-range"));if(D){var k=j.split(/\r\n?|\n/g),x=D[0],I=D[1]==null?k.length:D[1];x<0&&(x+=k.length),x=Math.max(0,Math.min(x-1,k.length)),I<0&&(I+=k.length),I=Math.max(0,Math.min(I,k.length)),j=k.slice(x,I).join(`
`),P.hasAttribute("data-start")||P.setAttribute("data-start",String(x+1))}A.textContent=j,i.highlightElement(A)},function(j){P.setAttribute(o,n),A.textContent=j})}}),i.plugins.fileHighlight={highlight:function(P){for(var A=(P||document).querySelectorAll(h),E=0,C;C=A[E++];)i.highlightElement(C)}};var v=!1;i.fileHighlight=function(){v||(console.warn("Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead."),v=!0),i.plugins.fileHighlight.highlight.apply(this,arguments)}}()}},To={};function it(T){var b=To[T];if(b!==void 0)return b.exports;var s=To[T]={id:T,loaded:!1,exports:{}};return Xa[T].call(s.exports,s,s.exports,it),s.loaded=!0,s.exports}it.n=T=>{var b=T&&T.__esModule?()=>T.default:()=>T;return it.d(b,{a:b}),b},it.d=(T,b)=>{for(var s in b)it.o(b,s)&&!it.o(T,s)&&Object.defineProperty(T,s,{enumerable:!0,get:b[s]})},it.g=function(){if(typeof globalThis=="object")return globalThis;try{return this||new Function("return this")()}catch(T){if(typeof window=="object")return window}}(),it.o=(T,b)=>Object.prototype.hasOwnProperty.call(T,b),it.nmd=T=>(T.paths=[],T.children||(T.children=[]),T);var sm={};(()=>{var Bt;"use strict";var T=it(4002),b=it.n(T),s=it(6486),f=it(7154),i=it.n(f),r=it(177),p=it.n(r),c=it(9737),l=it(6278),o=it(6927),u=it(3497),m=it(7814),n=it(5660),h=it.n(n),d=it(7874),g=it(4277),v=it(57),y=it(366);class P{hydrate(le,Ce){const je=new URL(le,typeof window=="undefined"?"https://dummy.base":window.location.origin),oe={};je.pathname.split("/").forEach((ye,he)=>{if(ye.charAt(0)===":"){const we=ye.slice(1);typeof Ce[we]!="undefined"&&(je.pathname=je.pathname.replace(ye,encodeURIComponent(Ce[we])),oe[we]=Ce[we])}});for(const ye in Ce)(typeof oe[ye]=="undefined"||je.searchParams.has(ye))&&je.searchParams.set(ye,Ce[ye]);return je.toString()}}function A(){b()(".sample-request-send").off("click"),b()(".sample-request-send").on("click",function(Oe){Oe.preventDefault();const le=b()(this).parents("article"),Ce=le.data("group"),je=le.data("name"),oe=le.data("version");R(Ce,je,oe,b()(this).data("type"))}),b()(".sample-request-clear").off("click"),b()(".sample-request-clear").on("click",function(Oe){Oe.preventDefault();const le=b()(this).parents("article"),Ce=le.data("group"),je=le.data("name"),oe=le.data("version");j(Ce,je,oe)})}function E(Oe){return Oe.replace(/{(.+?)}/g,":$1")}function C(Oe,le){const Ce=Oe.find(".sample-request-url").val(),je=new P,oe=E(Ce);return je.hydrate(oe,le)}function _(Oe){const le={};["header","query","body"].forEach(je=>{const oe={};try{Oe.find(b()(`[data-family="${je}"]:visible`)).each((ye,he)=>{const we=he.dataset.name;let Xe=he.value;if(he.type==="checkbox")if(he.checked)Xe="on";else return!0;if(!Xe&&!he.dataset.optional&&he.type!=="checkbox")return b()(he).addClass("border-danger"),!0;oe[we]=Xe})}catch(ye){return}le[je]=oe});const Ce=Oe.find(b()('[data-family="body-json"]'));return Ce.is(":visible")?(le.body=Ce.val(),le.header["Content-Type"]="application/json"):le.header["Content-Type"]="multipart/form-data",le}function R(Oe,le,Ce,je){const oe=b()(`article[data-group="${Oe}"][data-name="${le}"][data-version="${Ce}"]`),ye=_(oe),he={};if(he.url=C(oe,ye.query),he.headers=ye.header,he.headers["Content-Type"]==="application/json")he.data=ye.body;else if(he.headers["Content-Type"]==="multipart/form-data"){const qe=new FormData;for(const[Je,_e]of Object.entries(ye.body))qe.append(Je,_e);he.data=qe,he.processData=!1,(je.toLowerCase()==="get"||je.toLowerCase()==="delete")&&delete he.headers["Content-Type"]}he.type=je,he.success=we,he.error=Xe,b().ajax(he),oe.find(".sample-request-response").fadeTo(200,1),oe.find(".sample-request-response-json").html("Loading...");function we(qe,Je,_e){let $e;try{$e=JSON.parse(_e.responseText),$e=JSON.stringify($e,null,4)}catch(Qe){$e=_e.responseText}oe.find(".sample-request-response-json").text($e),h().highlightAll()}function Xe(qe,Je,_e){let $e="Error "+qe.status+": "+_e,Qe;try{Qe=JSON.parse(qe.responseText),Qe=JSON.stringify(Qe,null,4)}catch(Ze){Qe=qe.responseText}Qe&&($e+=`
`+Qe),oe.find(".sample-request-response").is(":visible")&&oe.find(".sample-request-response").fadeTo(1,.1),oe.find(".sample-request-response").fadeTo(250,1),oe.find(".sample-request-response-json").text($e),h().highlightAll()}}function j(Oe,le,Ce){const je=b()('article[data-group="'+Oe+'"][data-name="'+le+'"][data-version="'+Ce+'"]');je.find(".sample-request-response-json").html(""),je.find(".sample-request-response").hide(),je.find(".sample-request-input").each((ye,he)=>{he.value=he.placeholder!==he.dataset.name?he.placeholder:""});const oe=je.find(".sample-request-url");oe.val(oe.prop("defaultValue"))}const D={"Allowed values:":"Valors permesos:","Compare all with predecessor":"Comparar tot amb versi\xF3 anterior","compare changes to:":"comparar canvis amb:","compared to":"comparat amb","Default value:":"Valor per defecte:",Description:"Descripci\xF3",Field:"Camp",General:"General","Generated with":"Generat amb",Name:"Nom","No response values.":"Sense valors en la resposta.",optional:"opcional",Parameter:"Par\xE0metre","Permission:":"Permisos:",Response:"Resposta",Send:"Enviar","Send a Sample Request":"Enviar una petici\xF3 d'exemple","show up to version:":"mostrar versi\xF3:","Size range:":"Tamany de rang:",Type:"Tipus",url:"url"},k={"Allowed values:":"Povolen\xE9 hodnoty:","Compare all with predecessor":"Porovnat v\u0161e s p\u0159edchoz\xEDmi verzemi","compare changes to:":"porovnat zm\u011Bny s:","compared to":"porovnat s","Default value:":"V\xFDchoz\xED hodnota:",Description:"Popis",Field:"Pole",General:"Obecn\xE9","Generated with":"Vygenerov\xE1no pomoc\xED",Name:"N\xE1zev","No response values.":"Nebyly vr\xE1ceny \u017E\xE1dn\xE9 hodnoty.",optional:"voliteln\xE9",Parameter:"Parametr","Permission:":"Opr\xE1vn\u011Bn\xED:",Response:"Odpov\u011B\u010F",Send:"Odeslat","Send a Sample Request":"Odeslat uk\xE1zkov\xFD po\u017Eadavek","show up to version:":"zobrazit po verzi:","Size range:":"Rozsah velikosti:",Type:"Typ",url:"url"},x={"Allowed values:":"Erlaubte Werte:","Compare all with predecessor":"Vergleiche alle mit ihren Vorg\xE4ngern","compare changes to:":"vergleiche \xC4nderungen mit:","compared to":"verglichen mit","Default value:":"Standardwert:",Description:"Beschreibung",Field:"Feld",General:"Allgemein","Generated with":"Erstellt mit",Name:"Name","No response values.":"Keine R\xFCckgabewerte.",optional:"optional",Parameter:"Parameter","Permission:":"Berechtigung:",Response:"Antwort",Send:"Senden","Send a Sample Request":"Eine Beispielanfrage senden","show up to version:":"zeige bis zur Version:","Size range:":"Gr\xF6\xDFenbereich:",Type:"Typ",url:"url"},I={"Allowed values:":"Valores permitidos:","Compare all with predecessor":"Comparar todo con versi\xF3n anterior","compare changes to:":"comparar cambios con:","compared to":"comparado con","Default value:":"Valor por defecto:",Description:"Descripci\xF3n",Field:"Campo",General:"General","Generated with":"Generado con",Name:"Nombre","No response values.":"Sin valores en la respuesta.",optional:"opcional",Parameter:"Par\xE1metro","Permission:":"Permisos:",Response:"Respuesta",Send:"Enviar","Send a Sample Request":"Enviar una petici\xF3n de ejemplo","show up to version:":"mostrar a versi\xF3n:","Size range:":"Tama\xF1o de rango:",Type:"Tipo",url:"url"},G={"Allowed values:":"Valeurs autoris\xE9es :",Body:"Corps","Compare all with predecessor":"Tout comparer avec ...","compare changes to:":"comparer les changements \xE0 :","compared to":"comparer \xE0","Default value:":"Valeur par d\xE9faut :",Description:"Description",Field:"Champ",General:"G\xE9n\xE9ral","Generated with":"G\xE9n\xE9r\xE9 avec",Header:"En-t\xEAte",Headers:"En-t\xEAtes",Name:"Nom","No response values.":"Aucune valeur de r\xE9ponse.","No value":"Aucune valeur",optional:"optionnel",Parameter:"Param\xE8tre",Parameters:"Param\xE8tres","Permission:":"Permission :","Query Parameter(s)":"Param\xE8tre(s) de la requ\xEAte","Query Parameters":"Param\xE8tres de la requ\xEAte","Request Body":"Corps de la requ\xEAte",required:"requis",Response:"R\xE9ponse",Send:"Envoyer","Send a Sample Request":"Envoyer une requ\xEAte repr\xE9sentative","show up to version:":"Montrer \xE0 partir de la version :","Size range:":"Ordre de grandeur :",Type:"Type",url:"url"},O={"Allowed values:":"Valori permessi:","Compare all with predecessor":"Confronta tutto con versioni precedenti","compare changes to:":"confronta modifiche con:","compared to":"confrontato con","Default value:":"Valore predefinito:",Description:"Descrizione",Field:"Campo",General:"Generale","Generated with":"Creato con",Name:"Nome","No response values.":"Nessun valore di risposta.",optional:"opzionale",Parameter:"Parametro","Permission:":"Permessi:",Response:"Risposta",Send:"Invia","Send a Sample Request":"Invia una richiesta di esempio","show up to version:":"mostra alla versione:","Size range:":"Intervallo dimensione:",Type:"Tipo",url:"url"},U={"Allowed values:":"Toegestane waarden:","Compare all with predecessor":"Vergelijk alle met voorgaande versie","compare changes to:":"vergelijk veranderingen met:","compared to":"vergelijk met","Default value:":"Standaard waarde:",Description:"Omschrijving",Field:"Veld",General:"Algemeen","Generated with":"Gegenereerd met",Name:"Naam","No response values.":"Geen response waardes.",optional:"optioneel",Parameter:"Parameter","Permission:":"Permissie:",Response:"Antwoorden",Send:"Sturen","Send a Sample Request":"Stuur een sample aanvragen","show up to version:":"toon tot en met versie:","Size range:":"Maatbereik:",Type:"Type",url:"url"},B={"Allowed values:":"Dozwolone warto\u015Bci:","Compare all with predecessor":"Por\xF3wnaj z poprzednimi wersjami","compare changes to:":"por\xF3wnaj zmiany do:","compared to":"por\xF3wnaj do:","Default value:":"Warto\u015B\u0107 domy\u015Blna:",Description:"Opis",Field:"Pole",General:"Generalnie","Generated with":"Wygenerowano z",Name:"Nazwa","No response values.":"Brak odpowiedzi.",optional:"opcjonalny",Parameter:"Parametr","Permission:":"Uprawnienia:",Response:"Odpowied\u017A",Send:"Wy\u015Blij","Send a Sample Request":"Wy\u015Blij przyk\u0142adowe \u017C\u0105danie","show up to version:":"poka\u017C do wersji:","Size range:":"Zakres rozmiaru:",Type:"Typ",url:"url"},z={"Allowed values:":"Valores permitidos:","Compare all with predecessor":"Compare todos com antecessores","compare changes to:":"comparar altera\xE7\xF5es com:","compared to":"comparado com","Default value:":"Valor padr\xE3o:",Description:"Descri\xE7\xE3o",Field:"Campo",General:"Geral","Generated with":"Gerado com",Name:"Nome","No response values.":"Sem valores de resposta.",optional:"opcional",Parameter:"Par\xE2metro","Permission:":"Permiss\xE3o:",Response:"Resposta",Send:"Enviar","Send a Sample Request":"Enviar um Exemplo de Pedido","show up to version:":"aparecer para a vers\xE3o:","Size range:":"Faixa de tamanho:",Type:"Tipo",url:"url"},F={"Allowed values:":"Valori permise:","Compare all with predecessor":"Compar\u0103 toate cu versiunea precedent\u0103","compare changes to:":"compar\u0103 cu versiunea:","compared to":"comparat cu","Default value:":"Valoare implicit\u0103:",Description:"Descriere",Field:"C\xE2mp",General:"General","Generated with":"Generat cu",Name:"Nume","No response values.":"Nici o valoare returnat\u0103.",optional:"op\u021Bional",Parameter:"Parametru","Permission:":"Permisiune:",Response:"R\u0103spuns",Send:"Trimite","Send a Sample Request":"Trimite o cerere de prob\u0103","show up to version:":"arat\u0103 p\xE2n\u0103 la versiunea:","Size range:":"Interval permis:",Type:"Tip",url:"url"},K={"Allowed values:":"\u0414\u043E\u043F\u0443\u0441\u0442\u0438\u043C\u044B\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u044F:","Compare all with predecessor":"\u0421\u0440\u0430\u0432\u043D\u0438\u0442\u044C \u0441 \u043F\u0440\u0435\u0434\u044B\u0434\u0443\u0449\u0435\u0439 \u0432\u0435\u0440\u0441\u0438\u0435\u0439","compare changes to:":"\u0441\u0440\u0430\u0432\u043D\u0438\u0442\u044C \u0441:","compared to":"\u0432 \u0441\u0440\u0430\u0432\u043D\u0435\u043D\u0438\u0438 \u0441","Default value:":"\u041F\u043E \u0443\u043C\u043E\u043B\u0447\u0430\u043D\u0438\u044E:",Description:"\u041E\u043F\u0438\u0441\u0430\u043D\u0438\u0435",Field:"\u041D\u0430\u0437\u0432\u0430\u043D\u0438\u0435",General:"\u041E\u0431\u0449\u0430\u044F \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F","Generated with":"\u0421\u0433\u0435\u043D\u0435\u0440\u0438\u0440\u043E\u0432\u0430\u043D\u043E \u0441 \u043F\u043E\u043C\u043E\u0449\u044C\u044E",Name:"\u041D\u0430\u0437\u0432\u0430\u043D\u0438\u0435","No response values.":"\u041D\u0435\u0442 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0439 \u0434\u043B\u044F \u043E\u0442\u0432\u0435\u0442\u0430.",optional:"\u043D\u0435\u043E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0439",Parameter:"\u041F\u0430\u0440\u0430\u043C\u0435\u0442\u0440","Permission:":"\u0420\u0430\u0437\u0440\u0435\u0448\u0435\u043D\u043E:",Response:"\u041E\u0442\u0432\u0435\u0442",Send:"\u041E\u0442\u043F\u0440\u0430\u0432\u0438\u0442\u044C","Send a Sample Request":"\u041E\u0442\u043F\u0440\u0430\u0432\u0438\u0442\u044C \u0442\u0435\u0441\u0442\u043E\u0432\u044B\u0439 \u0437\u0430\u043F\u0440\u043E\u0441","show up to version:":"\u043F\u043E\u043A\u0430\u0437\u0430\u0442\u044C \u0432\u0435\u0440\u0441\u0438\u044E:","Size range:":"\u041E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u044F:",Type:"\u0422\u0438\u043F",url:"URL"},W={"Allowed values:":"\u0130zin verilen de\u011Ferler:","Compare all with predecessor":"T\xFCm\xFCn\xFC \xF6ncekiler ile kar\u015F\u0131la\u015Ft\u0131r","compare changes to:":"de\u011Fi\u015Fiklikleri kar\u015F\u0131la\u015Ft\u0131r:","compared to":"kar\u015F\u0131la\u015Ft\u0131r","Default value:":"Varsay\u0131lan de\u011Fer:",Description:"A\xE7\u0131klama",Field:"Alan",General:"Genel","Generated with":"Olu\u015Fturan",Name:"\u0130sim","No response values.":"D\xF6n\xFC\u015F verisi yok.",optional:"opsiyonel",Parameter:"Parametre","Permission:":"\u0130zin:",Response:"D\xF6n\xFC\u015F",Send:"G\xF6nder","Send a Sample Request":"\xD6rnek istek g\xF6nder","show up to version:":"bu versiyona kadar g\xF6ster:","Size range:":"Boyut aral\u0131\u011F\u0131:",Type:"Tip",url:"url"},re={"Allowed values:":"Gi\xE1 tr\u1ECB ch\u1EA5p nh\u1EADn:","Compare all with predecessor":"So s\xE1nh v\u1EDBi t\u1EA5t c\u1EA3 phi\xEAn b\u1EA3n tr\u01B0\u1EDBc","compare changes to:":"so s\xE1nh s\u1EF1 thay \u0111\u1ED5i v\u1EDBi:","compared to":"so s\xE1nh v\u1EDBi","Default value:":"Gi\xE1 tr\u1ECB m\u1EB7c \u0111\u1ECBnh:",Description:"Ch\xFA th\xEDch",Field:"Tr\u01B0\u1EDDng d\u1EEF li\u1EC7u",General:"T\u1ED5ng quan","Generated with":"\u0110\u01B0\u1EE3c t\u1EA1o b\u1EDFi",Name:"T\xEAn","No response values.":"Kh\xF4ng c\xF3 k\u1EBFt qu\u1EA3 tr\u1EA3 v\u1EC1.",optional:"T\xF9y ch\u1ECDn",Parameter:"Tham s\u1ED1","Permission:":"Quy\u1EC1n h\u1EA1n:",Response:"K\u1EBFt qu\u1EA3",Send:"G\u1EEDi","Send a Sample Request":"G\u1EEDi m\u1ED9t y\xEAu c\u1EA7u m\u1EABu","show up to version:":"hi\u1EC3n th\u1ECB phi\xEAn b\u1EA3n:","Size range:":"K\xEDch c\u1EE1:",Type:"Ki\u1EC3u",url:"li\xEAn k\u1EBFt"},ne={"Allowed values:":"\u5141\u8BB8\u503C:",Body:"\u8BF7\u6C42\u4F53","Compare all with predecessor":"\u4E0E\u6240\u6709\u4E4B\u524D\u7684\u7248\u672C\u6BD4\u8F83","compare changes to:":"\u5C06\u5F53\u524D\u7248\u672C\u4E0E\u6307\u5B9A\u7248\u672C\u6BD4\u8F83:","compared to":"\u76F8\u6BD4\u4E8E","Default value:":"\u9ED8\u8BA4\u503C:",Description:"\u63CF\u8FF0",Field:"\u5B57\u6BB5",General:"\u6982\u8981","Generated with":"\u6784\u5EFA\u4E8E",Name:"\u540D\u79F0","No response values.":"\u65E0\u8FD4\u56DE\u503C.",optional:"\u53EF\u9009",Parameter:"\u53C2\u6570",Parameters:"\u53C2\u6570",Headers:"\u8BF7\u6C42\u5934","Permission:":"\u6743\u9650:",Response:"\u8FD4\u56DE",required:"\u5FC5\u9700\u7684",Send:"\u53D1\u9001","Send a Sample Request":"\u53D1\u9001\u793A\u4F8B\u8BF7\u6C42","show up to version:":"\u663E\u793A\u6307\u5B9A\u7248\u672C:","Size range:":"\u53D6\u503C\u8303\u56F4:",Type:"\u7C7B\u578B",url:"\u5730\u5740"},pe={ca:D,cn:ne,cs:k,de:x,es:I,en:{},fr:G,it:O,nl:U,pl:B,pt:z,pt_br:z,ro:F,ru:K,tr:W,vi:re,zh:ne,zh_cn:ne},te=((Bt=window.navigator.language)!=null?Bt:"en-GB").toLowerCase().substr(0,2);let fe=pe[te]?pe[te]:pe.en;function Pe(Oe){const le=fe[Oe];return le===void 0?Oe:le}function Le(Oe){if(!Object.prototype.hasOwnProperty.call(pe,Oe))throw new Error(`Invalid value for language setting! Available values are ${Object.keys(pe).join(",")}`);fe=pe[Oe]}const{defaultsDeep:nt}=s,mt=(Oe,le)=>{const Ce=(je,oe,ye,he)=>({[oe]:ye+1<he.length?je:le});return Oe.reduceRight(Ce,{})},dt=Oe=>{let le={};return Oe.forEach(Ce=>{const je=mt(Ce[0].split("."),Ce[1]);le=nt(le,je)}),ht(le)};function ht(Oe){return JSON.stringify(Oe,null,4)}function Rt(Oe){const le=[];return Oe.forEach(Ce=>{let je;switch(Ce.type.toLowerCase()){case"string":je=Ce.defaultValue||"";break;case"boolean":je=Boolean(Ce.defaultValue)||!1;break;case"number":je=parseInt(Ce.defaultValue||0,10);break;case"date":je=Ce.defaultValue||new Date().toLocaleDateString(window.navigator.language);break}le.push([Ce.field,je])}),dt(le)}var Se=it(2027);class wt extends Se{constructor(le){super(),this.testMode=le}diffMain(le,Ce,je,oe){return super.diff_main(this._stripHtml(le),this._stripHtml(Ce),je,oe)}diffPrettyHtml(le){const Ce=[],je=/&/g,oe=/</g,ye=/>/g,he=/\n/g;for(let we=0;we<le.length;we++){const Xe=le[we][0],Je=le[we][1].replace(je,"&amp;").replace(oe,"&lt;").replace(ye,"&gt;").replace(he,"&para;<br>");switch(Xe){case Se.DIFF_INSERT:Ce[we]="<ins>"+Je+"</ins>";break;case Se.DIFF_DELETE:Ce[we]="<del>"+Je+"</del>";break;case Se.DIFF_EQUAL:Ce[we]="<span>"+Je+"</span>";break}}return Ce.join("")}diffCleanupSemantic(le){return this.diff_cleanupSemantic(le)}_stripHtml(le){if(this.testMode)return le;const Ce=document.createElement("div");return Ce.innerHTML=le,Ce.textContent||Ce.innerText||""}}function Ge(){p().registerHelper("markdown",function(oe){return oe&&(oe=oe.replace(/((\[(.*?)\])?\(#)((.+?):(.+?))(\))/mg,function(ye,he,we,Xe,qe,Je,_e){const $e=Xe||Je+"/"+_e;return'<a href="#api-'+Je+"-"+_e+'">'+$e+"</a>"}),oe)}),p().registerHelper("setInputType",function(oe){switch(oe){case"File":case"Email":case"Color":case"Number":case"Date":return oe[0].toLowerCase()+oe.substring(1);case"Boolean":return"checkbox";default:return"text"}});let Oe;p().registerHelper("startTimer",function(oe){return Oe=new Date,""}),p().registerHelper("stopTimer",function(oe){return console.log(new Date-Oe),""}),p().registerHelper("__",function(oe){return Pe(oe)}),p().registerHelper("cl",function(oe){return console.log(oe),""}),p().registerHelper("underscoreToSpace",function(oe){return oe.replace(/(_+)/g," ")}),p().registerHelper("removeDblQuotes",function(oe){return oe.replace(/"/g,"")}),p().registerHelper("assign",function(oe){if(arguments.length>0){const ye=typeof arguments[1];let he=null;(ye==="string"||ye==="number"||ye==="boolean")&&(he=arguments[1]),p().registerHelper(oe,function(){return he})}return""}),p().registerHelper("nl2br",function(oe){return Ce(oe)}),p().registerHelper("ifCond",function(oe,ye,he,we){switch(ye){case"==":return oe==he?we.fn(this):we.inverse(this);case"===":return oe===he?we.fn(this):we.inverse(this);case"!=":return oe!=he?we.fn(this):we.inverse(this);case"!==":return oe!==he?we.fn(this):we.inverse(this);case"<":return oe<he?we.fn(this):we.inverse(this);case"<=":return oe<=he?we.fn(this):we.inverse(this);case">":return oe>he?we.fn(this):we.inverse(this);case">=":return oe>=he?we.fn(this):we.inverse(this);case"&&":return oe&&he?we.fn(this):we.inverse(this);case"||":return oe||he?we.fn(this):we.inverse(this);default:return we.inverse(this)}});const le={};p().registerHelper("subTemplate",function(oe,ye){le[oe]||(le[oe]=p().compile(document.getElementById("template-"+oe).innerHTML));const he=le[oe],we=b().extend({},this,ye.hash);return new(p()).SafeString(he(we))}),p().registerHelper("toLowerCase",function(oe){return oe&&typeof oe=="string"?oe.toLowerCase():""}),p().registerHelper("splitFill",function(oe,ye,he){const we=oe.split(ye);return new Array(we.length).join(he)+we[we.length-1]});function Ce(oe){return(""+oe).replace(/(?:^|<\/pre>)[^]*?(?:<pre>|$)/g,ye=>ye.replace(/([^>\r\n]?)(\r\n|\n\r|\r|\n)/g,"$1<br>$2"))}p().registerHelper("each_compare_list_field",function(oe,ye,he){const we=he.hash.field,Xe=[];oe&&oe.forEach(function(Je){const _e=Je;_e.key=Je[we],Xe.push(_e)});const qe=[];return ye&&ye.forEach(function(Je){const _e=Je;_e.key=Je[we],qe.push(_e)}),je("key",Xe,qe,he)}),p().registerHelper("each_compare_keys",function(oe,ye,he){const we=[];oe&&Object.keys(oe).forEach(function(Je){const _e={};_e.value=oe[Je],_e.key=Je,we.push(_e)});const Xe=[];return ye&&Object.keys(ye).forEach(function(Je){const _e={};_e.value=ye[Je],_e.key=Je,Xe.push(_e)}),je("key",we,Xe,he)}),p().registerHelper("body2json",function(oe,ye){return Rt(oe)}),p().registerHelper("each_compare_field",function(oe,ye,he){return je("field",oe,ye,he)}),p().registerHelper("each_compare_title",function(oe,ye,he){return je("title",oe,ye,he)}),p().registerHelper("reformat",function(oe,ye){if(ye==="json")try{return JSON.stringify(JSON.parse(oe.trim()),null,"    ")}catch(he){}return oe}),p().registerHelper("showDiff",function(oe,ye,he){let we="";if(oe===ye)we=oe;else{if(!oe)return ye;if(!ye)return oe;const Xe=new wt,qe=Xe.diffMain(ye,oe);Xe.diffCleanupSemantic(qe),we=Xe.diffPrettyHtml(qe),we=we.replace(/&para;/gm,"")}return he==="nl2br"&&(we=Ce(we)),we});function je(oe,ye,he,we){const Xe=[];let qe=0;ye&&ye.forEach(function($e){let Qe=!1;if(he&&he.forEach(function(Ze){if($e[oe]===Ze[oe]){const Ut={typeSame:!0,source:$e,compare:Ze,index:qe};Xe.push(Ut),Qe=!0,qe++}}),!Qe){const Ze={typeIns:!0,source:$e,index:qe};Xe.push(Ze),qe++}}),he&&he.forEach(function($e){let Qe=!1;if(ye&&ye.forEach(function(Ze){Ze[oe]===$e[oe]&&(Qe=!0)}),!Qe){const Ze={typeDel:!0,compare:$e,index:qe};Xe.push(Ze),qe++}});let Je="";const _e=Xe.length;for(const $e in Xe)parseInt($e,10)===_e-1&&(Xe[$e]._last=!0),Je=Je+we.fn(Xe[$e]);return Je}}document.addEventListener("DOMContentLoaded",()=>{He(),A(),h().highlightAll()});function He(){var X;let Oe=[{type:"GET",url:"/notifications/threads/:id/subscription",title:"checkNotificationThreadSubscription",name:"checkNotificationThreadSubscription",description:"<p>Check to see if the current user is subscribed to a thread.</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.activity.checkNotificationThreadSubscription({id})",type:"js"},{title:"Promise",content:"github.activity.checkNotificationThreadSubscription({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.checkNotificationThreadSubscription({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"GET",url:"/user/starred/:owner/:repo",title:"checkStarringRepo",name:"checkStarringRepo",description:"<p>Check if you are starring a repository</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.activity.checkStarringRepo({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.activity.checkStarringRepo({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.checkStarringRepo({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"DELETE",url:"/notifications/threads/:id/subscription",title:"deleteNotificationThreadSubscription",name:"deleteNotificationThreadSubscription",description:"<p>Delete a notification thread subscription.</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.activity.deleteNotificationThreadSubscription({id})",type:"js"},{title:"Promise",content:"github.activity.deleteNotificationThreadSubscription({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.deleteNotificationThreadSubscription({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"GET",url:"/events",title:"getEvents",name:"getEvents",description:"<p>List public events</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.activity.getEvents({page, per_page})",type:"js"},{title:"Promise",content:"github.activity.getEvents({page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.getEvents({page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"GET",url:"/orgs/:org/events",title:"getEventsForOrg",name:"getEventsForOrg",description:"<p>List public events for an organization</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.activity.getEventsForOrg({org, page, per_page})",type:"js"},{title:"Promise",content:"github.activity.getEventsForOrg({org, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.getEventsForOrg({org, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"GET",url:"/repos/:owner/:repo/events",title:"getEventsForRepo",name:"getEventsForRepo",description:"<p>List repository events</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.activity.getEventsForRepo({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.activity.getEventsForRepo({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.getEventsForRepo({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"GET",url:"/repos/:owner/:repo/issues/events",title:"getEventsForRepoIssues",name:"getEventsForRepoIssues",description:"<p>List issue events for a repository</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.activity.getEventsForRepoIssues({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.activity.getEventsForRepoIssues({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.getEventsForRepoIssues({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"GET",url:"/networks/:owner/:repo/events",title:"getEventsForRepoNetwork",name:"getEventsForRepoNetwork",description:"<p>List public events for a network of repositories</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.activity.getEventsForRepoNetwork({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.activity.getEventsForRepoNetwork({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.getEventsForRepoNetwork({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"GET",url:"/users/:username/events",title:"getEventsForUser",name:"getEventsForUser",description:"<p>List events performed by a user</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.activity.getEventsForUser({username, page, per_page})",type:"js"},{title:"Promise",content:"github.activity.getEventsForUser({username, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.getEventsForUser({username, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"GET",url:"/users/:username/events/orgs/:org",title:"getEventsForUserOrg",name:"getEventsForUserOrg",description:"<p>List events for a user's organization</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""},{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.activity.getEventsForUserOrg({username, org, page, per_page})",type:"js"},{title:"Promise",content:"github.activity.getEventsForUserOrg({username, org, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.getEventsForUserOrg({username, org, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"GET",url:"/users/:username/events/public",title:"getEventsForUserPublic",name:"getEventsForUserPublic",description:"<p>List public events performed by a user</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.activity.getEventsForUserPublic({username, page, per_page})",type:"js"},{title:"Promise",content:"github.activity.getEventsForUserPublic({username, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.getEventsForUserPublic({username, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"GET",url:"/users/:username/received_events",title:"getEventsReceived",name:"getEventsReceived",description:"<p>List events that a user has received</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.activity.getEventsReceived({username, page, per_page})",type:"js"},{title:"Promise",content:"github.activity.getEventsReceived({username, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.getEventsReceived({username, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"GET",url:"/users/:username/received_events/public",title:"getEventsReceivedPublic",name:"getEventsReceivedPublic",description:"<p>List public events that a user has received</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.activity.getEventsReceivedPublic({username, page, per_page})",type:"js"},{title:"Promise",content:"github.activity.getEventsReceivedPublic({username, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.getEventsReceivedPublic({username, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"GET",url:"/feeds",title:"getFeeds",name:"getFeeds",description:"<p>Get all feeds available for the authenticated user.</p>",group:"Activity",examples:[{title:"async/await",content:"const result = await github.activity.getFeeds({})",type:"js"},{title:"Promise",content:"github.activity.getFeeds({}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.getFeeds({}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"GET",url:"/notifications/threads/:id",title:"getNotificationThread",name:"getNotificationThread",description:"<p>View a single notification thread.</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.activity.getNotificationThread({id})",type:"js"},{title:"Promise",content:"github.activity.getNotificationThread({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.getNotificationThread({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"GET",url:"/notifications",title:"getNotifications",name:"getNotifications",description:"<p>Get all notifications for the current user, grouped by repository.</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"boolean",optional:!0,field:"all",defaultValue:"false",description:"<p>If true, show notifications marked as read. Default: false</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"participating",defaultValue:"false",description:"<p>If true, only shows notifications in which the user is directly participating or mentioned. Default: false</p>"},{group:"Parameter",type:"date",optional:!0,field:"since",description:"<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"},{group:"Parameter",type:"string",optional:!0,field:"before",description:"<p>Only show notifications updated before the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.activity.getNotifications({all, participating, since, before})",type:"js"},{title:"Promise",content:"github.activity.getNotifications({all, participating, since, before}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.getNotifications({all, participating, since, before}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"GET",url:"/repos/:owner/:repo/notifications",title:"getNotificationsForUser",name:"getNotificationsForUser",description:"<p>Get all notifications for the given user.</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"boolean",optional:!0,field:"all",defaultValue:"false",description:"<p>If true, show notifications marked as read. Default: false</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"participating",defaultValue:"false",description:"<p>If true, only shows notifications in which the user is directly participating or mentioned. Default: false</p>"},{group:"Parameter",type:"date",optional:!0,field:"since",description:"<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"},{group:"Parameter",type:"string",optional:!0,field:"before",description:"<p>Only show notifications updated before the given time. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.activity.getNotificationsForUser({owner, repo, all, participating, since, before})",type:"js"},{title:"Promise",content:"github.activity.getNotificationsForUser({owner, repo, all, participating, since, before}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.getNotificationsForUser({owner, repo, all, participating, since, before}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"GET",url:"/repos/:owner/:repo/subscription",title:"getRepoSubscription",name:"getRepoSubscription",description:"<p>Get a Repository Subscription.</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.activity.getRepoSubscription({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.activity.getRepoSubscription({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.getRepoSubscription({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"GET",url:"/repos/:owner/:repo/stargazers",title:"getStargazersForRepo",name:"getStargazersForRepo",description:"<p>List Stargazers</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.activity.getStargazersForRepo({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.activity.getStargazersForRepo({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.getStargazersForRepo({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"GET",url:"/user/starred",title:"getStarredRepos",name:"getStarredRepos",description:"<p>List repositories being starred by the authenticated user</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",allowedValues:["created","updated"],optional:!0,field:"sort",defaultValue:"created",description:""},{group:"Parameter",type:"string",allowedValues:["asc","desc"],optional:!0,field:"direction",defaultValue:"desc",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.activity.getStarredRepos({sort, direction, page, per_page})",type:"js"},{title:"Promise",content:"github.activity.getStarredRepos({sort, direction, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.getStarredRepos({sort, direction, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"GET",url:"/users/:username/starred",title:"getStarredReposForUser",name:"getStarredReposForUser",description:"<p>List repositories being starred by a user</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""},{group:"Parameter",type:"string",allowedValues:["created","updated"],optional:!0,field:"sort",defaultValue:"created",description:""},{group:"Parameter",type:"string",allowedValues:["asc","desc"],optional:!0,field:"direction",defaultValue:"desc",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.activity.getStarredReposForUser({username, sort, direction, page, per_page})",type:"js"},{title:"Promise",content:"github.activity.getStarredReposForUser({username, sort, direction, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.getStarredReposForUser({username, sort, direction, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"GET",url:"/user/subscriptions",title:"getWatchedRepos",name:"getWatchedRepos",description:"<p>List repositories being watched by the authenticated user.</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.activity.getWatchedRepos({page, per_page})",type:"js"},{title:"Promise",content:"github.activity.getWatchedRepos({page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.getWatchedRepos({page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"GET",url:"/users/:username/subscriptions",title:"getWatchedReposForUser",name:"getWatchedReposForUser",description:"<p>List repositories being watched by a user.</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.activity.getWatchedReposForUser({username, page, per_page})",type:"js"},{title:"Promise",content:"github.activity.getWatchedReposForUser({username, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.getWatchedReposForUser({username, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"GET",url:"/repos/:owner/:repo/subscribers",title:"getWatchersForRepo",name:"getWatchersForRepo",description:"<p>Get watchers for repository.</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.activity.getWatchersForRepo({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.activity.getWatchersForRepo({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.getWatchersForRepo({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"PATCH",url:"/notifications/threads/:id",title:"markNotificationThreadAsRead",name:"markNotificationThreadAsRead",description:"<p>Mark a notification thread as read.</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.activity.markNotificationThreadAsRead({id})",type:"js"},{title:"Promise",content:"github.activity.markNotificationThreadAsRead({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.markNotificationThreadAsRead({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"PUT",url:"/notifications",title:"markNotificationsAsRead",name:"markNotificationsAsRead",description:"<p>Mark notifications as read for authenticated user.</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!0,field:"last_read_at",defaultValue:"Time.now",description:"<p>Describes the last point that notifications were checked. Anything updated since this time will not be updated. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Default: Time.now</p>"}]}},examples:[{title:"async/await",content:"const result = await github.activity.markNotificationsAsRead({last_read_at})",type:"js"},{title:"Promise",content:"github.activity.markNotificationsAsRead({last_read_at}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.markNotificationsAsRead({last_read_at}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"PUT",url:"/repos/:owner/:repo/notifications",title:"markNotificationsAsReadForRepo",name:"markNotificationsAsReadForRepo",description:"<p>Mark notifications in a repo as read.</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!0,field:"last_read_at",defaultValue:"Time.now",description:"<p>Describes the last point that notifications were checked. Anything updated since this time will not be updated. This is a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ. Default: Time.now</p>"}]}},examples:[{title:"async/await",content:"const result = await github.activity.markNotificationsAsReadForRepo({owner, repo, last_read_at})",type:"js"},{title:"Promise",content:"github.activity.markNotificationsAsReadForRepo({owner, repo, last_read_at}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.markNotificationsAsReadForRepo({owner, repo, last_read_at}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"PUT",url:"/notifications/threads/:id/subscription",title:"setNotificationThreadSubscription",name:"setNotificationThreadSubscription",description:"<p>This lets you subscribe or unsubscribe from a conversation. Unsubscribing from a conversation mutes all future notifications (until you comment or get @mentioned once more).</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"boolean",optional:!0,field:"subscribed",description:"<p>Determines if notifications should be received from this thread</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"ignored",description:"<p>Determines if all notifications should be blocked from this thread</p>"}]}},examples:[{title:"async/await",content:"const result = await github.activity.setNotificationThreadSubscription({id, subscribed, ignored})",type:"js"},{title:"Promise",content:"github.activity.setNotificationThreadSubscription({id, subscribed, ignored}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.setNotificationThreadSubscription({id, subscribed, ignored}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"PUT",url:"/repos/:owner/:repo/subscription",title:"setRepoSubscription",name:"setRepoSubscription",description:"<p>Set a Repository Subscription</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"boolean",optional:!0,field:"subscribed",description:"<p>Determines if notifications should be received from this repository.</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"ignored",description:"<p>Determines if all notifications should be blocked from this repository.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.activity.setRepoSubscription({owner, repo, subscribed, ignored})",type:"js"},{title:"Promise",content:"github.activity.setRepoSubscription({owner, repo, subscribed, ignored}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.setRepoSubscription({owner, repo, subscribed, ignored}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"PUT",url:"/user/starred/:owner/:repo",title:"starRepo",name:"starRepo",description:"<p>Star a repository</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""}]}},examples:[{title:"async/await",content:"const result = await github.activity.starRepo({owner, repo})",type:"js"},{title:"Promise",content:"github.activity.starRepo({owner, repo}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.starRepo({owner, repo}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"DELETE",url:"/user/starred/:owner/:repo",title:"unstarRepo",name:"unstarRepo",description:"<p>Unstar a repository</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""}]}},examples:[{title:"async/await",content:"const result = await github.activity.unstarRepo({owner, repo})",type:"js"},{title:"Promise",content:"github.activity.unstarRepo({owner, repo}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.unstarRepo({owner, repo}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"DELETE",url:"/repos/:owner/:repo/subscription",title:"unwatchRepo",name:"unwatchRepo",description:"<p>Unwatch a repository.</p>",group:"Activity",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""}]}},examples:[{title:"async/await",content:"const result = await github.activity.unwatchRepo({owner, repo})",type:"js"},{title:"Promise",content:"github.activity.unwatchRepo({owner, repo}).then(result => {})",type:"js"},{title:"Callback",content:"github.activity.unwatchRepo({owner, repo}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Activity"},{type:"PUT",url:"/installations/:installation_id/repositories/:repository_id",title:"addRepoToInstallation",name:"addRepoToInstallation",description:"<p>Add a single repository to an installation. (In preview period. See README.)</p>",group:"Apps",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"installation_id",description:""},{group:"Parameter",type:"string",optional:!1,field:"repository_id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.apps.addRepoToInstallation({installation_id, repository_id})",type:"js"},{title:"Promise",content:"github.apps.addRepoToInstallation({installation_id, repository_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.apps.addRepoToInstallation({installation_id, repository_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Apps"},{type:"GET",url:"/marketplace_listing/accounts/:id",title:"checkMarketplaceListingAccount",name:"checkMarketplaceListingAccount",description:"<p>Check if a GitHub account is associated with any Marketplace listing. (In preview period. See README.)</p>",group:"Apps",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.apps.checkMarketplaceListingAccount({id})",type:"js"},{title:"Promise",content:"github.apps.checkMarketplaceListingAccount({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.apps.checkMarketplaceListingAccount({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Apps"},{type:"GET",url:"/marketplace_listing/stubbed/accounts/:id",title:"checkMarketplaceListingStubbedAccount",name:"checkMarketplaceListingStubbedAccount",description:"<p>Check if a stubbed GitHub account is associated with any Marketplace listing. (In preview period. See README.)</p>",group:"Apps",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.apps.checkMarketplaceListingStubbedAccount({id})",type:"js"},{title:"Promise",content:"github.apps.checkMarketplaceListingStubbedAccount({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.apps.checkMarketplaceListingStubbedAccount({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Apps"},{type:"POST",url:"/installations/:installation_id/access_tokens",title:"createInstallationToken",name:"createInstallationToken",description:"<p>Create a new installation token. (In preview period. See README.)</p>",group:"Apps",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"installation_id",description:""},{group:"Parameter",type:"string",optional:!0,field:"user_id",description:"<p>The id of the user for whom the app is acting on behalf of.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.apps.createInstallationToken({installation_id, user_id})",type:"js"},{title:"Promise",content:"github.apps.createInstallationToken({installation_id, user_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.apps.createInstallationToken({installation_id, user_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Apps"},{type:"GET",url:"/app",title:"get",name:"get",description:"<p>Get the authenticated GitHub App. (In preview period. See README.)</p>",group:"Apps",examples:[{title:"async/await",content:"const result = await github.apps.get({})",type:"js"},{title:"Promise",content:"github.apps.get({}).then(result => {})",type:"js"},{title:"Callback",content:"github.apps.get({}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Apps"},{type:"GET",url:"/apps/:app_slug",title:"getForSlug",name:"getForSlug",description:"<p>Get a single GitHub App. (In preview period. See README.)</p>",group:"Apps",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"app_slug",description:"<p>The URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., https://github.com/settings/apps/:app_slug).</p>"}]}},examples:[{title:"async/await",content:"const result = await github.apps.getForSlug({app_slug})",type:"js"},{title:"Promise",content:"github.apps.getForSlug({app_slug}).then(result => {})",type:"js"},{title:"Callback",content:"github.apps.getForSlug({app_slug}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Apps"},{type:"GET",url:"/app/installations/:installation_id",title:"getInstallation",name:"getInstallation",description:"<p>Get a single installation. (In preview period. See README.)</p>",group:"Apps",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"installation_id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.apps.getInstallation({installation_id})",type:"js"},{title:"Promise",content:"github.apps.getInstallation({installation_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.apps.getInstallation({installation_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Apps"},{type:"GET",url:"/installation/repositories",title:"getInstallationRepositories",name:"getInstallationRepositories",description:"<p>List repositories that are accessible to the authenticated installation. (In preview period. See README.)</p>",group:"Apps",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!0,field:"user_id",description:"<p>The integer ID of a user, to filter results to repositories that are visible to both the installation and the given user.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.apps.getInstallationRepositories({user_id})",type:"js"},{title:"Promise",content:"github.apps.getInstallationRepositories({user_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.apps.getInstallationRepositories({user_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Apps"},{type:"GET",url:"/app/installations",title:"getInstallations",name:"getInstallations",description:"<p>List the app's installations. (In preview period. See README.)</p>",group:"Apps",parameter:{fields:{Parameter:[{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.apps.getInstallations({page, per_page})",type:"js"},{title:"Promise",content:"github.apps.getInstallations({page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.apps.getInstallations({page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Apps"},{type:"GET",url:"/marketplace_listing/plans/:id/accounts",title:"getMarketplaceListingPlanAccounts",name:"getMarketplaceListingPlanAccounts",description:"<p>List all GitHub accounts (user or organization) on a specific plan. (In preview period. See README.)</p>",group:"Apps",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.apps.getMarketplaceListingPlanAccounts({id, page, per_page})",type:"js"},{title:"Promise",content:"github.apps.getMarketplaceListingPlanAccounts({id, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.apps.getMarketplaceListingPlanAccounts({id, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Apps"},{type:"GET",url:"/marketplace_listing/plans",title:"getMarketplaceListingPlans",name:"getMarketplaceListingPlans",description:"<p>List all plans for your Marketplace listing. (In preview period. See README.)</p>",group:"Apps",parameter:{fields:{Parameter:[{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.apps.getMarketplaceListingPlans({page, per_page})",type:"js"},{title:"Promise",content:"github.apps.getMarketplaceListingPlans({page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.apps.getMarketplaceListingPlans({page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Apps"},{type:"GET",url:"/marketplace_listing/stubbed/plans/:id/accounts",title:"getMarketplaceListingStubbedPlanAccounts",name:"getMarketplaceListingStubbedPlanAccounts",description:"<p>List all GitHub accounts (user or organization) on a specific stubbed plan. (In preview period. See README.)</p>",group:"Apps",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.apps.getMarketplaceListingStubbedPlanAccounts({id, page, per_page})",type:"js"},{title:"Promise",content:"github.apps.getMarketplaceListingStubbedPlanAccounts({id, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.apps.getMarketplaceListingStubbedPlanAccounts({id, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Apps"},{type:"GET",url:"/marketplace_listing/stubbed/plans",title:"getMarketplaceListingStubbedPlans",name:"getMarketplaceListingStubbedPlans",description:"<p>List all stubbed plans for your Marketplace listing. (In preview period. See README.)</p>",group:"Apps",parameter:{fields:{Parameter:[{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.apps.getMarketplaceListingStubbedPlans({page, per_page})",type:"js"},{title:"Promise",content:"github.apps.getMarketplaceListingStubbedPlans({page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.apps.getMarketplaceListingStubbedPlans({page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Apps"},{type:"DELETE",url:"/installations/:installation_id/repositories/:repository_id",title:"removeRepoFromInstallation",name:"removeRepoFromInstallation",description:"<p>Remove a single repository from an installation. (In preview period. See README.)</p>",group:"Apps",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"installation_id",description:""},{group:"Parameter",type:"string",optional:!1,field:"repository_id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.apps.removeRepoFromInstallation({installation_id, repository_id})",type:"js"},{title:"Promise",content:"github.apps.removeRepoFromInstallation({installation_id, repository_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.apps.removeRepoFromInstallation({installation_id, repository_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Apps"},{type:"GET",url:"/applications/:client_id/tokens/:access_token",title:"check",name:"check",description:"<p>Check an authorization</p>",group:"Authorization",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"access_token",description:"<p>OAuth token</p>"},{group:"Parameter",type:"string",optional:!0,field:"client_id",description:"<p>The 20 character OAuth app client key for which to create the token.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.authorization.check({access_token, client_id})",type:"js"},{title:"Promise",content:"github.authorization.check({access_token, client_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.authorization.check({access_token, client_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Authorization"},{type:"POST",url:"/authorizations",title:"create",name:"create",description:"<p>Create a new authorization.</p>",group:"Authorization",parameter:{fields:{Parameter:[{group:"Parameter",type:"string[]",optional:!0,field:"scopes",description:"<p>A list of scopes that this authorization is in.</p>"},{group:"Parameter",type:"string",optional:!0,field:"note",description:"<p>A note to remind you what the OAuth token is for.</p>"},{group:"Parameter",type:"string",optional:!0,field:"note_url",description:"<p>A URL to remind you what app the OAuth token is for.</p>"},{group:"Parameter",type:"string",optional:!0,field:"client_id",description:"<p>The 20 character OAuth app client key for which to create the token.</p>"},{group:"Parameter",type:"string",optional:!0,field:"client_secret",description:"<p>The 40 character OAuth app client secret for which to create the token.</p>"},{group:"Parameter",type:"string",optional:!0,field:"fingerprint",description:"<p>A unique string to distinguish an authorization from others created for the same client ID and user.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.authorization.create({scopes, note, note_url, client_id, client_secret, fingerprint})",type:"js"},{title:"Promise",content:"github.authorization.create({scopes, note, note_url, client_id, client_secret, fingerprint}).then(result => {})",type:"js"},{title:"Callback",content:"github.authorization.create({scopes, note, note_url, client_id, client_secret, fingerprint}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Authorization"},{type:"DELETE",url:"/authorizations/:id",title:"delete",name:"delete",description:"<p>Delete an authorization.</p>",group:"Authorization",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.authorization.delete({id})",type:"js"},{title:"Promise",content:"github.authorization.delete({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.authorization.delete({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Authorization"},{type:"DELETE",url:"/applications/grants/:id",title:"deleteGrant",name:"deleteGrant",description:"<p>Delete a grant.</p>",group:"Authorization",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.authorization.deleteGrant({id})",type:"js"},{title:"Promise",content:"github.authorization.deleteGrant({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.authorization.deleteGrant({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Authorization"},{type:"GET",url:"/authorizations/:id",title:"get",name:"get",description:"<p>Get a single authorization.</p>",group:"Authorization",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.authorization.get({id})",type:"js"},{title:"Promise",content:"github.authorization.get({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.authorization.get({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Authorization"},{type:"GET",url:"/authorizations",title:"getAll",name:"getAll",description:"<p>List your authorizations.</p>",group:"Authorization",parameter:{fields:{Parameter:[{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.authorization.getAll({page, per_page})",type:"js"},{title:"Promise",content:"github.authorization.getAll({page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.authorization.getAll({page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Authorization"},{type:"GET",url:"/applications/grants/:id",title:"getGrant",name:"getGrant",description:"<p>Get a single grant.</p>",group:"Authorization",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.authorization.getGrant({id, page, per_page})",type:"js"},{title:"Promise",content:"github.authorization.getGrant({id, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.authorization.getGrant({id, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Authorization"},{type:"GET",url:"/applications/grants",title:"getGrants",name:"getGrants",description:"<p>List your grants.</p>",group:"Authorization",parameter:{fields:{Parameter:[{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.authorization.getGrants({page, per_page})",type:"js"},{title:"Promise",content:"github.authorization.getGrants({page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.authorization.getGrants({page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Authorization"},{type:"PUT",url:"/authorizations/clients/:client_id",title:"getOrCreateAuthorizationForApp",name:"getOrCreateAuthorizationForApp",description:"<p>Get or create an authorization for a specific app.</p>",group:"Authorization",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"client_secret",description:"<p>The 40 character OAuth app client secret associated with the client ID specified in the URL.</p>"},{group:"Parameter",type:"string",optional:!0,field:"client_id",description:"<p>The 20 character OAuth app client key for which to create the token.</p>"},{group:"Parameter",type:"string[]",optional:!0,field:"scopes",description:"<p>A list of scopes that this authorization is in.</p>"},{group:"Parameter",type:"string",optional:!0,field:"note",description:"<p>A note to remind you what the OAuth token is for.</p>"},{group:"Parameter",type:"string",optional:!0,field:"note_url",description:"<p>A URL to remind you what app the OAuth token is for.</p>"},{group:"Parameter",type:"string",optional:!0,field:"fingerprint",description:"<p>A unique string to distinguish an authorization from others created for the same client ID and user.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.authorization.getOrCreateAuthorizationForApp({client_secret, client_id, scopes, note, note_url, fingerprint})",type:"js"},{title:"Promise",content:"github.authorization.getOrCreateAuthorizationForApp({client_secret, client_id, scopes, note, note_url, fingerprint}).then(result => {})",type:"js"},{title:"Callback",content:"github.authorization.getOrCreateAuthorizationForApp({client_secret, client_id, scopes, note, note_url, fingerprint}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Authorization"},{type:"PUT",url:"/authorizations/clients/:client_id/:fingerprint",title:"getOrCreateAuthorizationForAppAndFingerprint",name:"getOrCreateAuthorizationForAppAndFingerprint",description:"<p>Get or create an authorization for a specific app and fingerprint.</p>",group:"Authorization",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"client_secret",description:"<p>The 40 character OAuth app client secret associated with the client ID specified in the URL.</p>"},{group:"Parameter",type:"string",optional:!0,field:"client_id",description:"<p>The 20 character OAuth app client key for which to create the token.</p>"},{group:"Parameter",type:"string",optional:!0,field:"fingerprint",description:"<p>A unique string to distinguish an authorization from others created for the same client ID and user.</p>"},{group:"Parameter",type:"string[]",optional:!0,field:"scopes",description:"<p>A list of scopes that this authorization is in.</p>"},{group:"Parameter",type:"string",optional:!0,field:"note",description:"<p>A note to remind you what the OAuth token is for.</p>"},{group:"Parameter",type:"string",optional:!0,field:"note_url",description:"<p>A URL to remind you what app the OAuth token is for.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.authorization.getOrCreateAuthorizationForAppAndFingerprint({client_secret, client_id, fingerprint, scopes, note, note_url})",type:"js"},{title:"Promise",content:"github.authorization.getOrCreateAuthorizationForAppAndFingerprint({client_secret, client_id, fingerprint, scopes, note, note_url}).then(result => {})",type:"js"},{title:"Callback",content:"github.authorization.getOrCreateAuthorizationForAppAndFingerprint({client_secret, client_id, fingerprint, scopes, note, note_url}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Authorization"},{type:"POST",url:"/applications/:client_id/tokens/:access_token",title:"reset",name:"reset",description:"<p>Reset an authorization</p>",group:"Authorization",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"access_token",description:"<p>OAuth token</p>"},{group:"Parameter",type:"string",optional:!0,field:"client_id",description:"<p>The 20 character OAuth app client key for which to create the token.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.authorization.reset({access_token, client_id})",type:"js"},{title:"Promise",content:"github.authorization.reset({access_token, client_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.authorization.reset({access_token, client_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Authorization"},{type:"DELETE",url:"/applications/:client_id/tokens/:access_token",title:"revoke",name:"revoke",description:"<p>Revoke an authorization for an application</p>",group:"Authorization",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"access_token",description:"<p>OAuth token</p>"},{group:"Parameter",type:"string",optional:!0,field:"client_id",description:"<p>The 20 character OAuth app client key for which to create the token.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.authorization.revoke({access_token, client_id})",type:"js"},{title:"Promise",content:"github.authorization.revoke({access_token, client_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.authorization.revoke({access_token, client_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Authorization"},{type:"DELETE",url:"/applications/:client_id/grants/:access_token",title:"revokeGrant",name:"revokeGrant",description:"<p>Revoke a grant for an application</p>",group:"Authorization",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"access_token",description:"<p>OAuth token</p>"},{group:"Parameter",type:"string",optional:!0,field:"client_id",description:"<p>The 20 character OAuth app client key for which to create the token.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.authorization.revokeGrant({access_token, client_id})",type:"js"},{title:"Promise",content:"github.authorization.revokeGrant({access_token, client_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.authorization.revokeGrant({access_token, client_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Authorization"},{type:"PATCH",url:"/authorizations/:id",title:"update",name:"update",description:"<p>Update an existing authorization.</p>",group:"Authorization",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string[]",optional:!0,field:"scopes",description:"<p>A list of scopes that this authorization is in.</p>"},{group:"Parameter",type:"string[]",optional:!0,field:"add_scopes",description:"<p>A list of scopes to add to this authorization.</p>"},{group:"Parameter",type:"string[]",optional:!0,field:"remove_scopes",description:"<p>A list of scopes to remove from this authorization.</p>"},{group:"Parameter",type:"string",optional:!0,field:"note",description:"<p>A note to remind you what the OAuth token is for.</p>"},{group:"Parameter",type:"string",optional:!0,field:"note_url",description:"<p>A URL to remind you what app the OAuth token is for.</p>"},{group:"Parameter",type:"string",optional:!0,field:"fingerprint",description:"<p>A unique string to distinguish an authorization from others created for the same client ID and user.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.authorization.update({id, scopes, add_scopes, remove_scopes, note, note_url, fingerprint})",type:"js"},{title:"Promise",content:"github.authorization.update({id, scopes, add_scopes, remove_scopes, note, note_url, fingerprint}).then(result => {})",type:"js"},{title:"Callback",content:"github.authorization.update({id, scopes, add_scopes, remove_scopes, note, note_url, fingerprint}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Authorization"},{success:{fields:{"Success 200":[{group:"Success 200",optional:!1,field:"varname1",description:"<p>No type.</p>"},{group:"Success 200",type:"String",optional:!1,field:"varname2",description:"<p>With type.</p> <p>@param {Object} fields</p>"}]}},type:"",url:"",version:"0.0.0",filename:"main.js",groupTitle:"D:\\my\\meri\\commitlint-bot-glitch-new\\rest.js-14.0.0\\main.js",group:"D:mymericommitlint-bot-glitch-newrest.js-14.0.0main.js",name:""},{type:"POST",url:"/admin/organizations",title:"createOrg",name:"createOrg",description:"<p>Create an organization</p>",group:"Enterprise",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"login",description:"<p>The organization's username.</p>"},{group:"Parameter",type:"string",optional:!1,field:"admin",description:"<p>The login of the user who will manage this organization.</p>"},{group:"Parameter",type:"string",optional:!0,field:"profile_name",description:"<p>The organization's display name.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.enterprise.createOrg({login, admin, profile_name})",type:"js"},{title:"Promise",content:"github.enterprise.createOrg({login, admin, profile_name}).then(result => {})",type:"js"},{title:"Callback",content:"github.enterprise.createOrg({login, admin, profile_name}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Enterprise"},{type:"POST",url:"/admin/pre_receive_environments",title:"createPreReceiveEnvironment",name:"createPreReceiveEnvironment",description:"<p>Create a pre-receive environment. (In preview period. See README.)</p>",group:"Enterprise",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"name",description:"<p>The new pre-receive environment's name.</p>"},{group:"Parameter",type:"string",optional:!1,field:"image_url",description:"<p>URL from which to download a tarball of this environment.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.enterprise.createPreReceiveEnvironment({name, image_url})",type:"js"},{title:"Promise",content:"github.enterprise.createPreReceiveEnvironment({name, image_url}).then(result => {})",type:"js"},{title:"Callback",content:"github.enterprise.createPreReceiveEnvironment({name, image_url}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Enterprise"},{type:"POST",url:"/admin/pre-receive-hooks",title:"createPreReceiveHook",name:"createPreReceiveHook",description:"<p>Create a pre-receive hook. (In preview period. See README.)</p>",group:"Enterprise",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"name",description:"<p>The name of the hook.</p>"},{group:"Parameter",type:"string",optional:!1,field:"script",description:"<p>The script that the hook runs.</p>"},{group:"Parameter",type:"json",optional:!1,field:"script_repository",description:"<p>The GitHub repository where the script is kept.</p>"},{group:"Parameter",type:"json",optional:!1,field:"environment",description:"<p>The pre-receive environment where the script is executed.</p>"},{group:"Parameter",type:"string",optional:!0,field:"enforcement",defaultValue:"disabled",description:"<p>The state of enforcement for this hook. default: disabled</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"allow_downstream_configuration",defaultValue:"false",description:"<p>Whether enforcement can be overridden at the org or repo level. default: false</p>"}]}},examples:[{title:"async/await",content:"const result = await github.enterprise.createPreReceiveHook({name, script, script_repository, environment, enforcement, allow_downstream_configuration})",type:"js"},{title:"Promise",content:"github.enterprise.createPreReceiveHook({name, script, script_repository, environment, enforcement, allow_downstream_configuration}).then(result => {})",type:"js"},{title:"Callback",content:"github.enterprise.createPreReceiveHook({name, script, script_repository, environment, enforcement, allow_downstream_configuration}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Enterprise"},{type:"DELETE",url:"/admin/pre_receive_environments/:id",title:"deletePreReceiveEnvironment",name:"deletePreReceiveEnvironment",description:"<p>Delete a pre-receive environment. (In preview period. See README.)</p>",group:"Enterprise",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.enterprise.deletePreReceiveEnvironment({id})",type:"js"},{title:"Promise",content:"github.enterprise.deletePreReceiveEnvironment({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.enterprise.deletePreReceiveEnvironment({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Enterprise"},{type:"DELETE",url:"/admin/pre_receive_hooks/:id",title:"deletePreReceiveHook",name:"deletePreReceiveHook",description:"<p>Delete a pre-receive hook. (In preview period. See README.)</p>",group:"Enterprise",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.enterprise.deletePreReceiveHook({id})",type:"js"},{title:"Promise",content:"github.enterprise.deletePreReceiveHook({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.enterprise.deletePreReceiveHook({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Enterprise"},{type:"PATCH",url:"/admin/pre_receive_environments/:id",title:"editPreReceiveEnvironment",name:"editPreReceiveEnvironment",description:"<p>Create a pre-receive environment. (In preview period. See README.)</p>",group:"Enterprise",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!1,field:"name",description:"<p>This pre-receive environment's new name.</p>"},{group:"Parameter",type:"string",optional:!1,field:"image_url",description:"<p>URL from which to download a tarball of this environment.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.enterprise.editPreReceiveEnvironment({id, name, image_url})",type:"js"},{title:"Promise",content:"github.enterprise.editPreReceiveEnvironment({id, name, image_url}).then(result => {})",type:"js"},{title:"Callback",content:"github.enterprise.editPreReceiveEnvironment({id, name, image_url}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Enterprise"},{type:"PATCH",url:"/admin/pre_receive_hooks/:id",title:"editPreReceiveHook",name:"editPreReceiveHook",description:"<p>Edit a pre-receive hook. (In preview period. See README.)</p>",group:"Enterprise",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"json",optional:!1,field:"hook",description:"<p>JSON object that contains pre-receive hook info.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.enterprise.editPreReceiveHook({id, hook})",type:"js"},{title:"Promise",content:"github.enterprise.editPreReceiveHook({id, hook}).then(result => {})",type:"js"},{title:"Callback",content:"github.enterprise.editPreReceiveHook({id, hook}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Enterprise"},{type:"GET",url:"/enterprise/settings/license",title:"getLicense",name:"getLicense",description:"<p>Get license information</p>",group:"Enterprise",examples:[{title:"async/await",content:"const result = await github.enterprise.getLicense({})",type:"js"},{title:"Promise",content:"github.enterprise.getLicense({}).then(result => {})",type:"js"},{title:"Callback",content:"github.enterprise.getLicense({}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Enterprise"},{type:"GET",url:"/admin/pre-receive-environments/:id",title:"getPreReceiveEnvironment",name:"getPreReceiveEnvironment",description:"<p>Get a single pre-receive environment. (In preview period. See README.)</p>",group:"Enterprise",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.enterprise.getPreReceiveEnvironment({id})",type:"js"},{title:"Promise",content:"github.enterprise.getPreReceiveEnvironment({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.enterprise.getPreReceiveEnvironment({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Enterprise"},{type:"GET",url:"/admin/pre-receive-environments/:id/downloads/latest",title:"getPreReceiveEnvironmentDownloadStatus",name:"getPreReceiveEnvironmentDownloadStatus",description:"<p>Get a pre-receive environment's download status. (In preview period. See README.)</p>",group:"Enterprise",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.enterprise.getPreReceiveEnvironmentDownloadStatus({id})",type:"js"},{title:"Promise",content:"github.enterprise.getPreReceiveEnvironmentDownloadStatus({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.enterprise.getPreReceiveEnvironmentDownloadStatus({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Enterprise"},{type:"GET",url:"/admin/pre_receive_environments",title:"getPreReceiveEnvironments",name:"getPreReceiveEnvironments",description:"<p>List pre-receive environments. (In preview period. See README.)</p>",group:"Enterprise",examples:[{title:"async/await",content:"const result = await github.enterprise.getPreReceiveEnvironments({})",type:"js"},{title:"Promise",content:"github.enterprise.getPreReceiveEnvironments({}).then(result => {})",type:"js"},{title:"Callback",content:"github.enterprise.getPreReceiveEnvironments({}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Enterprise"},{type:"GET",url:"/admin/pre-receive-hooks/:id",title:"getPreReceiveHook",name:"getPreReceiveHook",description:"<p>Get a single pre-receive hook. (In preview period. See README.)</p>",group:"Enterprise",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.enterprise.getPreReceiveHook({id})",type:"js"},{title:"Promise",content:"github.enterprise.getPreReceiveHook({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.enterprise.getPreReceiveHook({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Enterprise"},{type:"GET",url:"/admin/pre-receive-hooks",title:"getPreReceiveHooks",name:"getPreReceiveHooks",description:"<p>List pre-receive hooks. (In preview period. See README.)</p>",group:"Enterprise",examples:[{title:"async/await",content:"const result = await github.enterprise.getPreReceiveHooks({})",type:"js"},{title:"Promise",content:"github.enterprise.getPreReceiveHooks({}).then(result => {})",type:"js"},{title:"Callback",content:"github.enterprise.getPreReceiveHooks({}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Enterprise"},{type:"POST",url:"/staff/indexing_jobs",title:"queueIndexingJob",name:"queueIndexingJob",description:"<p>Queue an indexing job</p>",group:"Enterprise",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"target",description:"<p>A string representing the item to index.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.enterprise.queueIndexingJob({target})",type:"js"},{title:"Promise",content:"github.enterprise.queueIndexingJob({target}).then(result => {})",type:"js"},{title:"Callback",content:"github.enterprise.queueIndexingJob({target}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Enterprise"},{type:"GET",url:"/enterprise/stats/:type",title:"stats",name:"stats",description:"<p>Get statistics.</p>",group:"Enterprise",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",allowedValues:["issues","hooks","milestones","orgs","comments","pages","users","gists","pulls","repos","all"],optional:!1,field:"type",description:"<p>Possible values: issues, hooks, milestones, orgs, comments, pages, users, gists, pulls, repos, all.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.enterprise.stats({type})",type:"js"},{title:"Promise",content:"github.enterprise.stats({type}).then(result => {})",type:"js"},{title:"Callback",content:"github.enterprise.stats({type}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Enterprise"},{type:"POST",url:"/admin/ldap/teams/:team_id/sync",title:"syncLdapForTeam",name:"syncLdapForTeam",description:"<p>Sync LDAP mapping for a team.</p>",group:"Enterprise",parameter:{fields:{Parameter:[{group:"Parameter",type:"number",optional:!1,field:"team_id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.enterprise.syncLdapForTeam({team_id})",type:"js"},{title:"Promise",content:"github.enterprise.syncLdapForTeam({team_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.enterprise.syncLdapForTeam({team_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Enterprise"},{type:"POST",url:"/admin/ldap/users/:username/sync",title:"syncLdapForUser",name:"syncLdapForUser",description:"<p>Sync LDAP mapping for a user.</p>",group:"Enterprise",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.enterprise.syncLdapForUser({username})",type:"js"},{title:"Promise",content:"github.enterprise.syncLdapForUser({username}).then(result => {})",type:"js"},{title:"Callback",content:"github.enterprise.syncLdapForUser({username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Enterprise"},{type:"POST",url:"/admin/pre_receive_environments/:id/downloads",title:"triggerPreReceiveEnvironmentDownload",name:"triggerPreReceiveEnvironmentDownload",description:"<p>Trigger a pre-receive environment download. (In preview period. See README.)</p>",group:"Enterprise",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.enterprise.triggerPreReceiveEnvironmentDownload({id})",type:"js"},{title:"Promise",content:"github.enterprise.triggerPreReceiveEnvironmentDownload({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.enterprise.triggerPreReceiveEnvironmentDownload({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Enterprise"},{type:"PATCH",url:"/admin/ldap/teams/:team_id/mapping",title:"updateLdapForTeam",name:"updateLdapForTeam",description:"<p>Update LDAP mapping for a team.</p>",group:"Enterprise",parameter:{fields:{Parameter:[{group:"Parameter",type:"number",optional:!1,field:"team_id",description:""},{group:"Parameter",type:"string",optional:!1,field:"ldap_dn",description:"<p>LDAP DN for user</p>"}]}},examples:[{title:"async/await",content:"const result = await github.enterprise.updateLdapForTeam({team_id, ldap_dn})",type:"js"},{title:"Promise",content:"github.enterprise.updateLdapForTeam({team_id, ldap_dn}).then(result => {})",type:"js"},{title:"Callback",content:"github.enterprise.updateLdapForTeam({team_id, ldap_dn}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Enterprise"},{type:"PATCH",url:"/admin/ldap/users/:username/mapping",title:"updateLdapForUser",name:"updateLdapForUser",description:"<p>Update LDAP mapping for a user.</p>",group:"Enterprise",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""},{group:"Parameter",type:"string",optional:!1,field:"ldap_dn",description:"<p>LDAP DN for user</p>"}]}},examples:[{title:"async/await",content:"const result = await github.enterprise.updateLdapForUser({username, ldap_dn})",type:"js"},{title:"Promise",content:"github.enterprise.updateLdapForUser({username, ldap_dn}).then(result => {})",type:"js"},{title:"Callback",content:"github.enterprise.updateLdapForUser({username, ldap_dn}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Enterprise"},{type:"GET",url:"/gists/:id/star",title:"checkStar",name:"checkStar",description:"<p>Check if a gist is starred</p>",group:"Gists",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.gists.checkStar({id})",type:"js"},{title:"Promise",content:"github.gists.checkStar({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.gists.checkStar({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gists"},{type:"POST",url:"/gists",title:"create",name:"create",description:"<p>Create a gist</p>",group:"Gists",parameter:{fields:{Parameter:[{group:"Parameter",type:"json",optional:!1,field:"files",description:"<p>Files that make up this gist. The key of which should be a required string filename and the value another required hash with parameters: 'content'</p>"},{group:"Parameter",type:"boolean",optional:!1,field:"public",description:""},{group:"Parameter",type:"string",optional:!0,field:"description",description:""}]}},examples:[{title:"async/await",content:"const result = await github.gists.create({files, public, description})",type:"js"},{title:"Promise",content:"github.gists.create({files, public, description}).then(result => {})",type:"js"},{title:"Callback",content:"github.gists.create({files, public, description}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gists"},{type:"POST",url:"/gists/:gist_id/comments",title:"createComment",name:"createComment",description:"<p>Create a comment</p>",group:"Gists",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"gist_id",description:"<p>Id (SHA1 hash) of the gist.</p>"},{group:"Parameter",type:"string",optional:!1,field:"body",description:""}]}},examples:[{title:"async/await",content:"const result = await github.gists.createComment({gist_id, body})",type:"js"},{title:"Promise",content:"github.gists.createComment({gist_id, body}).then(result => {})",type:"js"},{title:"Callback",content:"github.gists.createComment({gist_id, body}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gists"},{type:"DELETE",url:"/gists/:id",title:"delete",name:"delete",description:"<p>Delete a gist</p>",group:"Gists",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.gists.delete({id})",type:"js"},{title:"Promise",content:"github.gists.delete({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.gists.delete({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gists"},{type:"DELETE",url:"/gists/:gist_id/comments/:id",title:"deleteComment",name:"deleteComment",description:"<p>Delete a comment</p>",group:"Gists",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"gist_id",description:"<p>Id (SHA1 hash) of the gist.</p>"},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.gists.deleteComment({gist_id, id})",type:"js"},{title:"Promise",content:"github.gists.deleteComment({gist_id, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.gists.deleteComment({gist_id, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gists"},{type:"PATCH",url:"/gists/:id",title:"edit",name:"edit",description:"<p>Edit a gist</p>",group:"Gists",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"json",optional:!1,field:"files",description:"<p>Files that make up this gist. The key of which should be a required string filename and the value another required hash with parameters: 'content'</p>"},{group:"Parameter",type:"string",optional:!0,field:"description",description:""},{group:"Parameter",type:"string",optional:!0,field:"content",description:"<p>Updated file contents.</p>"},{group:"Parameter",type:"string",optional:!0,field:"filename",description:"<p>New name for this file.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.gists.edit({id, files, description, content, filename})",type:"js"},{title:"Promise",content:"github.gists.edit({id, files, description, content, filename}).then(result => {})",type:"js"},{title:"Callback",content:"github.gists.edit({id, files, description, content, filename}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gists"},{type:"PATCH",url:"/gists/:gist_id/comments/:id",title:"editComment",name:"editComment",description:"<p>Edit a comment</p>",group:"Gists",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"gist_id",description:"<p>Id (SHA1 hash) of the gist.</p>"},{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!1,field:"body",description:""}]}},examples:[{title:"async/await",content:"const result = await github.gists.editComment({gist_id, id, body})",type:"js"},{title:"Promise",content:"github.gists.editComment({gist_id, id, body}).then(result => {})",type:"js"},{title:"Callback",content:"github.gists.editComment({gist_id, id, body}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gists"},{type:"POST",url:"/gists/:id/forks",title:"fork",name:"fork",description:"<p>Fork a gist</p>",group:"Gists",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.gists.fork({id})",type:"js"},{title:"Promise",content:"github.gists.fork({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.gists.fork({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gists"},{type:"GET",url:"/gists/:id",title:"get",name:"get",description:"<p>Get a single gist</p>",group:"Gists",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.gists.get({id})",type:"js"},{title:"Promise",content:"github.gists.get({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.gists.get({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gists"},{type:"GET",url:"/gists",title:"getAll",name:"getAll",description:"<p>List the authenticated user's gists or if called anonymously, this will return all public gists</p>",group:"Gists",parameter:{fields:{Parameter:[{group:"Parameter",type:"date",optional:!0,field:"since",description:"<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.gists.getAll({since, page, per_page})",type:"js"},{title:"Promise",content:"github.gists.getAll({since, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.gists.getAll({since, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gists"},{type:"GET",url:"/gists/:gist_id/comments/:id",title:"getComment",name:"getComment",description:"<p>Get a single comment</p>",group:"Gists",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"gist_id",description:"<p>Id (SHA1 hash) of the gist.</p>"},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.gists.getComment({gist_id, id})",type:"js"},{title:"Promise",content:"github.gists.getComment({gist_id, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.gists.getComment({gist_id, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gists"},{type:"GET",url:"/gists/:gist_id/comments",title:"getComments",name:"getComments",description:"<p>List comments on a gist</p>",group:"Gists",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"gist_id",description:"<p>Id (SHA1 hash) of the gist.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.gists.getComments({gist_id})",type:"js"},{title:"Promise",content:"github.gists.getComments({gist_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.gists.getComments({gist_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gists"},{type:"GET",url:"/gists/:id/commits",title:"getCommits",name:"getCommits",description:"<p>List gist commits</p>",group:"Gists",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.gists.getCommits({id})",type:"js"},{title:"Promise",content:"github.gists.getCommits({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.gists.getCommits({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gists"},{type:"GET",url:"/users/:username/gists",title:"getForUser",name:"getForUser",description:"<p>List a user's gists</p>",group:"Gists",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""},{group:"Parameter",type:"date",optional:!0,field:"since",description:"<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.gists.getForUser({username, since, page, per_page})",type:"js"},{title:"Promise",content:"github.gists.getForUser({username, since, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.gists.getForUser({username, since, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gists"},{type:"GET",url:"/gists/:id/forks",title:"getForks",name:"getForks",description:"<p>List gist forks</p>",group:"Gists",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.gists.getForks({id, page, per_page})",type:"js"},{title:"Promise",content:"github.gists.getForks({id, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.gists.getForks({id, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gists"},{type:"GET",url:"/gists/public",title:"getPublic",name:"getPublic",description:"<p>List all public gists</p>",group:"Gists",parameter:{fields:{Parameter:[{group:"Parameter",type:"date",optional:!0,field:"since",description:"<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"}]}},examples:[{title:"async/await",content:"const result = await github.gists.getPublic({since})",type:"js"},{title:"Promise",content:"github.gists.getPublic({since}).then(result => {})",type:"js"},{title:"Callback",content:"github.gists.getPublic({since}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gists"},{type:"GET",url:"/gists/:id/:sha",title:"getRevision",name:"getRevision",description:"<p>Get a specific revision of a gist</p>",group:"Gists",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!1,field:"sha",description:""}]}},examples:[{title:"async/await",content:"const result = await github.gists.getRevision({id, sha})",type:"js"},{title:"Promise",content:"github.gists.getRevision({id, sha}).then(result => {})",type:"js"},{title:"Callback",content:"github.gists.getRevision({id, sha}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gists"},{type:"GET",url:"/gists/starred",title:"getStarred",name:"getStarred",description:"<p>List the authenticated user's starred gists</p>",group:"Gists",parameter:{fields:{Parameter:[{group:"Parameter",type:"date",optional:!0,field:"since",description:"<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"}]}},examples:[{title:"async/await",content:"const result = await github.gists.getStarred({since})",type:"js"},{title:"Promise",content:"github.gists.getStarred({since}).then(result => {})",type:"js"},{title:"Callback",content:"github.gists.getStarred({since}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gists"},{type:"PUT",url:"/gists/:id/star",title:"star",name:"star",description:"<p>Star a gist</p>",group:"Gists",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.gists.star({id})",type:"js"},{title:"Promise",content:"github.gists.star({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.gists.star({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gists"},{type:"DELETE",url:"/gists/:id/star",title:"unstar",name:"unstar",description:"<p>Unstar a gist</p>",group:"Gists",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.gists.unstar({id})",type:"js"},{title:"Promise",content:"github.gists.unstar({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.gists.unstar({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gists"},{type:"POST",url:"/repos/:owner/:repo/git/blobs",title:"createBlob",name:"createBlob",description:"<p>Create a Blob</p>",group:"Gitdata",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"content",description:""},{group:"Parameter",type:"string",optional:!1,field:"encoding",description:""}]}},examples:[{title:"async/await",content:"const result = await github.gitdata.createBlob({owner, repo, content, encoding})",type:"js"},{title:"Promise",content:"github.gitdata.createBlob({owner, repo, content, encoding}).then(result => {})",type:"js"},{title:"Callback",content:"github.gitdata.createBlob({owner, repo, content, encoding}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gitdata"},{type:"POST",url:"/repos/:owner/:repo/git/commits",title:"createCommit",name:"createCommit",description:"<p>Create a Commit</p>",group:"Gitdata",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"message",description:"<p>String of the commit message</p>"},{group:"Parameter",type:"string",optional:!1,field:"tree",description:"<p>String of the SHA of the tree object this commit points to</p>"},{group:"Parameter",type:"string[]",optional:!1,field:"parents",description:"<p>Array of the SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root commit. For a single parent, an array of one SHA should be provided, for a merge commit, an array of more than one should be provided.</p>"},{group:"Parameter",type:"json",optional:!0,field:"author",description:""},{group:"Parameter",type:"json",optional:!0,field:"committer",description:""}]}},examples:[{title:"async/await",content:"const result = await github.gitdata.createCommit({owner, repo, message, tree, parents, author, committer})",type:"js"},{title:"Promise",content:"github.gitdata.createCommit({owner, repo, message, tree, parents, author, committer}).then(result => {})",type:"js"},{title:"Callback",content:"github.gitdata.createCommit({owner, repo, message, tree, parents, author, committer}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gitdata"},{type:"POST",url:"/repos/:owner/:repo/git/refs",title:"createReference",name:"createReference",description:"<p>Create a Reference</p>",group:"Gitdata",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"ref",description:"<p>The name of the fully qualified reference (ie: refs/heads/master). If it doesn't start with 'refs' and have at least two slashes, it will be rejected. NOTE: After creating the reference, on calling (get|update|delete)Reference, drop the leading 'refs/' when providing the 'ref' param.</p>"},{group:"Parameter",type:"string",optional:!1,field:"sha",description:""}]}},examples:[{title:"async/await",content:"const result = await github.gitdata.createReference({owner, repo, ref, sha})",type:"js"},{title:"Promise",content:"github.gitdata.createReference({owner, repo, ref, sha}).then(result => {})",type:"js"},{title:"Callback",content:"github.gitdata.createReference({owner, repo, ref, sha}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gitdata"},{type:"POST",url:"/repos/:owner/:repo/git/tags",title:"createTag",name:"createTag",description:"<p>Create a Tag Object</p>",group:"Gitdata",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"tag",description:"<p>String of the tag</p>"},{group:"Parameter",type:"string",optional:!1,field:"message",description:"<p>String of the tag message</p>"},{group:"Parameter",type:"string",optional:!1,field:"object",description:"<p>String of the SHA of the git object this is tagging</p>"},{group:"Parameter",type:"string",optional:!1,field:"type",description:"<p>String of the type of the object we\u2019re tagging. Normally this is a commit but it can also be a tree or a blob.</p>"},{group:"Parameter",type:"json",optional:!1,field:"tagger",description:"<p>JSON object that contains the following keys: <code>name</code> - String of the name of the author of the tag, <code>email</code> - String of the email of the author of the tag, <code>date</code> - Timestamp of when this object was tagged</p>"}]}},examples:[{title:"async/await",content:"const result = await github.gitdata.createTag({owner, repo, tag, message, object, type, tagger})",type:"js"},{title:"Promise",content:"github.gitdata.createTag({owner, repo, tag, message, object, type, tagger}).then(result => {})",type:"js"},{title:"Callback",content:"github.gitdata.createTag({owner, repo, tag, message, object, type, tagger}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gitdata"},{type:"POST",url:"/repos/:owner/:repo/git/trees",title:"createTree",name:"createTree",description:"<p>Create a Tree</p>",group:"Gitdata",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"json",optional:!1,field:"tree",description:"<p>Array of Hash objects (of path, mode, type and sha) specifying a tree structure</p>"},{group:"Parameter",type:"string",optional:!0,field:"base_tree",description:"<p>String of the SHA1 of the tree you want to update with new data</p>"}]}},examples:[{title:"async/await",content:"const result = await github.gitdata.createTree({owner, repo, tree, base_tree})",type:"js"},{title:"Promise",content:"github.gitdata.createTree({owner, repo, tree, base_tree}).then(result => {})",type:"js"},{title:"Callback",content:"github.gitdata.createTree({owner, repo, tree, base_tree}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gitdata"},{type:"DELETE",url:"/repos/:owner/:repo/git/refs/:ref",title:"deleteReference",name:"deleteReference",description:"<p>Delete a Reference</p>",group:"Gitdata",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"ref",description:"<p>String of the name of the fully qualified reference (ie: heads/master). If it doesn\u2019t have at least one slash, it will be rejected.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.gitdata.deleteReference({owner, repo, ref})",type:"js"},{title:"Promise",content:"github.gitdata.deleteReference({owner, repo, ref}).then(result => {})",type:"js"},{title:"Callback",content:"github.gitdata.deleteReference({owner, repo, ref}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gitdata"},{type:"GET",url:"/repos/:owner/:repo/git/blobs/:sha",title:"getBlob",name:"getBlob",description:"<p>Get a Blob</p>",group:"Gitdata",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"sha",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.gitdata.getBlob({owner, repo, sha, page, per_page})",type:"js"},{title:"Promise",content:"github.gitdata.getBlob({owner, repo, sha, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.gitdata.getBlob({owner, repo, sha, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gitdata"},{type:"GET",url:"/repos/:owner/:repo/git/commits/:sha",title:"getCommit",name:"getCommit",description:"<p>Get a Commit</p>",group:"Gitdata",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"sha",description:""}]}},examples:[{title:"async/await",content:"const result = await github.gitdata.getCommit({owner, repo, sha})",type:"js"},{title:"Promise",content:"github.gitdata.getCommit({owner, repo, sha}).then(result => {})",type:"js"},{title:"Callback",content:"github.gitdata.getCommit({owner, repo, sha}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gitdata"},{type:"GET",url:"/repos/:owner/:repo/git/commits/:sha",title:"getCommitSignatureVerification",name:"getCommitSignatureVerification",description:"<p>Get a Commit Signature Verification. (In preview period. See README.)</p>",group:"Gitdata",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"sha",description:""}]}},examples:[{title:"async/await",content:"const result = await github.gitdata.getCommitSignatureVerification({owner, repo, sha})",type:"js"},{title:"Promise",content:"github.gitdata.getCommitSignatureVerification({owner, repo, sha}).then(result => {})",type:"js"},{title:"Callback",content:"github.gitdata.getCommitSignatureVerification({owner, repo, sha}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gitdata"},{type:"GET",url:"/repos/:owner/:repo/git/refs/:ref",title:"getReference",name:"getReference",description:"<p>Get a Reference</p>",group:"Gitdata",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"ref",description:"<p>String of the name of the fully qualified reference (ie: heads/master). If it doesn\u2019t have at least one slash, it will be rejected.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.gitdata.getReference({owner, repo, ref})",type:"js"},{title:"Promise",content:"github.gitdata.getReference({owner, repo, ref}).then(result => {})",type:"js"},{title:"Callback",content:"github.gitdata.getReference({owner, repo, ref}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gitdata"},{type:"GET",url:"/repos/:owner/:repo/git/refs",title:"getReferences",name:"getReferences",description:"<p>Get all References</p>",group:"Gitdata",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.gitdata.getReferences({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.gitdata.getReferences({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.gitdata.getReferences({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gitdata"},{type:"GET",url:"/repos/:owner/:repo/git/tags/:sha",title:"getTag",name:"getTag",description:"<p>Get a Tag</p>",group:"Gitdata",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"sha",description:""}]}},examples:[{title:"async/await",content:"const result = await github.gitdata.getTag({owner, repo, sha})",type:"js"},{title:"Promise",content:"github.gitdata.getTag({owner, repo, sha}).then(result => {})",type:"js"},{title:"Callback",content:"github.gitdata.getTag({owner, repo, sha}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gitdata"},{type:"GET",url:"/repos/:owner/:repo/git/tags/:sha",title:"getTagSignatureVerification",name:"getTagSignatureVerification",description:"<p>Get a Tag Signature Verification. (In preview period. See README.)</p>",group:"Gitdata",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"sha",description:""}]}},examples:[{title:"async/await",content:"const result = await github.gitdata.getTagSignatureVerification({owner, repo, sha})",type:"js"},{title:"Promise",content:"github.gitdata.getTagSignatureVerification({owner, repo, sha}).then(result => {})",type:"js"},{title:"Callback",content:"github.gitdata.getTagSignatureVerification({owner, repo, sha}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gitdata"},{type:"GET",url:"/repos/:owner/:repo/git/refs/tags",title:"getTags",name:"getTags",description:"<p>Get all tag References</p>",group:"Gitdata",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.gitdata.getTags({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.gitdata.getTags({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.gitdata.getTags({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gitdata"},{type:"GET",url:"/repos/:owner/:repo/git/trees/:sha",title:"getTree",name:"getTree",description:"<p>Get a Tree</p>",group:"Gitdata",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"sha",description:""},{group:"Parameter",type:"boolean",optional:!0,field:"recursive",description:""}]}},examples:[{title:"async/await",content:"const result = await github.gitdata.getTree({owner, repo, sha, recursive})",type:"js"},{title:"Promise",content:"github.gitdata.getTree({owner, repo, sha, recursive}).then(result => {})",type:"js"},{title:"Callback",content:"github.gitdata.getTree({owner, repo, sha, recursive}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gitdata"},{type:"PATCH",url:"/repos/:owner/:repo/git/refs/:ref",title:"updateReference",name:"updateReference",description:"<p>Update a Reference</p>",group:"Gitdata",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"ref",description:"<p>String of the name of the fully qualified reference (ie: heads/master). If it doesn\u2019t have at least one slash, it will be rejected.</p>"},{group:"Parameter",type:"string",optional:!1,field:"sha",description:""},{group:"Parameter",type:"boolean",optional:!0,field:"force",defaultValue:"false",description:"<p>Boolean indicating whether to force the update or to make sure the update is a fast-forward update. The default is false, so leaving this out or setting it to false will make sure you\u2019re not overwriting work.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.gitdata.updateReference({owner, repo, ref, sha, force})",type:"js"},{title:"Promise",content:"github.gitdata.updateReference({owner, repo, ref, sha, force}).then(result => {})",type:"js"},{title:"Callback",content:"github.gitdata.updateReference({owner, repo, ref, sha, force}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Gitdata"},{type:"PUT",url:"/installations/:installation_id/repositories/:repository_id",title:"addRepoToInstallation",name:"addRepoToInstallation",description:"<p>Add a single repository to an installation. (In preview period. See README.)</p>",group:"Integrations",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"installation_id",description:""},{group:"Parameter",type:"string",optional:!1,field:"repository_id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.integrations.addRepoToInstallation({installation_id, repository_id})",type:"js"},{title:"Promise",content:"github.integrations.addRepoToInstallation({installation_id, repository_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.integrations.addRepoToInstallation({installation_id, repository_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Integrations"},{type:"POST",url:"/installations/:installation_id/access_tokens",title:"createInstallationToken",name:"createInstallationToken",description:"<p>Create a new installation token. (In preview period. See README.)</p>",group:"Integrations",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"installation_id",description:""},{group:"Parameter",type:"string",optional:!0,field:"user_id",description:"<p>The id of the user for whom the app is acting on behalf of.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.integrations.createInstallationToken({installation_id, user_id})",type:"js"},{title:"Promise",content:"github.integrations.createInstallationToken({installation_id, user_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.integrations.createInstallationToken({installation_id, user_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Integrations"},{type:"GET",url:"/installation/repositories",title:"getInstallationRepositories",name:"getInstallationRepositories",description:"<p>List repositories that are accessible to the authenticated installation. (In preview period. See README.)</p>",group:"Integrations",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!0,field:"user_id",description:"<p>The integer ID of a user, to filter results to repositories that are visible to both the installation and the given user.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.integrations.getInstallationRepositories({user_id})",type:"js"},{title:"Promise",content:"github.integrations.getInstallationRepositories({user_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.integrations.getInstallationRepositories({user_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Integrations"},{type:"GET",url:"/app/installations",title:"getInstallations",name:"getInstallations",description:"<p>List the app's installations. (In preview period. See README.)</p>",group:"Integrations",parameter:{fields:{Parameter:[{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.integrations.getInstallations({page, per_page})",type:"js"},{title:"Promise",content:"github.integrations.getInstallations({page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.integrations.getInstallations({page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Integrations"},{type:"DELETE",url:"/installations/:installation_id/repositories/:repository_id",title:"removeRepoFromInstallation",name:"removeRepoFromInstallation",description:"<p>Remove a single repository from an installation. (In preview period. See README.)</p>",group:"Integrations",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"installation_id",description:""},{group:"Parameter",type:"string",optional:!1,field:"repository_id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.integrations.removeRepoFromInstallation({installation_id, repository_id})",type:"js"},{title:"Promise",content:"github.integrations.removeRepoFromInstallation({installation_id, repository_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.integrations.removeRepoFromInstallation({installation_id, repository_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Integrations"},{type:"POST",url:"/repos/:owner/:repo/issues/:number/assignees",title:"addAssigneesToIssue",name:"addAssigneesToIssue",description:"<p>Add assignees to an issue.</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"string[]",optional:!1,field:"assignees",description:"<p>Logins for the users that should be added to the issue.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.issues.addAssigneesToIssue({owner, repo, number, assignees})",type:"js"},{title:"Promise",content:"github.issues.addAssigneesToIssue({owner, repo, number, assignees}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.addAssigneesToIssue({owner, repo, number, assignees}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"POST",url:"/repos/:owner/:repo/issues/:number/labels",title:"addLabels",name:"addLabels",description:"<p>Add labels to an issue</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"string[]",optional:!1,field:"labels",description:""}]}},examples:[{title:"async/await",content:"const result = await github.issues.addLabels({owner, repo, number, labels})",type:"js"},{title:"Promise",content:"github.issues.addLabels({owner, repo, number, labels}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.addLabels({owner, repo, number, labels}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"GET",url:"/repos/:owner/:repo/assignees/:assignee",title:"checkAssignee",name:"checkAssignee",description:"<p>Check assignee</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"assignee",description:"<p>Login for the user that this issue should be assigned to.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.issues.checkAssignee({owner, repo, assignee})",type:"js"},{title:"Promise",content:"github.issues.checkAssignee({owner, repo, assignee}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.checkAssignee({owner, repo, assignee}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"POST",url:"/repos/:owner/:repo/issues",title:"create",name:"create",description:"<p>Create an issue</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"title",description:""},{group:"Parameter",type:"string",optional:!0,field:"body",description:""},{group:"Parameter",type:"string",optional:!0,field:"assignee",description:"<p>Login for the user that this issue should be assigned to.</p>"},{group:"Parameter",type:"number",optional:!0,field:"milestone",description:"<p>Milestone to associate this issue with.</p>"},{group:"Parameter",type:"string[]",optional:!0,field:"labels",description:"<p>Array of strings - Labels to associate with this issue.</p>"},{group:"Parameter",type:"string[]",optional:!0,field:"assignees",description:"<p>Logins for Users to assign to this issue. NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.issues.create({owner, repo, title, body, assignee, milestone, labels, assignees})",type:"js"},{title:"Promise",content:"github.issues.create({owner, repo, title, body, assignee, milestone, labels, assignees}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.create({owner, repo, title, body, assignee, milestone, labels, assignees}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"POST",url:"/repos/:owner/:repo/issues/:number/comments",title:"createComment",name:"createComment",description:"<p>Create a comment</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"string",optional:!1,field:"body",description:""}]}},examples:[{title:"async/await",content:"const result = await github.issues.createComment({owner, repo, number, body})",type:"js"},{title:"Promise",content:"github.issues.createComment({owner, repo, number, body}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.createComment({owner, repo, number, body}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"POST",url:"/repos/:owner/:repo/labels",title:"createLabel",name:"createLabel",description:"<p>Create a label</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"name",description:""},{group:"Parameter",type:"string",optional:!1,field:"color",description:"<p>6 character hex code, without a leading #.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.issues.createLabel({owner, repo, name, color})",type:"js"},{title:"Promise",content:"github.issues.createLabel({owner, repo, name, color}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.createLabel({owner, repo, name, color}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"POST",url:"/repos/:owner/:repo/milestones",title:"createMilestone",name:"createMilestone",description:"<p>Create a milestone</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"title",description:""},{group:"Parameter",type:"string",allowedValues:["open","closed","all"],optional:!0,field:"state",defaultValue:"open",description:""},{group:"Parameter",type:"string",optional:!0,field:"description",description:""},{group:"Parameter",type:"date",optional:!0,field:"due_on",description:"<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"}]}},examples:[{title:"async/await",content:"const result = await github.issues.createMilestone({owner, repo, title, state, description, due_on})",type:"js"},{title:"Promise",content:"github.issues.createMilestone({owner, repo, title, state, description, due_on}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.createMilestone({owner, repo, title, state, description, due_on}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"DELETE",url:"/repos/:owner/:repo/issues/comments/:id",title:"deleteComment",name:"deleteComment",description:"<p>Delete a comment</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.issues.deleteComment({owner, repo, id})",type:"js"},{title:"Promise",content:"github.issues.deleteComment({owner, repo, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.deleteComment({owner, repo, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"DELETE",url:"/repos/:owner/:repo/labels/:name",title:"deleteLabel",name:"deleteLabel",description:"<p>Delete a label</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"name",description:""}]}},examples:[{title:"async/await",content:"const result = await github.issues.deleteLabel({owner, repo, name})",type:"js"},{title:"Promise",content:"github.issues.deleteLabel({owner, repo, name}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.deleteLabel({owner, repo, name}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"DELETE",url:"/repos/:owner/:repo/milestones/:number",title:"deleteMilestone",name:"deleteMilestone",description:"<p>Delete a milestone</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""}]}},examples:[{title:"async/await",content:"const result = await github.issues.deleteMilestone({owner, repo, number})",type:"js"},{title:"Promise",content:"github.issues.deleteMilestone({owner, repo, number}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.deleteMilestone({owner, repo, number}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"PATCH",url:"/repos/:owner/:repo/issues/:number",title:"edit",name:"edit",description:"<p>Edit an issue</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"string",optional:!0,field:"title",description:""},{group:"Parameter",type:"string",optional:!0,field:"body",description:""},{group:"Parameter",type:"string",optional:!0,field:"assignee",description:"<p>Login for the user that this issue should be assigned to.</p>"},{group:"Parameter",type:"string",allowedValues:["open","closed"],optional:!0,field:"state",defaultValue:"open",description:"<p>open or closed</p>"},{group:"Parameter",type:"number",optional:!0,field:"milestone",description:"<p>Milestone to associate this issue with.</p>"},{group:"Parameter",type:"string[]",optional:!0,field:"labels",description:"<p>Array of strings - Labels to associate with this issue.</p>"},{group:"Parameter",type:"string[]",optional:!0,field:"assignees",description:"<p>Logins for Users to assign to this issue. NOTE: Only users with push access can set assignees for new issues. Assignees are silently dropped otherwise.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.issues.edit({owner, repo, number, title, body, assignee, state, milestone, labels, assignees})",type:"js"},{title:"Promise",content:"github.issues.edit({owner, repo, number, title, body, assignee, state, milestone, labels, assignees}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.edit({owner, repo, number, title, body, assignee, state, milestone, labels, assignees}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"PATCH",url:"/repos/:owner/:repo/issues/comments/:id",title:"editComment",name:"editComment",description:"<p>Edit a comment</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!1,field:"body",description:""}]}},examples:[{title:"async/await",content:"const result = await github.issues.editComment({owner, repo, id, body})",type:"js"},{title:"Promise",content:"github.issues.editComment({owner, repo, id, body}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.editComment({owner, repo, id, body}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"GET",url:"/repos/:owner/:repo/issues/:number",title:"get",name:"get",description:"<p>Get a single issue</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""}]}},examples:[{title:"async/await",content:"const result = await github.issues.get({owner, repo, number})",type:"js"},{title:"Promise",content:"github.issues.get({owner, repo, number}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.get({owner, repo, number}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"GET",url:"/issues",title:"getAll",name:"getAll",description:"<p>List all issues across all the authenticated user's visible repositories including owned repositories, member repositories, and organization repositories</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",allowedValues:["all","assigned","created","mentioned","subscribed"],optional:!0,field:"filter",description:""},{group:"Parameter",type:"string",allowedValues:["open","closed","all"],optional:!0,field:"state",defaultValue:"open",description:"<p>open, closed, or all</p>"},{group:"Parameter",type:"string",optional:!0,field:"labels",description:"<p>String list of comma separated Label names. Example: bug,ui,@high</p>"},{group:"Parameter",type:"string",allowedValues:["created","updated","comments"],optional:!0,field:"sort",defaultValue:"created",description:""},{group:"Parameter",type:"string",allowedValues:["asc","desc"],optional:!0,field:"direction",defaultValue:"desc",description:""},{group:"Parameter",type:"date",optional:!0,field:"since",description:"<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.issues.getAll({filter, state, labels, sort, direction, since, page, per_page})",type:"js"},{title:"Promise",content:"github.issues.getAll({filter, state, labels, sort, direction, since, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.getAll({filter, state, labels, sort, direction, since, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"GET",url:"/repos/:owner/:repo/assignees",title:"getAssignees",name:"getAssignees",description:"<p>List assignees</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""}]}},examples:[{title:"async/await",content:"const result = await github.issues.getAssignees({owner, repo})",type:"js"},{title:"Promise",content:"github.issues.getAssignees({owner, repo}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.getAssignees({owner, repo}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"GET",url:"/repos/:owner/:repo/issues/comments/:id",title:"getComment",name:"getComment",description:"<p>Get a single comment</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.issues.getComment({owner, repo, id})",type:"js"},{title:"Promise",content:"github.issues.getComment({owner, repo, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.getComment({owner, repo, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"GET",url:"/repos/:owner/:repo/issues/:number/comments",title:"getComments",name:"getComments",description:"<p>List comments on an issue</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"date",optional:!0,field:"since",description:"<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.issues.getComments({owner, repo, number, since, page, per_page})",type:"js"},{title:"Promise",content:"github.issues.getComments({owner, repo, number, since, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.getComments({owner, repo, number, since, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"GET",url:"/repos/:owner/:repo/issues/comments",title:"getCommentsForRepo",name:"getCommentsForRepo",description:"<p>List comments in a repository</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",allowedValues:["created","updated"],optional:!0,field:"sort",defaultValue:"created",description:""},{group:"Parameter",type:"string",allowedValues:["asc","desc"],optional:!0,field:"direction",defaultValue:"desc",description:""},{group:"Parameter",type:"date",optional:!0,field:"since",description:"<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.issues.getCommentsForRepo({owner, repo, sort, direction, since, page, per_page})",type:"js"},{title:"Promise",content:"github.issues.getCommentsForRepo({owner, repo, sort, direction, since, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.getCommentsForRepo({owner, repo, sort, direction, since, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"GET",url:"/repos/:owner/:repo/issues/events/:id",title:"getEvent",name:"getEvent",description:"<p>Get a single event</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.issues.getEvent({owner, repo, id})",type:"js"},{title:"Promise",content:"github.issues.getEvent({owner, repo, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.getEvent({owner, repo, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"GET",url:"/repos/:owner/:repo/issues/:issue_number/events",title:"getEvents",name:"getEvents",description:"<p>List events for an issue</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"issue_number",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.issues.getEvents({owner, repo, issue_number, page, per_page})",type:"js"},{title:"Promise",content:"github.issues.getEvents({owner, repo, issue_number, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.getEvents({owner, repo, issue_number, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"GET",url:"/repos/:owner/:repo/issues/events",title:"getEventsForRepo",name:"getEventsForRepo",description:"<p>List events for a repository</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.issues.getEventsForRepo({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.issues.getEventsForRepo({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.getEventsForRepo({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"GET",url:"/repos/:owner/:repo/issues/:issue_number/timeline",title:"getEventsTimeline",name:"getEventsTimeline",description:"<p>List events for an issue. (In preview period. See README.)</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"issue_number",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.issues.getEventsTimeline({owner, repo, issue_number, page, per_page})",type:"js"},{title:"Promise",content:"github.issues.getEventsTimeline({owner, repo, issue_number, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.getEventsTimeline({owner, repo, issue_number, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"GET",url:"/orgs/:org/issues",title:"getForOrg",name:"getForOrg",description:"<p>List all issues for a given organization for the authenticated user</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",allowedValues:["all","assigned","created","mentioned","subscribed"],optional:!0,field:"filter",description:""},{group:"Parameter",type:"string",allowedValues:["open","closed","all"],optional:!0,field:"state",defaultValue:"open",description:"<p>open, closed, or all</p>"},{group:"Parameter",type:"string",optional:!0,field:"labels",description:"<p>String list of comma separated Label names. Example: bug,ui,@high</p>"},{group:"Parameter",type:"string",allowedValues:["created","updated","comments"],optional:!0,field:"sort",defaultValue:"created",description:""},{group:"Parameter",type:"string",allowedValues:["asc","desc"],optional:!0,field:"direction",defaultValue:"desc",description:""},{group:"Parameter",type:"date",optional:!0,field:"since",description:"<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.issues.getForOrg({org, filter, state, labels, sort, direction, since, page, per_page})",type:"js"},{title:"Promise",content:"github.issues.getForOrg({org, filter, state, labels, sort, direction, since, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.getForOrg({org, filter, state, labels, sort, direction, since, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"GET",url:"/repos/:owner/:repo/issues",title:"getForRepo",name:"getForRepo",description:"<p>List issues for a repository</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!0,field:"milestone",description:""},{group:"Parameter",type:"string",allowedValues:["open","closed","all"],optional:!0,field:"state",defaultValue:"open",description:"<p>open, closed, or all</p>"},{group:"Parameter",type:"string",optional:!0,field:"assignee",description:"<p>String User login, <code>none</code> for Issues with no assigned User. <code>*</code> for Issues with any assigned User.</p>"},{group:"Parameter",type:"string",optional:!0,field:"creator",description:"<p>The user that created the issue.</p>"},{group:"Parameter",type:"string",optional:!0,field:"mentioned",description:"<p>String User login.</p>"},{group:"Parameter",type:"string",optional:!0,field:"labels",description:"<p>String list of comma separated Label names. Example: bug,ui,@high</p>"},{group:"Parameter",type:"string",allowedValues:["created","updated","comments"],optional:!0,field:"sort",defaultValue:"created",description:""},{group:"Parameter",type:"string",allowedValues:["asc","desc"],optional:!0,field:"direction",defaultValue:"desc",description:""},{group:"Parameter",type:"date",optional:!0,field:"since",description:"<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.issues.getForRepo({owner, repo, milestone, state, assignee, creator, mentioned, labels, sort, direction, since, page, per_page})",type:"js"},{title:"Promise",content:"github.issues.getForRepo({owner, repo, milestone, state, assignee, creator, mentioned, labels, sort, direction, since, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.getForRepo({owner, repo, milestone, state, assignee, creator, mentioned, labels, sort, direction, since, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"GET",url:"/user/issues",title:"getForUser",name:"getForUser",description:"<p>List all issues across owned and member repositories for the authenticated user</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",allowedValues:["all","assigned","created","mentioned","subscribed"],optional:!0,field:"filter",description:""},{group:"Parameter",type:"string",allowedValues:["open","closed","all"],optional:!0,field:"state",defaultValue:"open",description:"<p>open, closed, or all</p>"},{group:"Parameter",type:"string",optional:!0,field:"labels",description:"<p>String list of comma separated Label names. Example: bug,ui,@high</p>"},{group:"Parameter",type:"string",allowedValues:["created","updated","comments"],optional:!0,field:"sort",defaultValue:"created",description:""},{group:"Parameter",type:"string",allowedValues:["asc","desc"],optional:!0,field:"direction",defaultValue:"desc",description:""},{group:"Parameter",type:"date",optional:!0,field:"since",description:"<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.issues.getForUser({filter, state, labels, sort, direction, since, page, per_page})",type:"js"},{title:"Promise",content:"github.issues.getForUser({filter, state, labels, sort, direction, since, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.getForUser({filter, state, labels, sort, direction, since, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"GET",url:"/repos/:owner/:repo/issues/:number/labels",title:"getIssueLabels",name:"getIssueLabels",description:"<p>List labels on an issue</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""}]}},examples:[{title:"async/await",content:"const result = await github.issues.getIssueLabels({owner, repo, number})",type:"js"},{title:"Promise",content:"github.issues.getIssueLabels({owner, repo, number}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.getIssueLabels({owner, repo, number}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"GET",url:"/repos/:owner/:repo/labels/:name",title:"getLabel",name:"getLabel",description:"<p>Get a single label</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"name",description:""}]}},examples:[{title:"async/await",content:"const result = await github.issues.getLabel({owner, repo, name})",type:"js"},{title:"Promise",content:"github.issues.getLabel({owner, repo, name}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.getLabel({owner, repo, name}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"GET",url:"/repos/:owner/:repo/labels",title:"getLabels",name:"getLabels",description:"<p>List all labels for this repository</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.issues.getLabels({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.issues.getLabels({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.getLabels({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"GET",url:"/repos/:owner/:repo/milestones/:number",title:"getMilestone",name:"getMilestone",description:"<p>Get a single milestone</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""}]}},examples:[{title:"async/await",content:"const result = await github.issues.getMilestone({owner, repo, number})",type:"js"},{title:"Promise",content:"github.issues.getMilestone({owner, repo, number}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.getMilestone({owner, repo, number}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"GET",url:"/repos/:owner/:repo/milestones/:number/labels",title:"getMilestoneLabels",name:"getMilestoneLabels",description:"<p>Get labels for every issue in a milestone</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""}]}},examples:[{title:"async/await",content:"const result = await github.issues.getMilestoneLabels({owner, repo, number})",type:"js"},{title:"Promise",content:"github.issues.getMilestoneLabels({owner, repo, number}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.getMilestoneLabels({owner, repo, number}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"GET",url:"/repos/:owner/:repo/milestones",title:"getMilestones",name:"getMilestones",description:"<p>List milestones for a repository</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",allowedValues:["open","closed","all"],optional:!0,field:"state",defaultValue:"open",description:""},{group:"Parameter",type:"string",allowedValues:["due_on","completeness"],optional:!0,field:"sort",defaultValue:"due_on",description:"<p>due_on, completeness, default: due_on</p>"},{group:"Parameter",type:"string",allowedValues:["asc","desc"],optional:!0,field:"direction",defaultValue:"asc",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.issues.getMilestones({owner, repo, state, sort, direction, page, per_page})",type:"js"},{title:"Promise",content:"github.issues.getMilestones({owner, repo, state, sort, direction, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.getMilestones({owner, repo, state, sort, direction, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"PUT",url:"/repos/:owner/:repo/issues/:number/lock",title:"lock",name:"lock",description:"<p>Users with push access can lock an issue's conversation.</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""}]}},examples:[{title:"async/await",content:"const result = await github.issues.lock({owner, repo, number})",type:"js"},{title:"Promise",content:"github.issues.lock({owner, repo, number}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.lock({owner, repo, number}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"DELETE",url:"/repos/:owner/:repo/issues/:number/labels",title:"removeAllLabels",name:"removeAllLabels",description:"<p>Remove all labels from an issue</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""}]}},examples:[{title:"async/await",content:"const result = await github.issues.removeAllLabels({owner, repo, number})",type:"js"},{title:"Promise",content:"github.issues.removeAllLabels({owner, repo, number}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.removeAllLabels({owner, repo, number}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"DELETE",url:"/repos/:owner/:repo/issues/:number/assignees",title:"removeAssigneesFromIssue",name:"removeAssigneesFromIssue",description:"<p>Remove assignees from an issue.</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"json",optional:!1,field:"body",description:""}]}},examples:[{title:"async/await",content:"const result = await github.issues.removeAssigneesFromIssue({owner, repo, number, body})",type:"js"},{title:"Promise",content:"github.issues.removeAssigneesFromIssue({owner, repo, number, body}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.removeAssigneesFromIssue({owner, repo, number, body}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"DELETE",url:"/repos/:owner/:repo/issues/:number/labels/:name",title:"removeLabel",name:"removeLabel",description:"<p>Remove a label from an issue</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"string",optional:!1,field:"name",description:""}]}},examples:[{title:"async/await",content:"const result = await github.issues.removeLabel({owner, repo, number, name})",type:"js"},{title:"Promise",content:"github.issues.removeLabel({owner, repo, number, name}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.removeLabel({owner, repo, number, name}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"PUT",url:"/repos/:owner/:repo/issues/:number/labels",title:"replaceAllLabels",name:"replaceAllLabels",description:"<p>Replace all labels for an issue</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"string[]",optional:!1,field:"labels",description:"<p>Sending an empty array ([]) will remove all Labels from the Issue.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.issues.replaceAllLabels({owner, repo, number, labels})",type:"js"},{title:"Promise",content:"github.issues.replaceAllLabels({owner, repo, number, labels}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.replaceAllLabels({owner, repo, number, labels}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"DELETE",url:"/repos/:owner/:repo/issues/:number/lock",title:"unlock",name:"unlock",description:"<p>Users with push access can unlock an issue's conversation.</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""}]}},examples:[{title:"async/await",content:"const result = await github.issues.unlock({owner, repo, number})",type:"js"},{title:"Promise",content:"github.issues.unlock({owner, repo, number}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.unlock({owner, repo, number}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"PATCH",url:"/repos/:owner/:repo/labels/:oldname",title:"updateLabel",name:"updateLabel",description:"<p>Update a label</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"oldname",description:"<p>The old name of the label.</p>"},{group:"Parameter",type:"string",optional:!1,field:"name",description:"<p>The new name of the label.</p>"},{group:"Parameter",type:"string",optional:!1,field:"color",description:"<p>6 character hex code, without a leading #.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.issues.updateLabel({owner, repo, oldname, name, color})",type:"js"},{title:"Promise",content:"github.issues.updateLabel({owner, repo, oldname, name, color}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.updateLabel({owner, repo, oldname, name, color}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"PATCH",url:"/repos/:owner/:repo/milestones/:number",title:"updateMilestone",name:"updateMilestone",description:"<p>Update a milestone</p>",group:"Issues",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"string",optional:!1,field:"title",description:""},{group:"Parameter",type:"string",allowedValues:["open","closed","all"],optional:!0,field:"state",defaultValue:"open",description:""},{group:"Parameter",type:"string",optional:!0,field:"description",description:""},{group:"Parameter",type:"date",optional:!0,field:"due_on",description:"<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"}]}},examples:[{title:"async/await",content:"const result = await github.issues.updateMilestone({owner, repo, number, title, state, description, due_on})",type:"js"},{title:"Promise",content:"github.issues.updateMilestone({owner, repo, number, title, state, description, due_on}).then(result => {})",type:"js"},{title:"Callback",content:"github.issues.updateMilestone({owner, repo, number, title, state, description, due_on}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Issues"},{type:"DELETE",url:"/repos/:owner/:repo/import",title:"cancelImport",name:"cancelImport",description:"<p>Cancel an import. (In preview period. See README.)</p>",group:"Migrations",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""}]}},examples:[{title:"async/await",content:"const result = await github.migrations.cancelImport({owner, repo})",type:"js"},{title:"Promise",content:"github.migrations.cancelImport({owner, repo}).then(result => {})",type:"js"},{title:"Callback",content:"github.migrations.cancelImport({owner, repo}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Migrations"},{type:"DELETE",url:"/orgs/:org/migrations/:id/archive",title:"deleteMigrationArchive",name:"deleteMigrationArchive",description:"<p>Delete a migration archive. (In preview period. See README.)</p>",group:"Migrations",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.migrations.deleteMigrationArchive({org, id})",type:"js"},{title:"Promise",content:"github.migrations.deleteMigrationArchive({org, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.migrations.deleteMigrationArchive({org, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Migrations"},{type:"GET",url:"/repos/:owner/:repo/import/authors",title:"getImportCommitAuthors",name:"getImportCommitAuthors",description:"<p>Get import commit authors. (In preview period. See README.)</p>",group:"Migrations",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!0,field:"since",description:"<p>Only authors found after this id are returned. Provide the highest author ID you've seen so far. New authors may be added to the list at any point while the importer is performing the raw step.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.migrations.getImportCommitAuthors({owner, repo, since})",type:"js"},{title:"Promise",content:"github.migrations.getImportCommitAuthors({owner, repo, since}).then(result => {})",type:"js"},{title:"Callback",content:"github.migrations.getImportCommitAuthors({owner, repo, since}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Migrations"},{type:"GET",url:"/repos/:owner/:repo/import",title:"getImportProgress",name:"getImportProgress",description:"<p>Get import progress. (In preview period. See README.)</p>",group:"Migrations",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""}]}},examples:[{title:"async/await",content:"const result = await github.migrations.getImportProgress({owner, repo})",type:"js"},{title:"Promise",content:"github.migrations.getImportProgress({owner, repo}).then(result => {})",type:"js"},{title:"Callback",content:"github.migrations.getImportProgress({owner, repo}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Migrations"},{type:"GET",url:"/:owner/:name/import/large_files",title:"getLargeImportFiles",name:"getLargeImportFiles",description:"<p>List files larger than 100MB found during the import. (In preview period. See README.)</p>",group:"Migrations",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"name",description:""}]}},examples:[{title:"async/await",content:"const result = await github.migrations.getLargeImportFiles({owner, name})",type:"js"},{title:"Promise",content:"github.migrations.getLargeImportFiles({owner, name}).then(result => {})",type:"js"},{title:"Callback",content:"github.migrations.getLargeImportFiles({owner, name}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Migrations"},{type:"GET",url:"/orgs/:org/migrations/:id/archive",title:"getMigrationArchiveLink",name:"getMigrationArchiveLink",description:"<p>Get the URL to a migration archive. (In preview period. See README.)</p>",group:"Migrations",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.migrations.getMigrationArchiveLink({org, id})",type:"js"},{title:"Promise",content:"github.migrations.getMigrationArchiveLink({org, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.migrations.getMigrationArchiveLink({org, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Migrations"},{type:"GET",url:"/orgs/:org/migrations/:id",title:"getMigrationStatus",name:"getMigrationStatus",description:"<p>Get the status of a migration. (In preview period. See README.)</p>",group:"Migrations",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.migrations.getMigrationStatus({org, id})",type:"js"},{title:"Promise",content:"github.migrations.getMigrationStatus({org, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.migrations.getMigrationStatus({org, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Migrations"},{type:"GET",url:"/orgs/:org/migrations",title:"getMigrations",name:"getMigrations",description:"<p>Get a list of migrations. (In preview period. See README.)</p>",group:"Migrations",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.migrations.getMigrations({org, page, per_page})",type:"js"},{title:"Promise",content:"github.migrations.getMigrations({org, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.migrations.getMigrations({org, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Migrations"},{type:"PATCH",url:"/repos/:owner/:repo/import/authors/:author_id",title:"mapImportCommitAuthor",name:"mapImportCommitAuthor",description:"<p>Map a commit author. (In preview period. See README.)</p>",group:"Migrations",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"author_id",description:"<p>The commit author id.</p>"},{group:"Parameter",type:"string",optional:!0,field:"email",description:"<p>The new Git author email.</p>"},{group:"Parameter",type:"string",optional:!0,field:"name",description:"<p>The new Git author name.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.migrations.mapImportCommitAuthor({owner, repo, author_id, email, name})",type:"js"},{title:"Promise",content:"github.migrations.mapImportCommitAuthor({owner, repo, author_id, email, name}).then(result => {})",type:"js"},{title:"Callback",content:"github.migrations.mapImportCommitAuthor({owner, repo, author_id, email, name}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Migrations"},{type:"PATCH",url:"/:owner/:name/import/lfs",title:"setImportLfsPreference",name:"setImportLfsPreference",description:"<p>Set import LFS preference. (In preview period. See README.)</p>",group:"Migrations",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"name",description:""},{group:"Parameter",type:"string",optional:!1,field:"use_lfs",description:"<p>Can be one of <code>opt_in</code> (large files will be stored using Git LFS) or <code>opt_out</code> (large files will be removed during the import).</p>"}]}},examples:[{title:"async/await",content:"const result = await github.migrations.setImportLfsPreference({owner, name, use_lfs})",type:"js"},{title:"Promise",content:"github.migrations.setImportLfsPreference({owner, name, use_lfs}).then(result => {})",type:"js"},{title:"Callback",content:"github.migrations.setImportLfsPreference({owner, name, use_lfs}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Migrations"},{type:"PUT",url:"/repos/:owner/:repo/import",title:"startImport",name:"startImport",description:"<p>Start an import. (In preview period. See README.)</p>",group:"Migrations",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"vcs_url",description:"<p>The URL of the originating repository.</p>"},{group:"Parameter",type:"string",allowedValues:["subversion","git","mercurial","tfvc"],optional:!0,field:"vcs",description:"<p>The originating VCS type. Please be aware that without this parameter, the import job will take additional time to detect the VCS type before beginning the import. This detection step will be reflected in the response.</p>"},{group:"Parameter",type:"string",optional:!0,field:"vcs_username",description:"<p>If authentication is required, the username to provide to vcs_url.</p>"},{group:"Parameter",type:"string",optional:!0,field:"vcs_password",description:"<p>If authentication is required, the password to provide to vcs_url.</p>"},{group:"Parameter",type:"string",optional:!0,field:"tfvc_project",description:"<p>For a tfvc import, the name of the project that is being imported.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.migrations.startImport({owner, repo, vcs_url, vcs, vcs_username, vcs_password, tfvc_project})",type:"js"},{title:"Promise",content:"github.migrations.startImport({owner, repo, vcs_url, vcs, vcs_username, vcs_password, tfvc_project}).then(result => {})",type:"js"},{title:"Callback",content:"github.migrations.startImport({owner, repo, vcs_url, vcs, vcs_username, vcs_password, tfvc_project}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Migrations"},{type:"POST",url:"/orgs/:org/migrations",title:"startMigration",name:"startMigration",description:"<p>Start a migration. (In preview period. See README.)</p>",group:"Migrations",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string[]",optional:!1,field:"repositories",description:"<p>A list of arrays indicating which repositories should be migrated.</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"lock_repositories",defaultValue:"false",description:"<p>Indicates whether repositories should be locked (to prevent manipulation) while migrating data. Default: false.</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"exclude_attachments",defaultValue:"false",description:"<p>Indicates whether attachments should be excluded from the migration (to reduce migration archive file size). Default: false.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.migrations.startMigration({org, repositories, lock_repositories, exclude_attachments})",type:"js"},{title:"Promise",content:"github.migrations.startMigration({org, repositories, lock_repositories, exclude_attachments}).then(result => {})",type:"js"},{title:"Callback",content:"github.migrations.startMigration({org, repositories, lock_repositories, exclude_attachments}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Migrations"},{type:"DELETE",url:"/orgs/:org/migrations/:id/repos/:repo_name/lock",title:"unlockRepoLockedForMigration",name:"unlockRepoLockedForMigration",description:"<p>Unlock a repository that was locked for migration. (In preview period. See README.)</p>",group:"Migrations",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo_name",description:""}]}},examples:[{title:"async/await",content:"const result = await github.migrations.unlockRepoLockedForMigration({org, id, repo_name})",type:"js"},{title:"Promise",content:"github.migrations.unlockRepoLockedForMigration({org, id, repo_name}).then(result => {})",type:"js"},{title:"Callback",content:"github.migrations.unlockRepoLockedForMigration({org, id, repo_name}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Migrations"},{type:"PATCH",url:"/repos/:owner/:repo/import",title:"updateImport",name:"updateImport",description:"<p>Update existing import. (In preview period. See README.)</p>",group:"Migrations",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!0,field:"vcs_username",description:"<p>The username to provide to the originating repository.</p>"},{group:"Parameter",type:"string",optional:!0,field:"vcs_password",description:"<p>The password to provide to the originating repository.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.migrations.updateImport({owner, repo, vcs_username, vcs_password})",type:"js"},{title:"Promise",content:"github.migrations.updateImport({owner, repo, vcs_username, vcs_password}).then(result => {})",type:"js"},{title:"Callback",content:"github.migrations.updateImport({owner, repo, vcs_username, vcs_password}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Migrations"},{type:"GET",url:"/codes_of_conduct/:key",title:"getCodeOfConduct",name:"getCodeOfConduct",description:"<p>Get an code of conduct. (In preview period. See README.)</p>",group:"Misc",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"key",description:"<p>Ex: contributor_covenant</p>"}]}},examples:[{title:"async/await",content:"const result = await github.misc.getCodeOfConduct({key})",type:"js"},{title:"Promise",content:"github.misc.getCodeOfConduct({key}).then(result => {})",type:"js"},{title:"Callback",content:"github.misc.getCodeOfConduct({key}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Misc"},{type:"GET",url:"/codes_of_conduct",title:"getCodesOfConduct",name:"getCodesOfConduct",description:"<p>List all codes of conduct. (In preview period. See README.)</p>",group:"Misc",examples:[{title:"async/await",content:"const result = await github.misc.getCodesOfConduct({})",type:"js"},{title:"Promise",content:"github.misc.getCodesOfConduct({}).then(result => {})",type:"js"},{title:"Callback",content:"github.misc.getCodesOfConduct({}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Misc"},{type:"GET",url:"/emojis",title:"getEmojis",name:"getEmojis",description:"<p>Lists all the emojis available to use on GitHub.</p>",group:"Misc",examples:[{title:"async/await",content:"const result = await github.misc.getEmojis({})",type:"js"},{title:"Promise",content:"github.misc.getEmojis({}).then(result => {})",type:"js"},{title:"Callback",content:"github.misc.getEmojis({}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Misc"},{type:"GET",url:"/gitignore/templates/:name",title:"getGitignoreTemplate",name:"getGitignoreTemplate",description:"<p>Get a single gitignore template</p>",group:"Misc",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"name",description:"<p>The name of the .gitignore template to get e.g. 'C'</p>"}]}},examples:[{title:"async/await",content:"const result = await github.misc.getGitignoreTemplate({name})",type:"js"},{title:"Promise",content:"github.misc.getGitignoreTemplate({name}).then(result => {})",type:"js"},{title:"Callback",content:"github.misc.getGitignoreTemplate({name}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Misc"},{type:"GET",url:"/gitignore/templates",title:"getGitignoreTemplates",name:"getGitignoreTemplates",description:"<p>Lists available gitignore templates</p>",group:"Misc",examples:[{title:"async/await",content:"const result = await github.misc.getGitignoreTemplates({})",type:"js"},{title:"Promise",content:"github.misc.getGitignoreTemplates({}).then(result => {})",type:"js"},{title:"Callback",content:"github.misc.getGitignoreTemplates({}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Misc"},{type:"GET",url:"/licenses/:license",title:"getLicense",name:"getLicense",description:"<p>Get an individual license. (In preview period. See README.)</p>",group:"Misc",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"license",description:"<p>Ex: /licenses/mit</p>"}]}},examples:[{title:"async/await",content:"const result = await github.misc.getLicense({license})",type:"js"},{title:"Promise",content:"github.misc.getLicense({license}).then(result => {})",type:"js"},{title:"Callback",content:"github.misc.getLicense({license}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Misc"},{type:"GET",url:"/licenses",title:"getLicenses",name:"getLicenses",description:"<p>List all licenses. (In preview period. See README.)</p>",group:"Misc",examples:[{title:"async/await",content:"const result = await github.misc.getLicenses({})",type:"js"},{title:"Promise",content:"github.misc.getLicenses({}).then(result => {})",type:"js"},{title:"Callback",content:"github.misc.getLicenses({}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Misc"},{type:"GET",url:"/meta",title:"getMeta",name:"getMeta",description:"<p>This endpoint provides information about GitHub.com, the service. Or, if you access this endpoint on your organization's GitHub Enterprise installation, this endpoint provides information about that installation.</p>",group:"Misc",examples:[{title:"async/await",content:"const result = await github.misc.getMeta({})",type:"js"},{title:"Promise",content:"github.misc.getMeta({}).then(result => {})",type:"js"},{title:"Callback",content:"github.misc.getMeta({}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Misc"},{type:"GET",url:"/rate_limit",title:"getRateLimit",name:"getRateLimit",description:"<p>Get your current rate limit status</p>",group:"Misc",examples:[{title:"async/await",content:"const result = await github.misc.getRateLimit({})",type:"js"},{title:"Promise",content:"github.misc.getRateLimit({}).then(result => {})",type:"js"},{title:"Callback",content:"github.misc.getRateLimit({}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Misc"},{type:"GET",url:"/repos/:owner/:repo/community/code_of_conduct",title:"getRepoCodeOfConduct",name:"getRepoCodeOfConduct",description:"<p>Get the contents of a repository's code of conduct. (In preview period. See README.)</p>",group:"Misc",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""}]}},examples:[{title:"async/await",content:"const result = await github.misc.getRepoCodeOfConduct({owner, repo})",type:"js"},{title:"Promise",content:"github.misc.getRepoCodeOfConduct({owner, repo}).then(result => {})",type:"js"},{title:"Callback",content:"github.misc.getRepoCodeOfConduct({owner, repo}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Misc"},{type:"GET",url:"/repos/:owner/:repo/license",title:"getRepoLicense",name:"getRepoLicense",description:"<p>Get the contents of a repository's license. (In preview period. See README.)</p>",group:"Misc",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""}]}},examples:[{title:"async/await",content:"const result = await github.misc.getRepoLicense({owner, repo})",type:"js"},{title:"Promise",content:"github.misc.getRepoLicense({owner, repo}).then(result => {})",type:"js"},{title:"Callback",content:"github.misc.getRepoLicense({owner, repo}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Misc"},{type:"POST",url:"/markdown",title:"renderMarkdown",name:"renderMarkdown",description:"<p>Render an arbitrary Markdown document</p>",group:"Misc",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"text",description:"<p>The Markdown text to render</p>"},{group:"Parameter",type:"string",allowedValues:["markdown","gfm"],optional:!0,field:"mode",defaultValue:"markdown",description:"<p>The rendering mode, <code>markdown</code> to render a document as plain Markdown, just like README files are rendered. <code>gfm</code> to render a document as user-content, e.g. like user comments or issues are rendered. In GFM mode, hard line breaks are always taken into account, and issue and user mentions are linked accordingly.</p>"},{group:"Parameter",type:"string",optional:!0,field:"context",description:"<p>The repository context. Only taken into account when rendering as <code>gfm</code></p>"}]}},examples:[{title:"async/await",content:"const result = await github.misc.renderMarkdown({text, mode, context})",type:"js"},{title:"Promise",content:"github.misc.renderMarkdown({text, mode, context}).then(result => {})",type:"js"},{title:"Callback",content:"github.misc.renderMarkdown({text, mode, context}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Misc"},{type:"POST",url:"/markdown/raw",title:"renderMarkdownRaw",name:"renderMarkdownRaw",description:"<p>Render a Markdown document in raw mode</p>",group:"Misc",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"data",description:"<p>Raw data to send as the body of the request</p>"}]}},examples:[{title:"async/await",content:"const result = await github.misc.renderMarkdownRaw({data})",type:"js"},{title:"Promise",content:"github.misc.renderMarkdownRaw({data}).then(result => {})",type:"js"},{title:"Callback",content:"github.misc.renderMarkdownRaw({data}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Misc"},{type:"PUT",url:"/orgs/:org/memberships/:username",title:"addOrgMembership",name:"addOrgMembership",description:"<p>Add or update organization membership</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"username",description:""},{group:"Parameter",type:"string",allowedValues:["admin","member"],optional:!1,field:"role",defaultValue:"member",description:"<p>The role to give the user in the organization.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.orgs.addOrgMembership({org, username, role})",type:"js"},{title:"Promise",content:"github.orgs.addOrgMembership({org, username, role}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.addOrgMembership({org, username, role}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"PUT",url:"/teams/:id/memberships/:username",title:"addTeamMembership",name:"addTeamMembership",description:"<p>Add team membership</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!1,field:"username",description:""},{group:"Parameter",type:"string",allowedValues:["member","maintainer"],optional:!0,field:"role",defaultValue:"member",description:"<p>The role that this user should have in the team.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.orgs.addTeamMembership({id, username, role})",type:"js"},{title:"Promise",content:"github.orgs.addTeamMembership({id, username, role}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.addTeamMembership({id, username, role}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"PUT",url:"/teams/:id/repos/:org/:repo",title:"addTeamRepo",name:"addTeamRepo",description:"<p>Add team repository</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",allowedValues:["pull","push","admin"],optional:!0,field:"permission",description:"<p><code>pull</code> - team members can pull, but not push or administer this repository, <code>push</code> - team members can pull and push, but not administer this repository, <code>admin</code> - team members can pull, push and administer this repository.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.orgs.addTeamRepo({id, org, repo, permission})",type:"js"},{title:"Promise",content:"github.orgs.addTeamRepo({id, org, repo, permission}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.addTeamRepo({id, org, repo, permission}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"PUT",url:"/orgs/:org/blocks/:username",title:"blockUser",name:"blockUser",description:"<p>Block a user. (In preview period. See README.)</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.orgs.blockUser({org, username})",type:"js"},{title:"Promise",content:"github.orgs.blockUser({org, username}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.blockUser({org, username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"GET",url:"/orgs/:org/blocks/:username",title:"checkBlockedUser",name:"checkBlockedUser",description:"<p>Check whether you've blocked a user. (In preview period. See README.)</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.orgs.checkBlockedUser({org, username})",type:"js"},{title:"Promise",content:"github.orgs.checkBlockedUser({org, username}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.checkBlockedUser({org, username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"GET",url:"/orgs/:org/members/:username",title:"checkMembership",name:"checkMembership",description:"<p>Check membership</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.orgs.checkMembership({org, username})",type:"js"},{title:"Promise",content:"github.orgs.checkMembership({org, username}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.checkMembership({org, username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"GET",url:"/orgs/:org/public_members/:username",title:"checkPublicMembership",name:"checkPublicMembership",description:"<p>Check public membership</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.orgs.checkPublicMembership({org, username})",type:"js"},{title:"Promise",content:"github.orgs.checkPublicMembership({org, username}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.checkPublicMembership({org, username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"GET",url:"/teams/:id/repos/:owner/:repo",title:"checkTeamRepo",name:"checkTeamRepo",description:"<p>Check if a team manages a repository</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""}]}},examples:[{title:"async/await",content:"const result = await github.orgs.checkTeamRepo({id, owner, repo})",type:"js"},{title:"Promise",content:"github.orgs.checkTeamRepo({id, owner, repo}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.checkTeamRepo({id, owner, repo}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"DELETE",url:"/orgs/:org/public_members/:username",title:"concealMembership",name:"concealMembership",description:"<p>Conceal a user's membership</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.orgs.concealMembership({org, username})",type:"js"},{title:"Promise",content:"github.orgs.concealMembership({org, username}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.concealMembership({org, username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"PUT",url:"/orgs/:org/outside_collaborators/:username",title:"convertMemberToOutsideCollaborator",name:"convertMemberToOutsideCollaborator",description:"<p>Convert member to outside collaborator.</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.orgs.convertMemberToOutsideCollaborator({org, username})",type:"js"},{title:"Promise",content:"github.orgs.convertMemberToOutsideCollaborator({org, username}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.convertMemberToOutsideCollaborator({org, username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"POST",url:"/orgs/:org/hooks",title:"createHook",name:"createHook",description:"<p>Create a hook</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"name",description:"<p>Must be passed as &quot;web&quot;.</p>"},{group:"Parameter",type:"json",optional:!1,field:"config",description:"<p>Key/value pairs to provide settings for this webhook</p>"},{group:"Parameter",type:"string[]",optional:!0,field:"events",defaultValue:'["push"',description:"<p>Determines what events the hook is triggered for. Default: [&quot;push&quot;].</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"active",description:"<p>Determines whether the hook is actually triggered on pushes.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.orgs.createHook({org, name, config, events, active})",type:"js"},{title:"Promise",content:"github.orgs.createHook({org, name, config, events, active}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.createHook({org, name, config, events, active}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"POST",url:"/orgs/:org/teams",title:"createTeam",name:"createTeam",description:"<p>Create team</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"name",description:""},{group:"Parameter",type:"string",optional:!0,field:"description",description:"<p>The description of the team.</p>"},{group:"Parameter",type:"string[]",optional:!0,field:"maintainers",description:"<p>The logins of organization members to add as maintainers of the team.</p>"},{group:"Parameter",type:"string[]",optional:!0,field:"repo_names",description:"<p>The full name (e.g., &quot;organization-name/repository-name&quot;) of repositories to add the team to.</p>"},{group:"Parameter",type:"string",allowedValues:["secret","closed"],optional:!0,field:"privacy",defaultValue:"secret",description:"<p>The level of privacy this team should have.</p>"},{group:"Parameter",type:"string",optional:!0,field:"parent_team_id",description:"<p>The ID of a team to set as the parent team.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.orgs.createTeam({org, name, description, maintainers, repo_names, privacy, parent_team_id})",type:"js"},{title:"Promise",content:"github.orgs.createTeam({org, name, description, maintainers, repo_names, privacy, parent_team_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.createTeam({org, name, description, maintainers, repo_names, privacy, parent_team_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"DELETE",url:"/orgs/:org/hooks/:id",title:"deleteHook",name:"deleteHook",description:"<p>Delete a hook</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.orgs.deleteHook({org, id})",type:"js"},{title:"Promise",content:"github.orgs.deleteHook({org, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.deleteHook({org, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"DELETE",url:"/teams/:id",title:"deleteTeam",name:"deleteTeam",description:"<p>Delete team</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.orgs.deleteTeam({id})",type:"js"},{title:"Promise",content:"github.orgs.deleteTeam({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.deleteTeam({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"DELETE",url:"/teams/:id/repos/:owner/:repo",title:"deleteTeamRepo",name:"deleteTeamRepo",description:"<p>Remove team repository</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""}]}},examples:[{title:"async/await",content:"const result = await github.orgs.deleteTeamRepo({id, owner, repo})",type:"js"},{title:"Promise",content:"github.orgs.deleteTeamRepo({id, owner, repo}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.deleteTeamRepo({id, owner, repo}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"PATCH",url:"/orgs/:org/hooks/:id",title:"editHook",name:"editHook",description:"<p>Edit a hook</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"json",optional:!1,field:"config",description:"<p>Key/value pairs to provide settings for this webhook</p>"},{group:"Parameter",type:"string[]",optional:!0,field:"events",defaultValue:'["push"',description:"<p>Determines what events the hook is triggered for. Default: [&quot;push&quot;].</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"active",description:"<p>Determines whether the hook is actually triggered on pushes.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.orgs.editHook({org, id, config, events, active})",type:"js"},{title:"Promise",content:"github.orgs.editHook({org, id, config, events, active}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.editHook({org, id, config, events, active}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"PATCH",url:"/teams/:id",title:"editTeam",name:"editTeam",description:"<p>Edit team</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!1,field:"name",description:""},{group:"Parameter",type:"string",optional:!0,field:"description",description:"<p>The description of the team.</p>"},{group:"Parameter",type:"string",allowedValues:["secret","closed"],optional:!0,field:"privacy",defaultValue:"secret",description:"<p>The level of privacy this team should have.</p>"},{group:"Parameter",type:"string",optional:!0,field:"parent_team_id",description:"<p>The ID of a team to set as the parent team.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.orgs.editTeam({id, name, description, privacy, parent_team_id})",type:"js"},{title:"Promise",content:"github.orgs.editTeam({id, name, description, privacy, parent_team_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.editTeam({id, name, description, privacy, parent_team_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"GET",url:"/orgs/:org",title:"get",name:"get",description:"<p>Get an organization</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.orgs.get({org, page, per_page})",type:"js"},{title:"Promise",content:"github.orgs.get({org, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.get({org, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"GET",url:"/organizations",title:"getAll",name:"getAll",description:"<p>List all organizations</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!0,field:"since",description:"<p>The integer ID of the last Organization that you've seen.</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.orgs.getAll({since, page, per_page})",type:"js"},{title:"Promise",content:"github.orgs.getAll({since, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.getAll({since, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"GET",url:"/orgs/:org/blocks",title:"getBlockedUsers",name:"getBlockedUsers",description:"<p>List blocked users. (In preview period. See README.)</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.orgs.getBlockedUsers({org, page, per_page})",type:"js"},{title:"Promise",content:"github.orgs.getBlockedUsers({org, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.getBlockedUsers({org, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"GET",url:"/teams/:id/teams",title:"getChildTeams",name:"getChildTeams",description:"<p>List child teams</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.orgs.getChildTeams({id, page, per_page})",type:"js"},{title:"Promise",content:"github.orgs.getChildTeams({id, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.getChildTeams({id, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"GET",url:"/users/:username/orgs",title:"getForUser",name:"getForUser",description:"<p>List public organization memberships for the specified user.</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.orgs.getForUser({username, page, per_page})",type:"js"},{title:"Promise",content:"github.orgs.getForUser({username, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.getForUser({username, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"GET",url:"/orgs/:org/hooks/:id",title:"getHook",name:"getHook",description:"<p>Get single hook</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.orgs.getHook({org, id})",type:"js"},{title:"Promise",content:"github.orgs.getHook({org, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.getHook({org, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"GET",url:"/orgs/:org/hooks",title:"getHooks",name:"getHooks",description:"<p>List hooks</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.orgs.getHooks({org, page, per_page})",type:"js"},{title:"Promise",content:"github.orgs.getHooks({org, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.getHooks({org, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"GET",url:"/orgs/:org/members",title:"getMembers",name:"getMembers",description:"<p>Members list</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",allowedValues:["all","2fa_disabled"],optional:!0,field:"filter",defaultValue:"all",description:"<p>Filter members returned in the list.</p>"},{group:"Parameter",type:"string",allowedValues:["all","admin","member"],optional:!0,field:"role",defaultValue:"all",description:"<p>Filter members returned by their role.</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.orgs.getMembers({org, filter, role, page, per_page})",type:"js"},{title:"Promise",content:"github.orgs.getMembers({org, filter, role, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.getMembers({org, filter, role, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"GET",url:"/orgs/:org/memberships/:username",title:"getOrgMembership",name:"getOrgMembership",description:"<p>Get organization membership</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.orgs.getOrgMembership({org, username})",type:"js"},{title:"Promise",content:"github.orgs.getOrgMembership({org, username}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.getOrgMembership({org, username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"GET",url:"/orgs/:org/outside_collaborators",title:"getOutsideCollaborators",name:"getOutsideCollaborators",description:"<p>List all users who are outside collaborators of an organization.</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",allowedValues:["all","2fa_disabled"],optional:!0,field:"filter",defaultValue:"all",description:"<p>Filter the list of outside collaborators.</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.orgs.getOutsideCollaborators({org, filter, page, per_page})",type:"js"},{title:"Promise",content:"github.orgs.getOutsideCollaborators({org, filter, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.getOutsideCollaborators({org, filter, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"GET",url:"/orgs/:org/invitations",title:"getPendingOrgInvites",name:"getPendingOrgInvites",description:"<p>List pending organization invites.</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""}]}},examples:[{title:"async/await",content:"const result = await github.orgs.getPendingOrgInvites({org})",type:"js"},{title:"Promise",content:"github.orgs.getPendingOrgInvites({org}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.getPendingOrgInvites({org}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"GET",url:"/teams/:id/invitations",title:"getPendingTeamInvites",name:"getPendingTeamInvites",description:"<p>List pending team invitations.</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.orgs.getPendingTeamInvites({id, page, per_page})",type:"js"},{title:"Promise",content:"github.orgs.getPendingTeamInvites({id, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.getPendingTeamInvites({id, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"GET",url:"/orgs/:org/public_members",title:"getPublicMembers",name:"getPublicMembers",description:"<p>Public members list</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""}]}},examples:[{title:"async/await",content:"const result = await github.orgs.getPublicMembers({org})",type:"js"},{title:"Promise",content:"github.orgs.getPublicMembers({org}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.getPublicMembers({org}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"GET",url:"/teams/:id",title:"getTeam",name:"getTeam",description:"<p>Get team</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.orgs.getTeam({id})",type:"js"},{title:"Promise",content:"github.orgs.getTeam({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.getTeam({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"GET",url:"/teams/:id/members",title:"getTeamMembers",name:"getTeamMembers",description:"<p>List team members</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",allowedValues:["member","maintainer","all"],optional:!0,field:"role",defaultValue:"all",description:"<p>Filters members returned by their role in the team.</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.orgs.getTeamMembers({id, role, page, per_page})",type:"js"},{title:"Promise",content:"github.orgs.getTeamMembers({id, role, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.getTeamMembers({id, role, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"GET",url:"/teams/:id/memberships/:username",title:"getTeamMembership",name:"getTeamMembership",description:"<p>Get team membership</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.orgs.getTeamMembership({id, username})",type:"js"},{title:"Promise",content:"github.orgs.getTeamMembership({id, username}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.getTeamMembership({id, username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"GET",url:"/teams/:id/repos",title:"getTeamRepos",name:"getTeamRepos",description:"<p>Get team repos</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.orgs.getTeamRepos({id, page, per_page})",type:"js"},{title:"Promise",content:"github.orgs.getTeamRepos({id, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.getTeamRepos({id, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"GET",url:"/orgs/:org/teams",title:"getTeams",name:"getTeams",description:"<p>List teams</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.orgs.getTeams({org, page, per_page})",type:"js"},{title:"Promise",content:"github.orgs.getTeams({org, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.getTeams({org, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"POST",url:"/orgs/:org/hooks/:id/pings",title:"pingHook",name:"pingHook",description:"<p>Ping a hook</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.orgs.pingHook({org, id})",type:"js"},{title:"Promise",content:"github.orgs.pingHook({org, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.pingHook({org, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"PUT",url:"/orgs/:org/public_members/:username",title:"publicizeMembership",name:"publicizeMembership",description:"<p>Publicize a user's membership</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.orgs.publicizeMembership({org, username})",type:"js"},{title:"Promise",content:"github.orgs.publicizeMembership({org, username}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.publicizeMembership({org, username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"DELETE",url:"/orgs/:org/members/:username",title:"removeMember",name:"removeMember",description:"<p>Remove a member</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.orgs.removeMember({org, username})",type:"js"},{title:"Promise",content:"github.orgs.removeMember({org, username}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.removeMember({org, username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"DELETE",url:"/orgs/:org/memberships/:username",title:"removeOrgMembership",name:"removeOrgMembership",description:"<p>Remove organization membership</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.orgs.removeOrgMembership({org, username})",type:"js"},{title:"Promise",content:"github.orgs.removeOrgMembership({org, username}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.removeOrgMembership({org, username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"DELETE",url:"/orgs/:org/outside_collaborators/:username",title:"removeOutsideCollaborator",name:"removeOutsideCollaborator",description:"<p>Remove outside collaborator.</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.orgs.removeOutsideCollaborator({org, username})",type:"js"},{title:"Promise",content:"github.orgs.removeOutsideCollaborator({org, username}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.removeOutsideCollaborator({org, username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"DELETE",url:"/teams/:id/memberships/:username",title:"removeTeamMembership",name:"removeTeamMembership",description:"<p>Remove team membership</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.orgs.removeTeamMembership({id, username})",type:"js"},{title:"Promise",content:"github.orgs.removeTeamMembership({id, username}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.removeTeamMembership({id, username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"DELETE",url:"/orgs/:org/blocks/:username",title:"unblockUser",name:"unblockUser",description:"<p>Unblock a user. (In preview period. See README.)</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.orgs.unblockUser({org, username})",type:"js"},{title:"Promise",content:"github.orgs.unblockUser({org, username}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.unblockUser({org, username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"PATCH",url:"/orgs/:org",title:"update",name:"update",description:"<p>Edit an organization</p>",group:"Orgs",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!0,field:"billing_email",description:"<p>Billing email address. This address is not publicized.</p>"},{group:"Parameter",type:"string",optional:!0,field:"company",description:"<p>The company name.</p>"},{group:"Parameter",type:"string",optional:!0,field:"email",description:"<p>The publicly visible email address.</p>"},{group:"Parameter",type:"string",optional:!0,field:"location",description:"<p>The location.</p>"},{group:"Parameter",type:"string",optional:!0,field:"name",description:"<p>The shorthand name of the company.</p>"},{group:"Parameter",type:"string",optional:!0,field:"description",description:"<p>The description of the company.</p>"},{group:"Parameter",type:"string",allowedValues:["read","write","admin","none"],optional:!0,field:"default_repository_permission",defaultValue:"read",description:"<p>Default permission level members have for organization repositories.</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"members_can_create_repositories",defaultValue:"true",description:"<p>Toggles ability of non-admin organization members to create repositories.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.orgs.update({org, billing_email, company, email, location, name, description, default_repository_permission, members_can_create_repositories})",type:"js"},{title:"Promise",content:"github.orgs.update({org, billing_email, company, email, location, name, description, default_repository_permission, members_can_create_repositories}).then(result => {})",type:"js"},{title:"Callback",content:"github.orgs.update({org, billing_email, company, email, location, name, description, default_repository_permission, members_can_create_repositories}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Orgs"},{type:"POST",url:"/orgs/:org/projects",title:"createOrgProject",name:"createOrgProject",description:"<p>Create an organization project. (In preview period. See README.)</p>",group:"Projects",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"name",description:""},{group:"Parameter",type:"string",optional:!0,field:"body",description:""}]}},examples:[{title:"async/await",content:"const result = await github.projects.createOrgProject({org, name, body})",type:"js"},{title:"Promise",content:"github.projects.createOrgProject({org, name, body}).then(result => {})",type:"js"},{title:"Callback",content:"github.projects.createOrgProject({org, name, body}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Projects"},{type:"POST",url:"/projects/columns/:column_id/cards",title:"createProjectCard",name:"createProjectCard",description:"<p>Create a project card. (In preview period. See README.)</p>",group:"Projects",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"column_id",description:""},{group:"Parameter",type:"string",optional:!0,field:"note",description:"<p>The note of the card.</p>"},{group:"Parameter",type:"string",optional:!0,field:"content_id",description:"<p>The id of the Issue or Pull Request to associate with this card.</p>"},{group:"Parameter",type:"string",optional:!0,field:"content_type",description:"<p>The type of content to associate with this card. Can be either 'Issue' or 'PullRequest'.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.projects.createProjectCard({column_id, note, content_id, content_type})",type:"js"},{title:"Promise",content:"github.projects.createProjectCard({column_id, note, content_id, content_type}).then(result => {})",type:"js"},{title:"Callback",content:"github.projects.createProjectCard({column_id, note, content_id, content_type}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Projects"},{type:"POST",url:"/projects/:project_id/columns",title:"createProjectColumn",name:"createProjectColumn",description:"<p>Create a project column. (In preview period. See README.)</p>",group:"Projects",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"project_id",description:""},{group:"Parameter",type:"string",optional:!1,field:"name",description:""}]}},examples:[{title:"async/await",content:"const result = await github.projects.createProjectColumn({project_id, name})",type:"js"},{title:"Promise",content:"github.projects.createProjectColumn({project_id, name}).then(result => {})",type:"js"},{title:"Callback",content:"github.projects.createProjectColumn({project_id, name}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Projects"},{type:"POST",url:"/repos/:owner/:repo/projects",title:"createRepoProject",name:"createRepoProject",description:"<p>Create a repository project. (In preview period. See README.)</p>",group:"Projects",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"name",description:""},{group:"Parameter",type:"string",optional:!0,field:"body",description:""}]}},examples:[{title:"async/await",content:"const result = await github.projects.createRepoProject({owner, repo, name, body})",type:"js"},{title:"Promise",content:"github.projects.createRepoProject({owner, repo, name, body}).then(result => {})",type:"js"},{title:"Callback",content:"github.projects.createRepoProject({owner, repo, name, body}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Projects"},{type:"DELETE",url:"/projects/:id",title:"deleteProject",name:"deleteProject",description:"<p>Delete a project. (In preview period. See README.)</p>",group:"Projects",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.projects.deleteProject({id})",type:"js"},{title:"Promise",content:"github.projects.deleteProject({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.projects.deleteProject({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Projects"},{type:"DELETE",url:"/projects/columns/cards/:id",title:"deleteProjectCard",name:"deleteProjectCard",description:"<p>Delete a project card. (In preview period. See README.)</p>",group:"Projects",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.projects.deleteProjectCard({id})",type:"js"},{title:"Promise",content:"github.projects.deleteProjectCard({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.projects.deleteProjectCard({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Projects"},{type:"DELETE",url:"/projects/columns/:id",title:"deleteProjectColumn",name:"deleteProjectColumn",description:"<p>Delete a project column. (In preview period. See README.)</p>",group:"Projects",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.projects.deleteProjectColumn({id})",type:"js"},{title:"Promise",content:"github.projects.deleteProjectColumn({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.projects.deleteProjectColumn({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Projects"},{type:"GET",url:"/orgs/:org/projects",title:"getOrgProjects",name:"getOrgProjects",description:"<p>List organization projects. (In preview period. See README.)</p>",group:"Projects",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",allowedValues:["open","closed","all"],optional:!0,field:"state",defaultValue:"open",description:""}]}},examples:[{title:"async/await",content:"const result = await github.projects.getOrgProjects({org, state})",type:"js"},{title:"Promise",content:"github.projects.getOrgProjects({org, state}).then(result => {})",type:"js"},{title:"Callback",content:"github.projects.getOrgProjects({org, state}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Projects"},{type:"GET",url:"/projects/:id",title:"getProject",name:"getProject",description:"<p>Get a project. (In preview period. See README.)</p>",group:"Projects",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.projects.getProject({id})",type:"js"},{title:"Promise",content:"github.projects.getProject({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.projects.getProject({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Projects"},{type:"GET",url:"/projects/columns/cards/:id",title:"getProjectCard",name:"getProjectCard",description:"<p>Get project card. (In preview period. See README.)</p>",group:"Projects",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.projects.getProjectCard({id})",type:"js"},{title:"Promise",content:"github.projects.getProjectCard({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.projects.getProjectCard({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Projects"},{type:"GET",url:"/projects/columns/:column_id/cards",title:"getProjectCards",name:"getProjectCards",description:"<p>List project cards. (In preview period. See README.)</p>",group:"Projects",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"column_id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.projects.getProjectCards({column_id})",type:"js"},{title:"Promise",content:"github.projects.getProjectCards({column_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.projects.getProjectCards({column_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Projects"},{type:"GET",url:"/projects/columns/:id",title:"getProjectColumn",name:"getProjectColumn",description:"<p>Get a project column. (In preview period. See README.)</p>",group:"Projects",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.projects.getProjectColumn({id})",type:"js"},{title:"Promise",content:"github.projects.getProjectColumn({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.projects.getProjectColumn({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Projects"},{type:"GET",url:"/projects/:project_id/columns",title:"getProjectColumns",name:"getProjectColumns",description:"<p>List project columns. (In preview period. See README.)</p>",group:"Projects",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"project_id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.projects.getProjectColumns({project_id})",type:"js"},{title:"Promise",content:"github.projects.getProjectColumns({project_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.projects.getProjectColumns({project_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Projects"},{type:"GET",url:"/repos/:owner/:repo/projects",title:"getRepoProjects",name:"getRepoProjects",description:"<p>List repository projects. (In preview period. See README.)</p>",group:"Projects",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",allowedValues:["open","closed","all"],optional:!0,field:"state",defaultValue:"open",description:""}]}},examples:[{title:"async/await",content:"const result = await github.projects.getRepoProjects({owner, repo, state})",type:"js"},{title:"Promise",content:"github.projects.getRepoProjects({owner, repo, state}).then(result => {})",type:"js"},{title:"Callback",content:"github.projects.getRepoProjects({owner, repo, state}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Projects"},{type:"POST",url:"/projects/columns/cards/:id/moves",title:"moveProjectCard",name:"moveProjectCard",description:"<p>Move a project card. (In preview period. See README.)</p>",group:"Projects",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!1,field:"position",description:"<p>Can be one of top, bottom, or after:<card-id>, where <card-id> is the id value of a card in the same project.</p>"},{group:"Parameter",type:"string",optional:!0,field:"column_id",description:"<p>The id value of a column in the same project.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.projects.moveProjectCard({id, position, column_id})",type:"js"},{title:"Promise",content:"github.projects.moveProjectCard({id, position, column_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.projects.moveProjectCard({id, position, column_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Projects"},{type:"POST",url:"/projects/columns/:id/moves",title:"moveProjectColumn",name:"moveProjectColumn",description:"<p>Move a project column. (In preview period. See README.)</p>",group:"Projects",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!1,field:"position",description:"<p>Can be one of first, last, or after:<column-id>, where <column-id> is the id value of a column in the same project.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.projects.moveProjectColumn({id, position})",type:"js"},{title:"Promise",content:"github.projects.moveProjectColumn({id, position}).then(result => {})",type:"js"},{title:"Callback",content:"github.projects.moveProjectColumn({id, position}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Projects"},{type:"PATCH",url:"/projects/:id",title:"updateProject",name:"updateProject",description:"<p>Update a project. (In preview period. See README.)</p>",group:"Projects",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!1,field:"name",description:""},{group:"Parameter",type:"string",optional:!0,field:"body",description:""},{group:"Parameter",type:"string",allowedValues:["open","closed","all"],optional:!0,field:"state",defaultValue:"open",description:""}]}},examples:[{title:"async/await",content:"const result = await github.projects.updateProject({id, name, body, state})",type:"js"},{title:"Promise",content:"github.projects.updateProject({id, name, body, state}).then(result => {})",type:"js"},{title:"Callback",content:"github.projects.updateProject({id, name, body, state}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Projects"},{type:"PATCH",url:"/projects/columns/cards/:id",title:"updateProjectCard",name:"updateProjectCard",description:"<p>Update a project card. (In preview period. See README.)</p>",group:"Projects",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!0,field:"note",description:"<p>The note of the card.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.projects.updateProjectCard({id, note})",type:"js"},{title:"Promise",content:"github.projects.updateProjectCard({id, note}).then(result => {})",type:"js"},{title:"Callback",content:"github.projects.updateProjectCard({id, note}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Projects"},{type:"PATCH",url:"/projects/columns/:id",title:"updateProjectColumn",name:"updateProjectColumn",description:"<p>Update a project column. (In preview period. See README.)</p>",group:"Projects",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!1,field:"name",description:""}]}},examples:[{title:"async/await",content:"const result = await github.projects.updateProjectColumn({id, name})",type:"js"},{title:"Promise",content:"github.projects.updateProjectColumn({id, name}).then(result => {})",type:"js"},{title:"Callback",content:"github.projects.updateProjectColumn({id, name}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Projects"},{type:"GET",url:"/repos/:owner/:repo/pulls/:number/merge",title:"checkMerged",name:"checkMerged",description:"<p>Get if a pull request has been merged</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.checkMerged({owner, repo, number, page, per_page})",type:"js"},{title:"Promise",content:"github.pullRequests.checkMerged({owner, repo, number, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.checkMerged({owner, repo, number, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"POST",url:"/repos/:owner/:repo/pulls",title:"create",name:"create",description:"<p>Create a pull request</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"head",description:"<p>The branch (or git ref) where your changes are implemented.</p>"},{group:"Parameter",type:"string",optional:!1,field:"base",description:"<p>The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.create({owner, repo, head, base})",type:"js"},{title:"Promise",content:"github.pullRequests.create({owner, repo, head, base}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.create({owner, repo, head, base}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"POST",url:"/repos/:owner/:repo/pulls/:number/comments",title:"createComment",name:"createComment",description:"<p>Create a comment</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"string",optional:!1,field:"body",description:""}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.createComment({owner, repo, number, body})",type:"js"},{title:"Promise",content:"github.pullRequests.createComment({owner, repo, number, body}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.createComment({owner, repo, number, body}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"POST",url:"/repos/:owner/:repo/pulls/:number/comments",title:"createCommentReply",name:"createCommentReply",description:"<p>Reply to existing pull request comment</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"string",optional:!1,field:"body",description:""},{group:"Parameter",type:"number",optional:!1,field:"in_reply_to",description:"<p>The comment id to reply to.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.createCommentReply({owner, repo, number, body, in_reply_to})",type:"js"},{title:"Promise",content:"github.pullRequests.createCommentReply({owner, repo, number, body, in_reply_to}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.createCommentReply({owner, repo, number, body, in_reply_to}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"POST",url:"/repos/:owner/:repo/pulls",title:"createFromIssue",name:"createFromIssue",description:"<p>Create a pull request from an existing issue</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"issue",description:"<p>The issue number in this repository to turn into a Pull Request.</p>"},{group:"Parameter",type:"string",optional:!1,field:"head",description:"<p>The branch (or git ref) where your changes are implemented.</p>"},{group:"Parameter",type:"string",optional:!1,field:"base",description:"<p>The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.createFromIssue({owner, repo, issue, head, base})",type:"js"},{title:"Promise",content:"github.pullRequests.createFromIssue({owner, repo, issue, head, base}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.createFromIssue({owner, repo, issue, head, base}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"POST",url:"/repos/:owner/:repo/pulls/:number/reviews",title:"createReview",name:"createReview",description:"<p>Create a pull request review.</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"string",optional:!0,field:"commit_id",description:"<p>Sha of the commit to comment on.</p>"},{group:"Parameter",type:"string",optional:!0,field:"body",description:"<p>The body text of the pull request review.</p>"},{group:"Parameter",type:"string",allowedValues:["APPROVE","REQUEST_CHANGES","COMMENT","PENDING"],optional:!0,field:"event",defaultValue:"PENDING",description:"<p>The event to perform on the review upon submission, can be one of APPROVE, REQUEST_CHANGES, or COMMENT. If left blank, the review will be in the PENDING state.</p>"},{group:"Parameter",type:"string[]",optional:!0,field:"comments",description:"<p>An array of draft review comment objects. Draft review comments must include a <code>path</code>, <code>position</code>, and <code>body</code>.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.createReview({owner, repo, number, commit_id, body, event, comments})",type:"js"},{title:"Promise",content:"github.pullRequests.createReview({owner, repo, number, commit_id, body, event, comments}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.createReview({owner, repo, number, commit_id, body, event, comments}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"POST",url:"/repos/:owner/:repo/pulls/:number/requested_reviewers",title:"createReviewRequest",name:"createReviewRequest",description:"<p>Create a review request. (In preview period. See README.)</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"string[]",optional:!0,field:"reviewers",description:"<p>An array of user logins that will be requested.</p>"},{group:"Parameter",type:"string[]",optional:!0,field:"team_reviewers",description:"<p>An array of team slugs that will be requested.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.createReviewRequest({owner, repo, number, reviewers, team_reviewers})",type:"js"},{title:"Promise",content:"github.pullRequests.createReviewRequest({owner, repo, number, reviewers, team_reviewers}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.createReviewRequest({owner, repo, number, reviewers, team_reviewers}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"DELETE",url:"/repos/:owner/:repo/pulls/comments/:id",title:"deleteComment",name:"deleteComment",description:"<p>Delete a comment</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.deleteComment({owner, repo, id})",type:"js"},{title:"Promise",content:"github.pullRequests.deleteComment({owner, repo, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.deleteComment({owner, repo, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"DELETE",url:"/repos/:owner/:repo/pulls/:number/reviews/:id",title:"deletePendingReview",name:"deletePendingReview",description:"<p>Delete a pending pull request review.</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.deletePendingReview({owner, repo, number, id})",type:"js"},{title:"Promise",content:"github.pullRequests.deletePendingReview({owner, repo, number, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.deletePendingReview({owner, repo, number, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"DELETE",url:"/repos/:owner/:repo/pulls/:number/requested_reviewers",title:"deleteReviewRequest",name:"deleteReviewRequest",description:"<p>Delete a review request. (In preview period. See README.)</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"string[]",optional:!0,field:"reviewers",description:"<p>An array of user logins that will be requested.</p>"},{group:"Parameter",type:"string[]",optional:!0,field:"team_reviewers",description:"<p>An array of team slugs that will be requested.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.deleteReviewRequest({owner, repo, number, reviewers, team_reviewers})",type:"js"},{title:"Promise",content:"github.pullRequests.deleteReviewRequest({owner, repo, number, reviewers, team_reviewers}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.deleteReviewRequest({owner, repo, number, reviewers, team_reviewers}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"PUT",url:"/repos/:owner/:repo/pulls/:number/reviews/:id/dismissals",title:"dismissReview",name:"dismissReview",description:"<p>Dismiss a pull request review.</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!0,field:"message",description:"<p>The message for the pull request review dismissal.</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.dismissReview({owner, repo, number, id, message, page, per_page})",type:"js"},{title:"Promise",content:"github.pullRequests.dismissReview({owner, repo, number, id, message, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.dismissReview({owner, repo, number, id, message, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"PATCH",url:"/repos/:owner/:repo/pulls/comments/:id",title:"editComment",name:"editComment",description:"<p>Edit a comment</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!1,field:"body",description:""}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.editComment({owner, repo, id, body})",type:"js"},{title:"Promise",content:"github.pullRequests.editComment({owner, repo, id, body}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.editComment({owner, repo, id, body}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"GET",url:"/repos/:owner/:repo/pulls/:number",title:"get",name:"get",description:"<p>Get a single pull request</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.get({owner, repo, number})",type:"js"},{title:"Promise",content:"github.pullRequests.get({owner, repo, number}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.get({owner, repo, number}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"GET",url:"/repos/:owner/:repo/pulls",title:"getAll",name:"getAll",description:"<p>List pull requests</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",allowedValues:["open","closed","all"],optional:!0,field:"state",defaultValue:"open",description:""},{group:"Parameter",type:"string",optional:!0,field:"head",description:"<p>Filter pulls by head user and branch name in the format of user:ref-name. Example: github:new-script-format.</p>"},{group:"Parameter",type:"string",optional:!0,field:"base",description:"<p>Filter pulls by base branch name. Example: gh-pages.</p>"},{group:"Parameter",type:"string",allowedValues:["created","updated","popularity","long-running"],optional:!0,field:"sort",defaultValue:"created",description:"<p>Possible values are: <code>created</code>, <code>updated</code>, <code>popularity</code>, <code>long-running</code>, Default: <code>created</code></p>"},{group:"Parameter",type:"string",allowedValues:["asc","desc"],optional:!0,field:"direction",defaultValue:"desc",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.getAll({owner, repo, state, head, base, sort, direction, page, per_page})",type:"js"},{title:"Promise",content:"github.pullRequests.getAll({owner, repo, state, head, base, sort, direction, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.getAll({owner, repo, state, head, base, sort, direction, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"GET",url:"/repos/:owner/:repo/pulls/comments/:id",title:"getComment",name:"getComment",description:"<p>Get a single comment</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.getComment({owner, repo, id})",type:"js"},{title:"Promise",content:"github.pullRequests.getComment({owner, repo, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.getComment({owner, repo, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"GET",url:"/repos/:owner/:repo/pulls/:number/comments",title:"getComments",name:"getComments",description:"<p>List comments on a pull request</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.getComments({owner, repo, number, page, per_page})",type:"js"},{title:"Promise",content:"github.pullRequests.getComments({owner, repo, number, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.getComments({owner, repo, number, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"GET",url:"/repos/:owner/:repo/pulls/comments",title:"getCommentsForRepo",name:"getCommentsForRepo",description:"<p>List comments in a repository</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",allowedValues:["created","updated"],optional:!0,field:"sort",defaultValue:"created",description:"<p>Possible values are: <code>created</code>, <code>updated</code>, Default: <code>created</code></p>"},{group:"Parameter",type:"string",allowedValues:["asc","desc"],optional:!0,field:"direction",defaultValue:"desc",description:""},{group:"Parameter",type:"date",optional:!0,field:"since",description:"<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.getCommentsForRepo({owner, repo, sort, direction, since, page, per_page})",type:"js"},{title:"Promise",content:"github.pullRequests.getCommentsForRepo({owner, repo, sort, direction, since, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.getCommentsForRepo({owner, repo, sort, direction, since, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"GET",url:"/repos/:owner/:repo/pulls/:number/commits",title:"getCommits",name:"getCommits",description:"<p>List commits on a pull request</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.getCommits({owner, repo, number, page, per_page})",type:"js"},{title:"Promise",content:"github.pullRequests.getCommits({owner, repo, number, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.getCommits({owner, repo, number, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"GET",url:"/repos/:owner/:repo/pulls/:number/files",title:"getFiles",name:"getFiles",description:"<p>List pull requests files</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.getFiles({owner, repo, number, page, per_page})",type:"js"},{title:"Promise",content:"github.pullRequests.getFiles({owner, repo, number, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.getFiles({owner, repo, number, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"GET",url:"/repos/:owner/:repo/pulls/:number/reviews/:id",title:"getReview",name:"getReview",description:"<p>Get a single pull request review.</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.getReview({owner, repo, number, id})",type:"js"},{title:"Promise",content:"github.pullRequests.getReview({owner, repo, number, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.getReview({owner, repo, number, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"GET",url:"/repos/:owner/:repo/pulls/:number/reviews/:id/comments",title:"getReviewComments",name:"getReviewComments",description:"<p>Get comments for a pull request review.</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.getReviewComments({owner, repo, number, id, page, per_page})",type:"js"},{title:"Promise",content:"github.pullRequests.getReviewComments({owner, repo, number, id, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.getReviewComments({owner, repo, number, id, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"GET",url:"/repos/:owner/:repo/pulls/:number/requested_reviewers",title:"getReviewRequests",name:"getReviewRequests",description:"<p>List review requests. (In preview period. See README.)</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.getReviewRequests({owner, repo, number, page, per_page})",type:"js"},{title:"Promise",content:"github.pullRequests.getReviewRequests({owner, repo, number, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.getReviewRequests({owner, repo, number, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"GET",url:"/repos/:owner/:repo/pulls/:number/reviews",title:"getReviews",name:"getReviews",description:"<p>List reviews on a pull request.</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.getReviews({owner, repo, number, page, per_page})",type:"js"},{title:"Promise",content:"github.pullRequests.getReviews({owner, repo, number, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.getReviews({owner, repo, number, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"PUT",url:"/repos/:owner/:repo/pulls/:number/merge",title:"merge",name:"merge",description:"<p>Merge a pull request (Merge Button)</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"string",optional:!0,field:"commit_title",description:"<p>Title for the automatic commit message. (In preview period. See README.)</p>"},{group:"Parameter",type:"string",optional:!0,field:"commit_message",description:"<p>Extra detail to append to automatic commit message.</p>"},{group:"Parameter",type:"string",optional:!0,field:"sha",description:"<p>SHA that pull request head must match to allow merge</p>"},{group:"Parameter",type:"string",allowedValues:["merge","squash","rebase"],optional:!0,field:"merge_method",defaultValue:"merge",description:"<p>Merge method to use. Possible values are <code>merge</code>, <code>squash</code>, or <code>rebase</code>. (In preview period. See README.)</p>"}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.merge({owner, repo, number, commit_title, commit_message, sha, merge_method})",type:"js"},{title:"Promise",content:"github.pullRequests.merge({owner, repo, number, commit_title, commit_message, sha, merge_method}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.merge({owner, repo, number, commit_title, commit_message, sha, merge_method}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"POST",url:"/repos/:owner/:repo/pulls/:number/reviews/:id/events",title:"submitReview",name:"submitReview",description:"<p>Submit a pull request review.</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!0,field:"body",description:"<p>The body text of the pull request review.</p>"},{group:"Parameter",type:"string",allowedValues:["APPROVE","REQUEST_CHANGES","COMMENT","PENDING"],optional:!0,field:"event",defaultValue:"PENDING",description:"<p>The event to perform on the review upon submission, can be one of APPROVE, REQUEST_CHANGES, or COMMENT. If left blank, the review will be in the PENDING state.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.submitReview({owner, repo, number, id, body, event})",type:"js"},{title:"Promise",content:"github.pullRequests.submitReview({owner, repo, number, id, body, event}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.submitReview({owner, repo, number, id, body, event}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"PATCH",url:"/repos/:owner/:repo/pulls/:number",title:"update",name:"update",description:"<p>Update a pull request</p>",group:"PullRequests",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"string",optional:!0,field:"title",description:"<p>The title of the pull request.</p>"},{group:"Parameter",type:"string",optional:!0,field:"body",description:"<p>The contents of the pull request.</p>"},{group:"Parameter",type:"string",allowedValues:["open","closed"],optional:!0,field:"state",description:"<p>open or closed</p>"},{group:"Parameter",type:"string",optional:!0,field:"base",description:"<p>The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"maintainer_can_modify",defaultValue:"true",description:"<p>Indicates whether maintainers can modify the pull request.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.pullRequests.update({owner, repo, number, title, body, state, base, maintainer_can_modify})",type:"js"},{title:"Promise",content:"github.pullRequests.update({owner, repo, number, title, body, state, base, maintainer_can_modify}).then(result => {})",type:"js"},{title:"Callback",content:"github.pullRequests.update({owner, repo, number, title, body, state, base, maintainer_can_modify}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"PullRequests"},{type:"POST",url:"/repos/:owner/:repo/comments/:id/reactions",title:"createForCommitComment",name:"createForCommitComment",description:"<p>Create reaction for a commit comment. (In preview period. See README.)</p>",group:"Reactions",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",allowedValues:["+1","-1","laugh","confused","heart","hooray"],optional:!1,field:"content",description:"<p>The reaction type.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.reactions.createForCommitComment({owner, repo, id, content})",type:"js"},{title:"Promise",content:"github.reactions.createForCommitComment({owner, repo, id, content}).then(result => {})",type:"js"},{title:"Callback",content:"github.reactions.createForCommitComment({owner, repo, id, content}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Reactions"},{type:"POST",url:"/repos/:owner/:repo/issues/:number/reactions",title:"createForIssue",name:"createForIssue",description:"<p>Create reaction for an issue. (In preview period. See README.)</p>",group:"Reactions",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"string",allowedValues:["+1","-1","laugh","confused","heart","hooray"],optional:!1,field:"content",description:"<p>The reaction type.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.reactions.createForIssue({owner, repo, number, content})",type:"js"},{title:"Promise",content:"github.reactions.createForIssue({owner, repo, number, content}).then(result => {})",type:"js"},{title:"Callback",content:"github.reactions.createForIssue({owner, repo, number, content}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Reactions"},{type:"POST",url:"/repos/:owner/:repo/issues/comments/:id/reactions",title:"createForIssueComment",name:"createForIssueComment",description:"<p>Create reaction for an issue comment. (In preview period. See README.)</p>",group:"Reactions",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",allowedValues:["+1","-1","laugh","confused","heart","hooray"],optional:!1,field:"content",description:"<p>The reaction type.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.reactions.createForIssueComment({owner, repo, id, content})",type:"js"},{title:"Promise",content:"github.reactions.createForIssueComment({owner, repo, id, content}).then(result => {})",type:"js"},{title:"Callback",content:"github.reactions.createForIssueComment({owner, repo, id, content}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Reactions"},{type:"POST",url:"/repos/:owner/:repo/pulls/comments/:id/reactions",title:"createForPullRequestReviewComment",name:"createForPullRequestReviewComment",description:"<p>Create reaction for a pull request review comment. (In preview period. See README.)</p>",group:"Reactions",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",allowedValues:["+1","-1","laugh","confused","heart","hooray"],optional:!1,field:"content",description:"<p>The reaction type.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.reactions.createForPullRequestReviewComment({owner, repo, id, content})",type:"js"},{title:"Promise",content:"github.reactions.createForPullRequestReviewComment({owner, repo, id, content}).then(result => {})",type:"js"},{title:"Callback",content:"github.reactions.createForPullRequestReviewComment({owner, repo, id, content}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Reactions"},{type:"DELETE",url:"/reactions/:id",title:"delete",name:"delete",description:"<p>Delete a reaction. (In preview period. See README.)</p>",group:"Reactions",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.reactions.delete({id})",type:"js"},{title:"Promise",content:"github.reactions.delete({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.reactions.delete({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Reactions"},{type:"GET",url:"/repos/:owner/:repo/comments/:id/reactions",title:"getForCommitComment",name:"getForCommitComment",description:"<p>List reactions for a commit comment. (In preview period. See README.)</p>",group:"Reactions",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",allowedValues:["+1","-1","laugh","confused","heart","hooray"],optional:!0,field:"content",description:"<p>Indicates which type of reaction to return.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.reactions.getForCommitComment({owner, repo, id, content})",type:"js"},{title:"Promise",content:"github.reactions.getForCommitComment({owner, repo, id, content}).then(result => {})",type:"js"},{title:"Callback",content:"github.reactions.getForCommitComment({owner, repo, id, content}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Reactions"},{type:"GET",url:"/repos/:owner/:repo/issues/:number/reactions",title:"getForIssue",name:"getForIssue",description:"<p>List reactions for an issue. (In preview period. See README.)</p>",group:"Reactions",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!1,field:"number",description:""},{group:"Parameter",type:"string",allowedValues:["+1","-1","laugh","confused","heart","hooray"],optional:!0,field:"content",description:"<p>Indicates which type of reaction to return.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.reactions.getForIssue({owner, repo, number, content})",type:"js"},{title:"Promise",content:"github.reactions.getForIssue({owner, repo, number, content}).then(result => {})",type:"js"},{title:"Callback",content:"github.reactions.getForIssue({owner, repo, number, content}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Reactions"},{type:"GET",url:"/repos/:owner/:repo/issues/comments/:id/reactions",title:"getForIssueComment",name:"getForIssueComment",description:"<p>List reactions for an issue comment. (In preview period. See README.)</p>",group:"Reactions",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",allowedValues:["+1","-1","laugh","confused","heart","hooray"],optional:!0,field:"content",description:"<p>Indicates which type of reaction to return.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.reactions.getForIssueComment({owner, repo, id, content})",type:"js"},{title:"Promise",content:"github.reactions.getForIssueComment({owner, repo, id, content}).then(result => {})",type:"js"},{title:"Callback",content:"github.reactions.getForIssueComment({owner, repo, id, content}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Reactions"},{type:"GET",url:"/repos/:owner/:repo/pulls/comments/:id/reactions",title:"getForPullRequestReviewComment",name:"getForPullRequestReviewComment",description:"<p>List reactions for a pull request review comment. (In preview period. See README.)</p>",group:"Reactions",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",allowedValues:["+1","-1","laugh","confused","heart","hooray"],optional:!0,field:"content",description:"<p>Indicates which type of reaction to return.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.reactions.getForPullRequestReviewComment({owner, repo, id, content})",type:"js"},{title:"Promise",content:"github.reactions.getForPullRequestReviewComment({owner, repo, id, content}).then(result => {})",type:"js"},{title:"Callback",content:"github.reactions.getForPullRequestReviewComment({owner, repo, id, content}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Reactions"},{type:"PUT",url:"/repos/:owner/:repo/collaborators/:username",title:"addCollaborator",name:"addCollaborator",description:"<p>Add user as a collaborator</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"username",description:""},{group:"Parameter",type:"string",allowedValues:["pull","push","admin"],optional:!0,field:"permission",defaultValue:"push",description:"<p><code>pull</code> - can pull, but not push to or administer this repository, <code>push</code> - can pull and push, but not administer this repository, <code>admin</code> - can pull, push and administer this repository.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.addCollaborator({owner, repo, username, permission})",type:"js"},{title:"Promise",content:"github.repos.addCollaborator({owner, repo, username, permission}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.addCollaborator({owner, repo, username, permission}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"POST",url:"/repos/:owner/:repo/keys",title:"addDeployKey",name:"addDeployKey",description:"<p>Add a new deploy key.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"title",description:""},{group:"Parameter",type:"string",optional:!1,field:"key",description:""},{group:"Parameter",type:"boolean",optional:!0,field:"read_only",description:"<p>If true, the key will only be able to read repository contents. Otherwise, the key will be able to read and write.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.addDeployKey({owner, repo, title, key, read_only})",type:"js"},{title:"Promise",content:"github.repos.addDeployKey({owner, repo, title, key, read_only}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.addDeployKey({owner, repo, title, key, read_only}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"POST",url:"/repos/:owner/:repo/branches/:branch/protection/enforce_admins",title:"addProtectedBranchAdminEnforcement",name:"addProtectedBranchAdminEnforcement",description:"<p>Add admin enforcement of protected branch.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.addProtectedBranchAdminEnforcement({owner, repo, branch, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.addProtectedBranchAdminEnforcement({owner, repo, branch, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.addProtectedBranchAdminEnforcement({owner, repo, branch, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"POST",url:"/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",title:"addProtectedBranchRequiredStatusChecksContexts",name:"addProtectedBranchRequiredStatusChecksContexts",description:"<p>Add required status checks contexts of protected branch.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""},{group:"Parameter",type:"string[]",optional:!1,field:"contexts",description:"<p>An array of protected branch required status checks contexts (e.g. continuous-integration/jenkins).</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.addProtectedBranchRequiredStatusChecksContexts({owner, repo, branch, contexts})",type:"js"},{title:"Promise",content:"github.repos.addProtectedBranchRequiredStatusChecksContexts({owner, repo, branch, contexts}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.addProtectedBranchRequiredStatusChecksContexts({owner, repo, branch, contexts}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"POST",url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",title:"addProtectedBranchTeamRestrictions",name:"addProtectedBranchTeamRestrictions",description:"<p>Add team restrictions of protected branch.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""},{group:"Parameter",type:"string[]",optional:!1,field:"teams",description:"<p>An array of team slugs (e.g. justice-league).</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.addProtectedBranchTeamRestrictions({owner, repo, branch, teams})",type:"js"},{title:"Promise",content:"github.repos.addProtectedBranchTeamRestrictions({owner, repo, branch, teams}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.addProtectedBranchTeamRestrictions({owner, repo, branch, teams}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"POST",url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/users",title:"addProtectedBranchUserRestrictions",name:"addProtectedBranchUserRestrictions",description:"<p>Add user restrictions of protected branch.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""},{group:"Parameter",type:"string[]",optional:!1,field:"users",description:"<p>An array of team slugs (e.g. justice-league).</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.addProtectedBranchUserRestrictions({owner, repo, branch, users})",type:"js"},{title:"Promise",content:"github.repos.addProtectedBranchUserRestrictions({owner, repo, branch, users}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.addProtectedBranchUserRestrictions({owner, repo, branch, users}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/collaborators/:username",title:"checkCollaborator",name:"checkCollaborator",description:"<p>Check if user is a collaborator.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.checkCollaborator({owner, repo, username})",type:"js"},{title:"Promise",content:"github.repos.checkCollaborator({owner, repo, username}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.checkCollaborator({owner, repo, username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/compare/:base...:head",title:"compareCommits",name:"compareCommits",description:"<p>Compare two commits.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"base",description:"<p>The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.</p>"},{group:"Parameter",type:"string",optional:!1,field:"head",description:"<p>The branch (or git ref) where your changes are implemented.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.compareCommits({owner, repo, base, head})",type:"js"},{title:"Promise",content:"github.repos.compareCommits({owner, repo, base, head}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.compareCommits({owner, repo, base, head}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"POST",url:"/user/repos",title:"create",name:"create",description:"<p>Create a new repository for the authenticated user.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"name",description:""},{group:"Parameter",type:"string",optional:!0,field:"description",description:""},{group:"Parameter",type:"string",optional:!0,field:"homepage",description:""},{group:"Parameter",type:"boolean",optional:!0,field:"private",defaultValue:"false",description:"<p>True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false.</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"has_issues",defaultValue:"true",description:"<p>True to enable issues for this repository, false to disable them. Default is true.</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"has_projects",defaultValue:"true",description:"<p>True to enable projects for this repository, false to disable them. Default is true.</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"has_wiki",defaultValue:"true",description:"<p>True to enable the wiki for this repository, false to disable it. Default is true.</p>"},{group:"Parameter",type:"number",optional:!0,field:"team_id",description:"<p>The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"auto_init",defaultValue:"false",description:"<p>True to create an initial commit with empty README. Default is false</p>"},{group:"Parameter",type:"string",optional:!0,field:"gitignore_template",description:"<p>Desired language or platform .gitignore template to apply. Ignored if auto_init parameter is not provided.</p>"},{group:"Parameter",type:"string",optional:!0,field:"license_template",description:"<p>Desired LICENSE template to apply. Use the name of the template without the extension. For example, &quot;mit&quot; or &quot;mozilla&quot;.</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"allow_squash_merge",defaultValue:"true",description:"<p>Either true to allow squash-merging pull requests, or false to prevent squash-merging. Default: true. (In preview period. See README.)</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"allow_merge_commit",defaultValue:"true",description:"<p>Either true to allow merging pull requests with a merge commit, or false to prevent merging pull requests with merge commits. Default: true. (In preview period. See README.)</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"allow_rebase_merge",defaultValue:"true",description:"<p>Either true to allow rebase-merging pull requests, or false to prevent rebase-merging. Default: true. (In preview period. See README.)</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.create({name, description, homepage, private, has_issues, has_projects, has_wiki, team_id, auto_init, gitignore_template, license_template, allow_squash_merge, allow_merge_commit, allow_rebase_merge})",type:"js"},{title:"Promise",content:"github.repos.create({name, description, homepage, private, has_issues, has_projects, has_wiki, team_id, auto_init, gitignore_template, license_template, allow_squash_merge, allow_merge_commit, allow_rebase_merge}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.create({name, description, homepage, private, has_issues, has_projects, has_wiki, team_id, auto_init, gitignore_template, license_template, allow_squash_merge, allow_merge_commit, allow_rebase_merge}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"POST",url:"/repos/:owner/:repo/commits/:sha/comments",title:"createCommitComment",name:"createCommitComment",description:"<p>Create a commit comment.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"sha",description:""},{group:"Parameter",type:"string",optional:!1,field:"body",description:""},{group:"Parameter",type:"string",optional:!0,field:"path",description:"<p>Relative path of the file to comment on.</p>"},{group:"Parameter",type:"number",optional:!0,field:"position",description:"<p>Line index in the diff to comment on.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.createCommitComment({owner, repo, sha, body, path, position})",type:"js"},{title:"Promise",content:"github.repos.createCommitComment({owner, repo, sha, body, path, position}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.createCommitComment({owner, repo, sha, body, path, position}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"POST",url:"/repos/:owner/:repo/deployments",title:"createDeployment",name:"createDeployment",description:"<p>Create a deployment. (In preview period. See README.)</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"ref",description:"<p>The ref to deploy. This can be a branch, tag, or sha.</p>"},{group:"Parameter",type:"string",optional:!0,field:"task",defaultValue:"deploy",description:"<p>The named task to execute. e.g. deploy or deploy:migrations. Default: deploy</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"auto_merge",defaultValue:"true",description:"<p>Optional parameter to merge the default branch into the requested ref if it is behind the default branch. Default: true</p>"},{group:"Parameter",type:"string[]",optional:!0,field:"required_contexts",description:"<p>Optional array of status contexts verified against commit status checks. If this parameter is omitted from the parameters then all unique contexts will be verified before a deployment is created. To bypass checking entirely pass an empty array. Defaults to all unique contexts.</p>"},{group:"Parameter",type:"string",optional:!0,field:"payload",description:"<p>Optional JSON payload with extra information about the deployment. Default: &quot;&quot;</p>"},{group:"Parameter",type:"string",optional:!0,field:"environment",defaultValue:"none",description:"<p>The name of the environment that was deployed to. e.g. staging or production. Default: none.</p>"},{group:"Parameter",type:"string",optional:!0,field:"description",description:"<p>Optional short description. Default: &quot;&quot;</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"transient_environment",defaultValue:"false",description:"<p>Specifies if the given environment is specific to the deployment and will no longer exist at some point in the future. Default: false. (In preview period. See README.)</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"production_environment",description:"<p>Specifies if the given environment is a one that end-users directly interact with. Default: true when environment is <code>production</code> and false otherwise. (In preview period. See README.)</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.createDeployment({owner, repo, ref, task, auto_merge, required_contexts, payload, environment, description, transient_environment, production_environment})",type:"js"},{title:"Promise",content:"github.repos.createDeployment({owner, repo, ref, task, auto_merge, required_contexts, payload, environment, description, transient_environment, production_environment}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.createDeployment({owner, repo, ref, task, auto_merge, required_contexts, payload, environment, description, transient_environment, production_environment}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"POST",url:"/repos/:owner/:repo/deployments/:id/statuses",title:"createDeploymentStatus",name:"createDeploymentStatus",description:"<p>Create a deployment status. (In preview period. See README.)</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!0,field:"state",description:"<p>The state of the status. Can be one of pending, success, error, or failure.</p>"},{group:"Parameter",type:"string",optional:!0,field:"target_url",description:"<p>The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. Default: &quot;&quot;</p>"},{group:"Parameter",type:"string",optional:!0,field:"log_url",description:"<p>Functionally equivalent to target_url. Default: &quot;&quot;. (In preview period. See README.)</p>"},{group:"Parameter",type:"string",optional:!0,field:"description",description:"<p>A short description of the status. Default: &quot;&quot;</p>"},{group:"Parameter",type:"string",optional:!0,field:"environment_url",description:"<p>URL for accessing the deployment environment. Default: &quot;&quot;. (In preview period. See README.)</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"auto_inactive",defaultValue:"true",description:"<p>When true the new <code>inactive</code> status is added to all other non-transient, non-production environment deployments with the same repository and environment name as the created status's deployment. Default: true. (In preview period. See README.)</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.createDeploymentStatus({owner, repo, id, state, target_url, log_url, description, environment_url, auto_inactive})",type:"js"},{title:"Promise",content:"github.repos.createDeploymentStatus({owner, repo, id, state, target_url, log_url, description, environment_url, auto_inactive}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.createDeploymentStatus({owner, repo, id, state, target_url, log_url, description, environment_url, auto_inactive}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"PUT",url:"/repos/:owner/:repo/contents/:path",title:"createFile",name:"createFile",description:"<p>Create a new file in the given repository.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"path",description:"<p>The content path.</p>"},{group:"Parameter",type:"string",optional:!1,field:"message",description:"<p>The commit message.</p>"},{group:"Parameter",type:"string",optional:!1,field:"content",description:"<p>The new file content, Base64 encoded.</p>"},{group:"Parameter",type:"string",optional:!0,field:"branch",description:"<p>The branch name. If not provided, uses the repository\u2019s default branch (usually master).</p>"},{group:"Parameter",type:"json",optional:!0,field:"committer",description:""},{group:"Parameter",type:"json",optional:!0,field:"author",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.createFile({owner, repo, path, message, content, branch, committer, author})",type:"js"},{title:"Promise",content:"github.repos.createFile({owner, repo, path, message, content, branch, committer, author}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.createFile({owner, repo, path, message, content, branch, committer, author}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"POST",url:"/orgs/:org/repos",title:"createForOrg",name:"createForOrg",description:"<p>Create a new repository for an organization.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",optional:!1,field:"name",description:""},{group:"Parameter",type:"string",optional:!0,field:"description",description:""},{group:"Parameter",type:"string",optional:!0,field:"homepage",description:""},{group:"Parameter",type:"boolean",optional:!0,field:"private",defaultValue:"false",description:"<p>True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false.</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"has_issues",defaultValue:"true",description:"<p>True to enable issues for this repository, false to disable them. Default is true.</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"has_projects",defaultValue:"true",description:"<p>True to enable projects for this repository, false to disable them. Default is true.</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"has_wiki",defaultValue:"true",description:"<p>True to enable the wiki for this repository, false to disable it. Default is true.</p>"},{group:"Parameter",type:"number",optional:!0,field:"team_id",description:"<p>The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"auto_init",defaultValue:"false",description:"<p>True to create an initial commit with empty README. Default is false</p>"},{group:"Parameter",type:"string",optional:!0,field:"gitignore_template",description:"<p>Desired language or platform .gitignore template to apply. Ignored if auto_init parameter is not provided.</p>"},{group:"Parameter",type:"string",optional:!0,field:"license_template",description:"<p>Desired LICENSE template to apply. Use the name of the template without the extension. For example, &quot;mit&quot; or &quot;mozilla&quot;.</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"allow_squash_merge",defaultValue:"true",description:"<p>Either true to allow squash-merging pull requests, or false to prevent squash-merging. Default: true. (In preview period. See README.)</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"allow_merge_commit",defaultValue:"true",description:"<p>Either true to allow merging pull requests with a merge commit, or false to prevent merging pull requests with merge commits. Default: true. (In preview period. See README.)</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"allow_rebase_merge",defaultValue:"true",description:"<p>Either true to allow rebase-merging pull requests, or false to prevent rebase-merging. Default: true. (In preview period. See README.)</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.createForOrg({org, name, description, homepage, private, has_issues, has_projects, has_wiki, team_id, auto_init, gitignore_template, license_template, allow_squash_merge, allow_merge_commit, allow_rebase_merge})",type:"js"},{title:"Promise",content:"github.repos.createForOrg({org, name, description, homepage, private, has_issues, has_projects, has_wiki, team_id, auto_init, gitignore_template, license_template, allow_squash_merge, allow_merge_commit, allow_rebase_merge}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.createForOrg({org, name, description, homepage, private, has_issues, has_projects, has_wiki, team_id, auto_init, gitignore_template, license_template, allow_squash_merge, allow_merge_commit, allow_rebase_merge}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"POST",url:"/repos/:owner/:repo/hooks",title:"createHook",name:"createHook",description:"<p>Create a hook.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"name",description:""},{group:"Parameter",type:"json",optional:!1,field:"config",description:"<p>A Hash containing key/value pairs to provide settings for this hook. These settings vary between the services and are defined in the github-services repo. Booleans are stored internally as <code>1</code> for true, and <code>0</code> for false. Any JSON true/false values will be converted automatically.</p>"},{group:"Parameter",type:"string[]",optional:!0,field:"events",defaultValue:'["push"',description:"<p>Determines what events the hook is triggered for. Default: <code>['push']</code>.</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"active",description:"<p>Determines whether the hook is actually triggered on pushes.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.createHook({owner, repo, name, config, events, active})",type:"js"},{title:"Promise",content:"github.repos.createHook({owner, repo, name, config, events, active}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.createHook({owner, repo, name, config, events, active}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"POST",url:"/repos/:owner/:repo/releases",title:"createRelease",name:"createRelease",description:"<p>Create a release.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"tag_name",description:"<p>String of the tag</p>"},{group:"Parameter",type:"string",optional:!0,field:"target_commitish",description:"<p>Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually master).</p>"},{group:"Parameter",type:"string",optional:!0,field:"name",description:""},{group:"Parameter",type:"string",optional:!0,field:"body",description:""},{group:"Parameter",type:"boolean",optional:!0,field:"draft",defaultValue:"false",description:"<p>true to create a draft (unpublished) release, false to create a published one. Default: false</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"prerelease",defaultValue:"false",description:"<p>true to identify the release as a prerelease. false to identify the release as a full release. Default: false</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.createRelease({owner, repo, tag_name, target_commitish, name, body, draft, prerelease})",type:"js"},{title:"Promise",content:"github.repos.createRelease({owner, repo, tag_name, target_commitish, name, body, draft, prerelease}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.createRelease({owner, repo, tag_name, target_commitish, name, body, draft, prerelease}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"POST",url:"/repos/:owner/:repo/statuses/:sha",title:"createStatus",name:"createStatus",description:"<p>Create a status.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"sha",description:""},{group:"Parameter",type:"string",allowedValues:["pending","success","error","failure"],optional:!1,field:"state",description:"<p>State of the status - can be one of pending, success, error, or failure.</p>"},{group:"Parameter",type:"string",optional:!0,field:"target_url",description:"<p>Target url to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the \u2018source\u2019 of the Status.</p>"},{group:"Parameter",type:"string",optional:!0,field:"description",description:"<p>Short description of the status.</p>"},{group:"Parameter",type:"string",optional:!0,field:"context",description:"<p>A string label to differentiate this status from the status of other systems.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.createStatus({owner, repo, sha, state, target_url, description, context})",type:"js"},{title:"Promise",content:"github.repos.createStatus({owner, repo, sha, state, target_url, description, context}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.createStatus({owner, repo, sha, state, target_url, description, context}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"DELETE",url:"/repos/:owner/:repo",title:"delete",name:"delete",description:"<p>Delete a repository.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.delete({owner, repo})",type:"js"},{title:"Promise",content:"github.repos.delete({owner, repo}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.delete({owner, repo}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"DELETE",url:"/repos/:owner/:repo/releases/assets/:id",title:"deleteAsset",name:"deleteAsset",description:"<p>Delete a release asset.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.deleteAsset({owner, repo, id})",type:"js"},{title:"Promise",content:"github.repos.deleteAsset({owner, repo, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.deleteAsset({owner, repo, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"DELETE",url:"/repos/:owner/:repo/comments/:id",title:"deleteCommitComment",name:"deleteCommitComment",description:"<p>Delete a commit comment.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.deleteCommitComment({owner, repo, id})",type:"js"},{title:"Promise",content:"github.repos.deleteCommitComment({owner, repo, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.deleteCommitComment({owner, repo, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"DELETE",url:"/repos/:owner/:repo/keys/:id",title:"deleteDeployKey",name:"deleteDeployKey",description:"<p>Remove a deploy key.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.deleteDeployKey({owner, repo, id})",type:"js"},{title:"Promise",content:"github.repos.deleteDeployKey({owner, repo, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.deleteDeployKey({owner, repo, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"DELETE",url:"/repos/:owner/:repo/downloads/:id",title:"deleteDownload",name:"deleteDownload",description:"<p>Delete a download.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.deleteDownload({owner, repo, id})",type:"js"},{title:"Promise",content:"github.repos.deleteDownload({owner, repo, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.deleteDownload({owner, repo, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"DELETE",url:"/repos/:owner/:repo/contents/:path",title:"deleteFile",name:"deleteFile",description:"<p>Delete a file.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"path",description:"<p>The content path.</p>"},{group:"Parameter",type:"string",optional:!1,field:"message",description:"<p>The commit message.</p>"},{group:"Parameter",type:"string",optional:!1,field:"sha",description:"<p>The blob SHA of the file being removed.</p>"},{group:"Parameter",type:"string",optional:!0,field:"branch",description:"<p>The branch name. If not provided, uses the repository\u2019s default branch (usually master).</p>"},{group:"Parameter",type:"json",optional:!0,field:"committer",description:""},{group:"Parameter",type:"json",optional:!0,field:"author",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.deleteFile({owner, repo, path, message, sha, branch, committer, author})",type:"js"},{title:"Promise",content:"github.repos.deleteFile({owner, repo, path, message, sha, branch, committer, author}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.deleteFile({owner, repo, path, message, sha, branch, committer, author}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"DELETE",url:"/repos/:owner/:repo/hooks/:id",title:"deleteHook",name:"deleteHook",description:"<p>Deleate a hook.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.deleteHook({owner, repo, id})",type:"js"},{title:"Promise",content:"github.repos.deleteHook({owner, repo, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.deleteHook({owner, repo, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"DELETE",url:"/repos/:owner/:repo/invitations/:invitation_id",title:"deleteInvite",name:"deleteInvite",description:"<p>Delete a repository invitation.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"invitation_id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.deleteInvite({owner, repo, invitation_id})",type:"js"},{title:"Promise",content:"github.repos.deleteInvite({owner, repo, invitation_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.deleteInvite({owner, repo, invitation_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"DELETE",url:"/repos/:owner/:repo/releases/:id",title:"deleteRelease",name:"deleteRelease",description:"<p>Delete a release</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.deleteRelease({owner, repo, id})",type:"js"},{title:"Promise",content:"github.repos.deleteRelease({owner, repo, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.deleteRelease({owner, repo, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"PATCH",url:"/repos/:owner/:repo",title:"edit",name:"edit",description:"<p>Update a repo.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"name",description:""},{group:"Parameter",type:"string",optional:!0,field:"description",description:""},{group:"Parameter",type:"string",optional:!0,field:"homepage",description:""},{group:"Parameter",type:"boolean",optional:!0,field:"private",defaultValue:"false",description:"<p>True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false.</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"has_issues",defaultValue:"true",description:"<p>True to enable issues for this repository, false to disable them. Default is true.</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"has_projects",defaultValue:"true",description:"<p>True to enable projects for this repository, false to disable them. Default is true.</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"has_wiki",defaultValue:"true",description:"<p>True to enable the wiki for this repository, false to disable it. Default is true.</p>"},{group:"Parameter",type:"string",optional:!0,field:"default_branch",description:"<p>Updates the default branch for this repository.</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"allow_squash_merge",defaultValue:"true",description:"<p>Either true to allow squash-merging pull requests, or false to prevent squash-merging. Default: true. (In preview period. See README.)</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"allow_merge_commit",defaultValue:"true",description:"<p>Either true to allow merging pull requests with a merge commit, or false to prevent merging pull requests with merge commits. Default: true. (In preview period. See README.)</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"allow_rebase_merge",defaultValue:"true",description:"<p>Either true to allow rebase-merging pull requests, or false to prevent rebase-merging. Default: true. (In preview period. See README.)</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.edit({owner, repo, name, description, homepage, private, has_issues, has_projects, has_wiki, default_branch, allow_squash_merge, allow_merge_commit, allow_rebase_merge})",type:"js"},{title:"Promise",content:"github.repos.edit({owner, repo, name, description, homepage, private, has_issues, has_projects, has_wiki, default_branch, allow_squash_merge, allow_merge_commit, allow_rebase_merge}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.edit({owner, repo, name, description, homepage, private, has_issues, has_projects, has_wiki, default_branch, allow_squash_merge, allow_merge_commit, allow_rebase_merge}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"PATCH",url:"/repos/:owner/:repo/releases/assets/:id",title:"editAsset",name:"editAsset",description:"<p>Edit a release asset.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!1,field:"name",description:""},{group:"Parameter",type:"string",optional:!0,field:"label",description:"<p>An alternate short description of the asset. Used in place of the filename.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.editAsset({owner, repo, id, name, label})",type:"js"},{title:"Promise",content:"github.repos.editAsset({owner, repo, id, name, label}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.editAsset({owner, repo, id, name, label}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"PATCH",url:"/repos/:owner/:repo/hooks/:id",title:"editHook",name:"editHook",description:"<p>Edit a hook.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!1,field:"name",description:""},{group:"Parameter",type:"json",optional:!1,field:"config",description:"<p>A Hash containing key/value pairs to provide settings for this hook. Modifying this will replace the entire config object. These settings vary between the services and are defined in the github-services repo. Booleans are stored internally as <code>1</code> for true, and <code>0</code> for false. Any JSON true/false values will be converted automatically.</p>"},{group:"Parameter",type:"string[]",optional:!0,field:"events",defaultValue:'["push"',description:"<p>Determines what events the hook is triggered for. This replaces the entire array of events. Default: <code>['push']</code>.</p>"},{group:"Parameter",type:"string[]",optional:!0,field:"add_events",description:"<p>Determines a list of events to be added to the list of events that the Hook triggers for.</p>"},{group:"Parameter",type:"string[]",optional:!0,field:"remove_events",description:"<p>Determines a list of events to be removed from the list of events that the Hook triggers for.</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"active",description:"<p>Determines whether the hook is actually triggered on pushes.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.editHook({owner, repo, id, name, config, events, add_events, remove_events, active})",type:"js"},{title:"Promise",content:"github.repos.editHook({owner, repo, id, name, config, events, add_events, remove_events, active}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.editHook({owner, repo, id, name, config, events, add_events, remove_events, active}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"PATCH",url:"/repos/:owner/:repo/releases/:id",title:"editRelease",name:"editRelease",description:"<p>Edit a release.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!1,field:"tag_name",description:"<p>String of the tag</p>"},{group:"Parameter",type:"string",optional:!0,field:"target_commitish",description:"<p>Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually master).</p>"},{group:"Parameter",type:"string",optional:!0,field:"name",description:""},{group:"Parameter",type:"string",optional:!0,field:"body",description:""},{group:"Parameter",type:"boolean",optional:!0,field:"draft",defaultValue:"false",description:"<p>true to create a draft (unpublished) release, false to create a published one. Default: false</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"prerelease",defaultValue:"false",description:"<p>true to identify the release as a prerelease. false to identify the release as a full release. Default: false</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.editRelease({owner, repo, id, tag_name, target_commitish, name, body, draft, prerelease})",type:"js"},{title:"Promise",content:"github.repos.editRelease({owner, repo, id, tag_name, target_commitish, name, body, draft, prerelease}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.editRelease({owner, repo, id, tag_name, target_commitish, name, body, draft, prerelease}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"POST",url:"/repos/:owner/:repo/forks",title:"fork",name:"fork",description:"<p>Create a fork.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!0,field:"organization",description:"<p>Optional parameter to specify the organization name if forking into an organization.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.fork({owner, repo, organization})",type:"js"},{title:"Promise",content:"github.repos.fork({owner, repo, organization}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.fork({owner, repo, organization}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo",title:"get",name:"get",description:"<p>Get a repo for a user.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.get({owner, repo})",type:"js"},{title:"Promise",content:"github.repos.get({owner, repo}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.get({owner, repo}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/user/repos",title:"getAll",name:"getAll",description:"<p>List your repositories</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",allowedValues:["all","public","private"],optional:!0,field:"visibility",defaultValue:"all",description:"<p>Can be one of <code>all</code>, <code>public</code>, or <code>private</code>. Default: <code>all</code>.</p>"},{group:"Parameter",type:"string",optional:!0,field:"affiliation",defaultValue:"owner,collaborator,organization_member",description:"<p>Comma-separated list of values. Can include: <code>owner</code>, <code>collaborator</code>, <code>organization_member</code>.</p>"},{group:"Parameter",type:"string",allowedValues:["all","owner","public","private","member"],optional:!0,field:"type",defaultValue:"all",description:"<p>Possible values: <code>all</code>, <code>owner</code>, <code>public</code>, <code>private</code>, <code>member</code>. Default: <code>all</code>.</p>"},{group:"Parameter",type:"string",allowedValues:["created","updated","pushed","full_name"],optional:!0,field:"sort",defaultValue:"full_name",description:"<p>Possible values: <code>created</code>, <code>updated</code>, <code>pushed</code>, <code>full_name</code>. Default: <code>full_name</code>.</p>"},{group:"Parameter",type:"string",allowedValues:["asc","desc"],optional:!0,field:"direction",defaultValue:"desc",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getAll({visibility, affiliation, type, sort, direction, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getAll({visibility, affiliation, type, sort, direction, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getAll({visibility, affiliation, type, sort, direction, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/comments",title:"getAllCommitComments",name:"getAllCommitComments",description:"<p>List commit comments for a repository.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getAllCommitComments({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getAllCommitComments({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getAllCommitComments({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/:archive_format/:ref",title:"getArchiveLink",name:"getArchiveLink",description:"<p>Get archive link.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",allowedValues:["tarball","zipball"],optional:!1,field:"archive_format",defaultValue:"tarball",description:"<p>Either tarball or zipball, Deafult: tarball.</p>"},{group:"Parameter",type:"string",optional:!0,field:"ref",description:"<p>A valid Git reference. Default: the repository\u2019s default branch (usually master).</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getArchiveLink({owner, repo, archive_format, ref})",type:"js"},{title:"Promise",content:"github.repos.getArchiveLink({owner, repo, archive_format, ref}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getArchiveLink({owner, repo, archive_format, ref}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/releases/assets/:id",title:"getAsset",name:"getAsset",description:"<p>Get a single release asset.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.getAsset({owner, repo, id})",type:"js"},{title:"Promise",content:"github.repos.getAsset({owner, repo, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getAsset({owner, repo, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/releases/:id/assets",title:"getAssets",name:"getAssets",description:"<p>List assets for a release.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.getAssets({owner, repo, id})",type:"js"},{title:"Promise",content:"github.repos.getAssets({owner, repo, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getAssets({owner, repo, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/branches/:branch",title:"getBranch",name:"getBranch",description:"<p>Get branch.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getBranch({owner, repo, branch, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getBranch({owner, repo, branch, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getBranch({owner, repo, branch, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/branches/:branch/protection",title:"getBranchProtection",name:"getBranchProtection",description:"<p>Get branch protection.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getBranchProtection({owner, repo, branch, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getBranchProtection({owner, repo, branch, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getBranchProtection({owner, repo, branch, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/branches",title:"getBranches",name:"getBranches",description:"<p>List branches.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"boolean",optional:!0,field:"protected",description:"<p>Set to true to only return protected branches</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getBranches({owner, repo, protected, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getBranches({owner, repo, protected, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getBranches({owner, repo, protected, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repositories/:id",title:"getById",name:"getById",description:"<p>Get a single repo by id.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.getById({id})",type:"js"},{title:"Promise",content:"github.repos.getById({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getById({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/traffic/clones",title:"getClones",name:"getClones",description:"<p>Get the total number of clones and breakdown per day or week for the last 14 days.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getClones({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getClones({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getClones({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/collaborators",title:"getCollaborators",name:"getCollaborators",description:"<p>List collaborators</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",allowedValues:["outside","all","direct"],optional:!0,field:"affiliation",defaultValue:"all",description:"<p>Filter collaborators returned by their affiliation.</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getCollaborators({owner, repo, affiliation, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getCollaborators({owner, repo, affiliation, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getCollaborators({owner, repo, affiliation, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/commits/:ref/status",title:"getCombinedStatusForRef",name:"getCombinedStatusForRef",description:"<p>Get the combined status for a specific ref.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"ref",description:"<p>Ref to fetch the status for. It can be a SHA, a branch name, or a tag name.</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getCombinedStatusForRef({owner, repo, ref, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getCombinedStatusForRef({owner, repo, ref, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getCombinedStatusForRef({owner, repo, ref, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/commits/:sha",title:"getCommit",name:"getCommit",description:"<p>Get a single commit.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"sha",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.getCommit({owner, repo, sha})",type:"js"},{title:"Promise",content:"github.repos.getCommit({owner, repo, sha}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getCommit({owner, repo, sha}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/comments/:id",title:"getCommitComment",name:"getCommitComment",description:"<p>Get a single commit comment.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.getCommitComment({owner, repo, id})",type:"js"},{title:"Promise",content:"github.repos.getCommitComment({owner, repo, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getCommitComment({owner, repo, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/commits/:ref/comments",title:"getCommitComments",name:"getCommitComments",description:"<p>List comments for a single commit.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"ref",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getCommitComments({owner, repo, ref, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getCommitComments({owner, repo, ref, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getCommitComments({owner, repo, ref, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/commits",title:"getCommits",name:"getCommits",description:"<p>List commits on a repository.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!0,field:"sha",description:"<p>Sha or branch to start listing commits from.</p>"},{group:"Parameter",type:"string",optional:!0,field:"path",description:"<p>Only commits containing this file path will be returned.</p>"},{group:"Parameter",type:"string",optional:!0,field:"author",description:"<p>GitHub login or email address by which to filter by commit author.</p>"},{group:"Parameter",type:"date",optional:!0,field:"since",description:"<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"},{group:"Parameter",type:"date",optional:!0,field:"until",description:"<p>Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getCommits({owner, repo, sha, path, author, since, until, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getCommits({owner, repo, sha, path, author, since, until, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getCommits({owner, repo, sha, path, author, since, until, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:name/community/profile",title:"getCommunityProfileMetrics",name:"getCommunityProfileMetrics",description:"<p>Retrieve community profile metrics.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"name",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.getCommunityProfileMetrics({owner, name})",type:"js"},{title:"Promise",content:"github.repos.getCommunityProfileMetrics({owner, name}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getCommunityProfileMetrics({owner, name}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/contents/:path",title:"getContent",name:"getContent",description:"<p>Get the contents of a file or directory in a repository.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"path",description:"<p>The content path.</p>"},{group:"Parameter",type:"string",optional:!0,field:"ref",description:"<p>The String name of the Commit/Branch/Tag. Defaults to master.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getContent({owner, repo, path, ref})",type:"js"},{title:"Promise",content:"github.repos.getContent({owner, repo, path, ref}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getContent({owner, repo, path, ref}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/contributors",title:"getContributors",name:"getContributors",description:"<p>Get contributors for the specified repository.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"boolean",optional:!0,field:"anon",description:"<p>Set to 1 or true to include anonymous contributors in results.</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getContributors({owner, repo, anon, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getContributors({owner, repo, anon, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getContributors({owner, repo, anon, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/keys/:id",title:"getDeployKey",name:"getDeployKey",description:"<p>Get a deploy key.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.getDeployKey({owner, repo, id})",type:"js"},{title:"Promise",content:"github.repos.getDeployKey({owner, repo, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getDeployKey({owner, repo, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/keys",title:"getDeployKeys",name:"getDeployKeys",description:"<p>List deploy keys.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getDeployKeys({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getDeployKeys({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getDeployKeys({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/deployments/:deployment_id",title:"getDeployment",name:"getDeployment",description:"<p>Get a single Deployment. (In preview period. See README.)</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"deployment_id",description:"<p>The deployment id.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getDeployment({owner, repo, deployment_id})",type:"js"},{title:"Promise",content:"github.repos.getDeployment({owner, repo, deployment_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getDeployment({owner, repo, deployment_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/deployments/:id/statuses/:status_id",title:"getDeploymentStatus",name:"getDeploymentStatus",description:"<p>List deployment statuses. (In preview period. See README.)</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:"<p>The Deployment ID to list the statuses from.</p>"},{group:"Parameter",type:"string",optional:!1,field:"status_id",description:"<p>The Deployment Status ID.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getDeploymentStatus({owner, repo, id, status_id})",type:"js"},{title:"Promise",content:"github.repos.getDeploymentStatus({owner, repo, id, status_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getDeploymentStatus({owner, repo, id, status_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/deployments/:id/statuses",title:"getDeploymentStatuses",name:"getDeploymentStatuses",description:"<p>List deployment statuses. (In preview period. See README.)</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.getDeploymentStatuses({owner, repo, id})",type:"js"},{title:"Promise",content:"github.repos.getDeploymentStatuses({owner, repo, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getDeploymentStatuses({owner, repo, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/deployments",title:"getDeployments",name:"getDeployments",description:"<p>List deployments.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!0,field:"sha",defaultValue:"none",description:"<p>The short or long sha that was recorded at creation time. Default: none.</p>"},{group:"Parameter",type:"string",optional:!0,field:"ref",defaultValue:"none",description:"<p>The name of the ref. This can be a branch, tag, or sha. Default: none.</p>"},{group:"Parameter",type:"string",optional:!0,field:"task",defaultValue:"none",description:"<p>The name of the task for the deployment. e.g. deploy or deploy:migrations. Default: none.</p>"},{group:"Parameter",type:"string",optional:!0,field:"environment",defaultValue:"none",description:"<p>The name of the environment that was deployed to. e.g. staging or production. Default: none.</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getDeployments({owner, repo, sha, ref, task, environment, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getDeployments({owner, repo, sha, ref, task, environment, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getDeployments({owner, repo, sha, ref, task, environment, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/downloads/:id",title:"getDownload",name:"getDownload",description:"<p>Get a single download.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.getDownload({owner, repo, id})",type:"js"},{title:"Promise",content:"github.repos.getDownload({owner, repo, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getDownload({owner, repo, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/downloads",title:"getDownloads",name:"getDownloads",description:"<p>List downloads for a repository.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getDownloads({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getDownloads({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getDownloads({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/orgs/:org/repos",title:"getForOrg",name:"getForOrg",description:"<p>List repositories for the specified org.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",allowedValues:["all","public","private","forks","sources","member"],optional:!0,field:"type",defaultValue:"all",description:"<p>Possible values: <code>all</code>, <code>public</code>, <code>private</code>, <code>forks</code>, <code>sources</code>, <code>member</code>. Default: <code>all</code>.</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getForOrg({org, type, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getForOrg({org, type, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getForOrg({org, type, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/users/:username/repos",title:"getForUser",name:"getForUser",description:"<p>List public repositories for the specified user.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""},{group:"Parameter",type:"string",allowedValues:["all","owner","member"],optional:!0,field:"type",defaultValue:"owner",description:"<p>Possible values: <code>all</code>, <code>owner</code>, <code>member</code>. Default: <code>owner</code>.</p>"},{group:"Parameter",type:"string",allowedValues:["created","updated","pushed","full_name"],optional:!0,field:"sort",defaultValue:"full_name",description:"<p>Possible values: <code>created</code>, <code>updated</code>, <code>pushed</code>, <code>full_name</code>. Default: <code>full_name</code>.</p>"},{group:"Parameter",type:"string",allowedValues:["asc","desc"],optional:!0,field:"direction",defaultValue:"desc",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getForUser({username, type, sort, direction, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getForUser({username, type, sort, direction, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getForUser({username, type, sort, direction, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/forks",title:"getForks",name:"getForks",description:"<p>List forks.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",allowedValues:["newest","oldest","stargazers"],optional:!0,field:"sort",defaultValue:"newest",description:"<p>Possible values: <code>newest</code>, <code>oldest</code>, <code>stargazers</code>, default: <code>newest</code>.</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getForks({owner, repo, sort, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getForks({owner, repo, sort, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getForks({owner, repo, sort, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/hooks/:id",title:"getHook",name:"getHook",description:"<p>Get single hook.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.getHook({owner, repo, id})",type:"js"},{title:"Promise",content:"github.repos.getHook({owner, repo, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getHook({owner, repo, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/hooks",title:"getHooks",name:"getHooks",description:"<p>List hooks.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getHooks({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getHooks({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getHooks({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/invitations",title:"getInvites",name:"getInvites",description:"<p>List invitations for a repository.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.getInvites({owner, repo})",type:"js"},{title:"Promise",content:"github.repos.getInvites({owner, repo}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getInvites({owner, repo}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/languages",title:"getLanguages",name:"getLanguages",description:"<p>Get languages for the specified repository.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getLanguages({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getLanguages({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getLanguages({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/pages/builds/latest",title:"getLatestPagesBuild",name:"getLatestPagesBuild",description:"<p>Get latest Pages build. (In preview period. See README.)</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.getLatestPagesBuild({owner, repo})",type:"js"},{title:"Promise",content:"github.repos.getLatestPagesBuild({owner, repo}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getLatestPagesBuild({owner, repo}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/releases/latest",title:"getLatestRelease",name:"getLatestRelease",description:"<p>Get the latest release.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.getLatestRelease({owner, repo})",type:"js"},{title:"Promise",content:"github.repos.getLatestRelease({owner, repo}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getLatestRelease({owner, repo}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/pages",title:"getPages",name:"getPages",description:"<p>Get information about a Pages site. (In preview period. See README.)</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getPages({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getPages({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getPages({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/pages/builds/:id",title:"getPagesBuild",name:"getPagesBuild",description:"<p>Get a specific Pages build. (In preview period. See README.)</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.getPagesBuild({owner, repo, id})",type:"js"},{title:"Promise",content:"github.repos.getPagesBuild({owner, repo, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getPagesBuild({owner, repo, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/pages/builds",title:"getPagesBuilds",name:"getPagesBuilds",description:"<p>List Pages builds. (In preview period. See README.)</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getPagesBuilds({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getPagesBuilds({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getPagesBuilds({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/traffic/popular/paths",title:"getPaths",name:"getPaths",description:"<p>Get the top 10 popular contents over the last 14 days.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getPaths({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getPaths({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getPaths({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/branches/:branch/protection/enforce_admins",title:"getProtectedBranchAdminEnforcement",name:"getProtectedBranchAdminEnforcement",description:"<p>Get admin enforcement of protected branch.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getProtectedBranchAdminEnforcement({owner, repo, branch, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getProtectedBranchAdminEnforcement({owner, repo, branch, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getProtectedBranchAdminEnforcement({owner, repo, branch, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",title:"getProtectedBranchPullRequestReviewEnforcement",name:"getProtectedBranchPullRequestReviewEnforcement",description:"<p>Get pull request review enforcement of protected branch.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getProtectedBranchPullRequestReviewEnforcement({owner, repo, branch, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getProtectedBranchPullRequestReviewEnforcement({owner, repo, branch, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getProtectedBranchPullRequestReviewEnforcement({owner, repo, branch, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/branches/:branch/protection/required_status_checks",title:"getProtectedBranchRequiredStatusChecks",name:"getProtectedBranchRequiredStatusChecks",description:"<p>Get required status checks of protected branch.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getProtectedBranchRequiredStatusChecks({owner, repo, branch, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getProtectedBranchRequiredStatusChecks({owner, repo, branch, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getProtectedBranchRequiredStatusChecks({owner, repo, branch, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",title:"getProtectedBranchRequiredStatusChecksContexts",name:"getProtectedBranchRequiredStatusChecksContexts",description:"<p>List required status checks contexts of protected branch.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getProtectedBranchRequiredStatusChecksContexts({owner, repo, branch, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getProtectedBranchRequiredStatusChecksContexts({owner, repo, branch, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getProtectedBranchRequiredStatusChecksContexts({owner, repo, branch, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/branches/:branch/protection/restrictions",title:"getProtectedBranchRestrictions",name:"getProtectedBranchRestrictions",description:"<p>Get restrictions of protected branch.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getProtectedBranchRestrictions({owner, repo, branch, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getProtectedBranchRestrictions({owner, repo, branch, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getProtectedBranchRestrictions({owner, repo, branch, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",title:"getProtectedBranchTeamRestrictions",name:"getProtectedBranchTeamRestrictions",description:"<p>List team restrictions of protected branch.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getProtectedBranchTeamRestrictions({owner, repo, branch, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getProtectedBranchTeamRestrictions({owner, repo, branch, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getProtectedBranchTeamRestrictions({owner, repo, branch, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/users",title:"getProtectedBranchUserRestrictions",name:"getProtectedBranchUserRestrictions",description:"<p>List user restrictions of protected branch.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getProtectedBranchUserRestrictions({owner, repo, branch, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getProtectedBranchUserRestrictions({owner, repo, branch, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getProtectedBranchUserRestrictions({owner, repo, branch, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repositories",title:"getPublic",name:"getPublic",description:"<p>List all public repositories</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!0,field:"since",description:"<p>The integer ID of the last Repository that you've seen.</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getPublic({since, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getPublic({since, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getPublic({since, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/readme",title:"getReadme",name:"getReadme",description:"<p>Get the README for the given repository.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!0,field:"ref",description:"<p>The name of the commit/branch/tag. Default: the repository\u2019s default branch (usually master)</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getReadme({owner, repo, ref})",type:"js"},{title:"Promise",content:"github.repos.getReadme({owner, repo, ref}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getReadme({owner, repo, ref}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/traffic/popular/referrers",title:"getReferrers",name:"getReferrers",description:"<p>Get the top 10 referrers over the last 14 days.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getReferrers({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getReferrers({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getReferrers({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/releases/:id",title:"getRelease",name:"getRelease",description:"<p>Get a single release.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.getRelease({owner, repo, id})",type:"js"},{title:"Promise",content:"github.repos.getRelease({owner, repo, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getRelease({owner, repo, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/releases/tags/:tag",title:"getReleaseByTag",name:"getReleaseByTag",description:"<p>Get a release by tag name.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"tag",description:"<p>String of the tag</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getReleaseByTag({owner, repo, tag})",type:"js"},{title:"Promise",content:"github.repos.getReleaseByTag({owner, repo, tag}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getReleaseByTag({owner, repo, tag}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/releases",title:"getReleases",name:"getReleases",description:"<p>List releases for a repository.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getReleases({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getReleases({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getReleases({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/commits/:ref",title:"getShaOfCommitRef",name:"getShaOfCommitRef",description:"<p>Get the SHA-1 of a commit reference.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"ref",description:"<p>String of the name of the fully qualified reference (ie: heads/master). If it doesn\u2019t have at least one slash, it will be rejected.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getShaOfCommitRef({owner, repo, ref})",type:"js"},{title:"Promise",content:"github.repos.getShaOfCommitRef({owner, repo, ref}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getShaOfCommitRef({owner, repo, ref}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/stats/code_frequency",title:"getStatsCodeFrequency",name:"getStatsCodeFrequency",description:"<p>Get the number of additions and deletions per week.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.getStatsCodeFrequency({owner, repo})",type:"js"},{title:"Promise",content:"github.repos.getStatsCodeFrequency({owner, repo}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getStatsCodeFrequency({owner, repo}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/stats/commit_activity",title:"getStatsCommitActivity",name:"getStatsCommitActivity",description:"<p>Get the last year of commit activity data.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.getStatsCommitActivity({owner, repo})",type:"js"},{title:"Promise",content:"github.repos.getStatsCommitActivity({owner, repo}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getStatsCommitActivity({owner, repo}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/stats/contributors",title:"getStatsContributors",name:"getStatsContributors",description:"<p>Get contributors list with additions, deletions, and commit counts.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.getStatsContributors({owner, repo})",type:"js"},{title:"Promise",content:"github.repos.getStatsContributors({owner, repo}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getStatsContributors({owner, repo}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/stats/participation",title:"getStatsParticipation",name:"getStatsParticipation",description:"<p>Get the weekly commit count for the repository owner and everyone else.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.getStatsParticipation({owner, repo})",type:"js"},{title:"Promise",content:"github.repos.getStatsParticipation({owner, repo}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getStatsParticipation({owner, repo}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/stats/punch_card",title:"getStatsPunchCard",name:"getStatsPunchCard",description:"<p>Get the number of commits per hour in each day.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.getStatsPunchCard({owner, repo})",type:"js"},{title:"Promise",content:"github.repos.getStatsPunchCard({owner, repo}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getStatsPunchCard({owner, repo}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/commits/:ref/statuses",title:"getStatuses",name:"getStatuses",description:"<p>List statuses for a specfic ref.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"ref",description:"<p>Ref to list the statuses from. It can be a SHA, a branch name, or a tag name.</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getStatuses({owner, repo, ref, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getStatuses({owner, repo, ref, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getStatuses({owner, repo, ref, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/tags",title:"getTags",name:"getTags",description:"<p>Get tags for the specified repository.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getTags({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getTags({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getTags({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/teams",title:"getTeams",name:"getTeams",description:"<p>Get teams for the specified repository.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getTeams({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getTeams({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getTeams({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/topics",title:"getTopics",name:"getTopics",description:"<p>List all topics for a repository. (In preview period. See README.)</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getTopics({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getTopics({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getTopics({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/traffic/views",title:"getViews",name:"getViews",description:"<p>Get the total number of views and breakdown per day or week for the last 14 days.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.getViews({owner, repo, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.getViews({owner, repo, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.getViews({owner, repo, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"POST",url:"/repos/:owner/:repo/merges",title:"merge",name:"merge",description:"<p>Perform a merge.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"base",description:"<p>The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.</p>"},{group:"Parameter",type:"string",optional:!1,field:"head",description:"<p>The branch (or git ref) where your changes are implemented.</p>"},{group:"Parameter",type:"string",optional:!0,field:"commit_message",description:"<p>Commit message to use for the merge commit. If omitted, a default message will be used.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.merge({owner, repo, base, head, commit_message})",type:"js"},{title:"Promise",content:"github.repos.merge({owner, repo, base, head, commit_message}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.merge({owner, repo, base, head, commit_message}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"POST",url:"/repos/:owner/:repo/hooks/:id/pings",title:"pingHook",name:"pingHook",description:"<p>Ping a hook.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.pingHook({owner, repo, id})",type:"js"},{title:"Promise",content:"github.repos.pingHook({owner, repo, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.pingHook({owner, repo, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"DELETE",url:"/repos/:owner/:repo/branches/:branch/protection",title:"removeBranchProtection",name:"removeBranchProtection",description:"<p>Remove branch protection.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.removeBranchProtection({owner, repo, branch})",type:"js"},{title:"Promise",content:"github.repos.removeBranchProtection({owner, repo, branch}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.removeBranchProtection({owner, repo, branch}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"DELETE",url:"/repos/:owner/:repo/collaborators/:username",title:"removeCollaborator",name:"removeCollaborator",description:"<p>Remove user as a collaborator.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.removeCollaborator({owner, repo, username})",type:"js"},{title:"Promise",content:"github.repos.removeCollaborator({owner, repo, username}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.removeCollaborator({owner, repo, username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"DELETE",url:"/repos/:owner/:repo/branches/:branch/protection/enforce_admins",title:"removeProtectedBranchAdminEnforcement",name:"removeProtectedBranchAdminEnforcement",description:"<p>Remove admin enforcement of protected branch.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.removeProtectedBranchAdminEnforcement({owner, repo, branch})",type:"js"},{title:"Promise",content:"github.repos.removeProtectedBranchAdminEnforcement({owner, repo, branch}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.removeProtectedBranchAdminEnforcement({owner, repo, branch}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"DELETE",url:"/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",title:"removeProtectedBranchPullRequestReviewEnforcement",name:"removeProtectedBranchPullRequestReviewEnforcement",description:"<p>Remove pull request review enforcement of protected branch.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.removeProtectedBranchPullRequestReviewEnforcement({owner, repo, branch})",type:"js"},{title:"Promise",content:"github.repos.removeProtectedBranchPullRequestReviewEnforcement({owner, repo, branch}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.removeProtectedBranchPullRequestReviewEnforcement({owner, repo, branch}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"DELETE",url:"/repos/:owner/:repo/branches/:branch/protection/required_status_checks",title:"removeProtectedBranchRequiredStatusChecks",name:"removeProtectedBranchRequiredStatusChecks",description:"<p>Remove required status checks of protected branch.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.removeProtectedBranchRequiredStatusChecks({owner, repo, branch})",type:"js"},{title:"Promise",content:"github.repos.removeProtectedBranchRequiredStatusChecks({owner, repo, branch}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.removeProtectedBranchRequiredStatusChecks({owner, repo, branch}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"DELETE",url:"/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",title:"removeProtectedBranchRequiredStatusChecksContexts",name:"removeProtectedBranchRequiredStatusChecksContexts",description:"<p>Remove required status checks contexts of protected branch.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""},{group:"Parameter",type:"string[]",optional:!1,field:"contexts",description:"<p>An array of protected branch required status checks contexts (e.g. continuous-integration/jenkins).</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.removeProtectedBranchRequiredStatusChecksContexts({owner, repo, branch, contexts})",type:"js"},{title:"Promise",content:"github.repos.removeProtectedBranchRequiredStatusChecksContexts({owner, repo, branch, contexts}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.removeProtectedBranchRequiredStatusChecksContexts({owner, repo, branch, contexts}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"DELETE",url:"/repos/:owner/:repo/branches/:branch/protection/restrictions",title:"removeProtectedBranchRestrictions",name:"removeProtectedBranchRestrictions",description:"<p>Remove restrictions of protected branch.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.removeProtectedBranchRestrictions({owner, repo, branch})",type:"js"},{title:"Promise",content:"github.repos.removeProtectedBranchRestrictions({owner, repo, branch}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.removeProtectedBranchRestrictions({owner, repo, branch}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"DELETE",url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",title:"removeProtectedBranchTeamRestrictions",name:"removeProtectedBranchTeamRestrictions",description:"<p>Remove team restrictions of protected branch.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""},{group:"Parameter",type:"string[]",optional:!1,field:"teams",description:"<p>An array of team slugs (e.g. justice-league).</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.removeProtectedBranchTeamRestrictions({owner, repo, branch, teams})",type:"js"},{title:"Promise",content:"github.repos.removeProtectedBranchTeamRestrictions({owner, repo, branch, teams}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.removeProtectedBranchTeamRestrictions({owner, repo, branch, teams}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"DELETE",url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/users",title:"removeProtectedBranchUserRestrictions",name:"removeProtectedBranchUserRestrictions",description:"<p>Remove user restrictions of protected branch.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""},{group:"Parameter",type:"string[]",optional:!1,field:"users",description:"<p>An array of team slugs (e.g. justice-league).</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.removeProtectedBranchUserRestrictions({owner, repo, branch, users})",type:"js"},{title:"Promise",content:"github.repos.removeProtectedBranchUserRestrictions({owner, repo, branch, users}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.removeProtectedBranchUserRestrictions({owner, repo, branch, users}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"PUT",url:"/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",title:"replaceProtectedBranchRequiredStatusChecksContexts",name:"replaceProtectedBranchRequiredStatusChecksContexts",description:"<p>Replace required status checks contexts of protected branch.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""},{group:"Parameter",type:"string[]",optional:!1,field:"contexts",description:"<p>An array of protected branch required status checks contexts (e.g. continuous-integration/jenkins).</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.replaceProtectedBranchRequiredStatusChecksContexts({owner, repo, branch, contexts})",type:"js"},{title:"Promise",content:"github.repos.replaceProtectedBranchRequiredStatusChecksContexts({owner, repo, branch, contexts}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.replaceProtectedBranchRequiredStatusChecksContexts({owner, repo, branch, contexts}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"PUT",url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",title:"replaceProtectedBranchTeamRestrictions",name:"replaceProtectedBranchTeamRestrictions",description:"<p>Replace team restrictions of protected branch.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""},{group:"Parameter",type:"string[]",optional:!1,field:"teams",description:"<p>An array of team slugs (e.g. justice-league).</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.replaceProtectedBranchTeamRestrictions({owner, repo, branch, teams})",type:"js"},{title:"Promise",content:"github.repos.replaceProtectedBranchTeamRestrictions({owner, repo, branch, teams}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.replaceProtectedBranchTeamRestrictions({owner, repo, branch, teams}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"PUT",url:"/repos/:owner/:repo/branches/:branch/protection/restrictions/users",title:"replaceProtectedBranchUserRestrictions",name:"replaceProtectedBranchUserRestrictions",description:"<p>Replace user restrictions of protected branch.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""},{group:"Parameter",type:"string[]",optional:!1,field:"users",description:"<p>An array of team slugs (e.g. justice-league).</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.replaceProtectedBranchUserRestrictions({owner, repo, branch, users})",type:"js"},{title:"Promise",content:"github.repos.replaceProtectedBranchUserRestrictions({owner, repo, branch, users}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.replaceProtectedBranchUserRestrictions({owner, repo, branch, users}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"PUT",url:"/repos/:owner/:repo/topics",title:"replaceTopics",name:"replaceTopics",description:"<p>Replace all topics for a repository. (In preview period. See README.)</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string[]",optional:!1,field:"names",description:"<p>An array of topics to add to the repository. Pass one or more topics to replace the set of existing topics. Send an empty array ([]) to clear all topics from the repository.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.replaceTopics({owner, repo, names})",type:"js"},{title:"Promise",content:"github.repos.replaceTopics({owner, repo, names}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.replaceTopics({owner, repo, names}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"POST",url:"/repos/:owner/:repo/pages/builds",title:"requestPageBuild",name:"requestPageBuild",description:"<p>Request a page build. (In preview period. See README.)</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.requestPageBuild({owner, repo})",type:"js"},{title:"Promise",content:"github.repos.requestPageBuild({owner, repo}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.requestPageBuild({owner, repo}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/repos/:owner/:repo/collaborators/:username/permission",title:"reviewUserPermissionLevel",name:"reviewUserPermissionLevel",description:"<p>Review a user's permission level.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.reviewUserPermissionLevel({owner, repo, username})",type:"js"},{title:"Promise",content:"github.repos.reviewUserPermissionLevel({owner, repo, username}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.reviewUserPermissionLevel({owner, repo, username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"POST",url:"/repos/:owner/:repo/hooks/:id/tests",title:"testHook",name:"testHook",description:"<p>Test a [push] hook.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.testHook({owner, repo, id})",type:"js"},{title:"Promise",content:"github.repos.testHook({owner, repo, id}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.testHook({owner, repo, id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"PUT",url:"/repos/:owner/:repo/branches/:branch/protection",title:"updateBranchProtection",name:"updateBranchProtection",description:"<p>Update branch protection.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""},{group:"Parameter",type:"json",optional:!1,field:"required_status_checks",description:"<p>JSON object that contains the following keys: <code>include_admins</code> - Enforce required status checks for repository administrators, <code>strict</code> - Require branches to be up to date before merging, <code>contexts</code> - The list of status checks to require in order to merge into this branch. This object can have the value of <code>null</code> for disabled.</p>"},{group:"Parameter",type:"json",optional:!1,field:"required_pull_request_reviews",description:"<p>JSON object that contains the following keys: <code>include_admins</code> - Enforce required status checks for repository administrators.</p>"},{group:"Parameter",type:"json",optional:!1,field:"restrictions",description:"<p>JSON object that contains the following keys: <code>users</code> - The list of user logins with push access, <code>teams</code> - The list of team slugs with push access. This object can have the value of <code>null</code> for disabled.</p>"},{group:"Parameter",type:"boolean",optional:!1,field:"enforce_admins",description:"<p>Enforces required status checks for repository administrators.</p>"},{group:"Parameter",type:"json",optional:!0,field:"dismissal_restrictions",description:"<p>JSON object that contains the following keys: <code>users</code> - The list of user logins with dismissal access, <code>teams</code> - The list of team slugs with dismissal access. This object can have the value of <code>null</code> for disabled.</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.updateBranchProtection({owner, repo, branch, required_status_checks, required_pull_request_reviews, restrictions, enforce_admins, dismissal_restrictions, page, per_page})",type:"js"},{title:"Promise",content:"github.repos.updateBranchProtection({owner, repo, branch, required_status_checks, required_pull_request_reviews, restrictions, enforce_admins, dismissal_restrictions, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.updateBranchProtection({owner, repo, branch, required_status_checks, required_pull_request_reviews, restrictions, enforce_admins, dismissal_restrictions, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"PATCH",url:"/repos/:owner/:repo/comments/:id",title:"updateCommitComment",name:"updateCommitComment",description:"<p>Update a commit comment.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"id",description:""},{group:"Parameter",type:"string",optional:!1,field:"body",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.updateCommitComment({owner, repo, id, body})",type:"js"},{title:"Promise",content:"github.repos.updateCommitComment({owner, repo, id, body}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.updateCommitComment({owner, repo, id, body}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"PUT",url:"/repos/:owner/:repo/contents/:path",title:"updateFile",name:"updateFile",description:"<p>Update a file.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"path",description:"<p>The content path.</p>"},{group:"Parameter",type:"string",optional:!1,field:"message",description:"<p>The commit message.</p>"},{group:"Parameter",type:"string",optional:!1,field:"content",description:"<p>The updated file content, Base64 encoded.</p>"},{group:"Parameter",type:"string",optional:!1,field:"sha",description:"<p>The blob SHA of the file being replaced.</p>"},{group:"Parameter",type:"string",optional:!0,field:"branch",description:"<p>The branch name. If not provided, uses the repository\u2019s default branch (usually master).</p>"},{group:"Parameter",type:"json",optional:!0,field:"committer",description:""},{group:"Parameter",type:"json",optional:!0,field:"author",description:""}]}},examples:[{title:"async/await",content:"const result = await github.repos.updateFile({owner, repo, path, message, content, sha, branch, committer, author})",type:"js"},{title:"Promise",content:"github.repos.updateFile({owner, repo, path, message, content, sha, branch, committer, author}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.updateFile({owner, repo, path, message, content, sha, branch, committer, author}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"PATCH",url:"/repos/:owner/:repo/invitations/:invitation_id",title:"updateInvite",name:"updateInvite",description:"<p>Update a repository invitation.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"invitation_id",description:""},{group:"Parameter",type:"string",allowedValues:["read","write","admin"],optional:!0,field:"permissions",description:"<p>The permissions that the associated user will have on the repository.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.updateInvite({owner, repo, invitation_id, permissions})",type:"js"},{title:"Promise",content:"github.repos.updateInvite({owner, repo, invitation_id, permissions}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.updateInvite({owner, repo, invitation_id, permissions}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"PATCH",url:"/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",title:"updateProtectedBranchPullRequestReviewEnforcement",name:"updateProtectedBranchPullRequestReviewEnforcement",description:"<p>Update pull request review enforcement of protected branch.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""},{group:"Parameter",type:"json",optional:!0,field:"dismissal_restrictions",description:"<p>JSON object that contains the following keys: <code>users</code> - The list of user logins with dismissal access, <code>teams</code> - The list of team slugs with dismissal access. This object can have the value of <code>null</code> for disabled.</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"dismiss_stale_reviews",description:"<p>Dismiss approved reviews automatically when a new commit is pushed.</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"require_code_owner_reviews",description:"<p>Blocks merge until code owners have reviewed.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.updateProtectedBranchPullRequestReviewEnforcement({owner, repo, branch, dismissal_restrictions, dismiss_stale_reviews, require_code_owner_reviews})",type:"js"},{title:"Promise",content:"github.repos.updateProtectedBranchPullRequestReviewEnforcement({owner, repo, branch, dismissal_restrictions, dismiss_stale_reviews, require_code_owner_reviews}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.updateProtectedBranchPullRequestReviewEnforcement({owner, repo, branch, dismissal_restrictions, dismiss_stale_reviews, require_code_owner_reviews}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"PATCH",url:"/repos/:owner/:repo/branches/:branch/protection/required_status_checks",title:"updateProtectedBranchRequiredStatusChecks",name:"updateProtectedBranchRequiredStatusChecks",description:"<p>Update required status checks of protected branch.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"owner",description:""},{group:"Parameter",type:"string",optional:!1,field:"repo",description:""},{group:"Parameter",type:"string",optional:!1,field:"branch",description:""},{group:"Parameter",type:"boolean",optional:!0,field:"strict",description:"<p>Require branches to be up to date before merging.</p>"},{group:"Parameter",type:"string[]",optional:!0,field:"contexts",description:"<p>The list of status checks to require in order to merge into this branch.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.updateProtectedBranchRequiredStatusChecks({owner, repo, branch, strict, contexts})",type:"js"},{title:"Promise",content:"github.repos.updateProtectedBranchRequiredStatusChecks({owner, repo, branch, strict, contexts}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.updateProtectedBranchRequiredStatusChecks({owner, repo, branch, strict, contexts}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"POST",url:":url",title:"uploadAsset",name:"uploadAsset",description:"<p>Upload a release asset.</p>",group:"Repos",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"url",description:"<p>This endpoint makes use of a Hypermedia relation (https://developer.github.com/v3/#hypermedia) to determine which URL to access. This endpoint is provided by a URI template in the release's API response (https://developer.github.com/v3/repos/releases/#get-a-single-release). You need to use an HTTP client which supports SNI (https://en.wikipedia.org/wiki/Server_Name_Indication) to make calls to this endpoint.</p>"},{group:"Parameter",type:"object",optional:!1,field:"file",description:"<p>A file read stream, a String or a Buffer.</p>"},{group:"Parameter",type:"string",optional:!1,field:"contentType",description:"<p>The content type of the asset. This should be set in the Header. Example: 'application/zip'. For a list of acceptable types, refer this list of media types (https://www.iana.org/assignments/media-types/media-types.xhtml)</p>"},{group:"Parameter",type:"number",optional:!1,field:"contentLength",description:"<p>File size in bytes.</p>"},{group:"Parameter",type:"string",optional:!1,field:"name",description:"<p>The file name of the asset. This should be set in a URI query parameter.</p>"},{group:"Parameter",type:"string",optional:!0,field:"label",description:"<p>An alternate short description of the asset. Used in place of the filename. This should be set in a URI query parameter.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.repos.uploadAsset({url, file, contentType, contentLength, name, label})",type:"js"},{title:"Promise",content:"github.repos.uploadAsset({url, file, contentType, contentLength, name, label}).then(result => {})",type:"js"},{title:"Callback",content:"github.repos.uploadAsset({url, file, contentType, contentLength, name, label}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Repos"},{type:"GET",url:"/search/code",title:"code",name:"code",description:"<p>Search code.</p>",group:"Search",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"q",description:"<p>Search Term</p>"},{group:"Parameter",type:"string",allowedValues:["indexed"],optional:!0,field:"sort",description:"<p>The sort field. Can only be indexed, which indicates how recently a file has been indexed by the GitHub search infrastructure. Default: results are sorted by best match.</p>"},{group:"Parameter",type:"string",allowedValues:["asc","desc"],optional:!0,field:"order",defaultValue:"desc",description:"<p>asc or desc</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.search.code({q, sort, order, page, per_page})",type:"js"},{title:"Promise",content:"github.search.code({q, sort, order, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.search.code({q, sort, order, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Search"},{type:"GET",url:"/search/commits",title:"commits",name:"commits",description:"<p>Search commits. (In preview period. See README.)</p>",group:"Search",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"q",description:"<p>Search Term</p>"},{group:"Parameter",type:"string",allowedValues:["author-date","committer-date"],optional:!0,field:"sort",description:"<p>The sort field. Can be author-date or committer-date. Default: best match.</p>"},{group:"Parameter",type:"string",allowedValues:["asc","desc"],optional:!0,field:"order",defaultValue:"desc",description:"<p>asc or desc</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.search.commits({q, sort, order, page, per_page})",type:"js"},{title:"Promise",content:"github.search.commits({q, sort, order, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.search.commits({q, sort, order, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Search"},{type:"GET",url:"/legacy/user/email/:email",title:"email",name:"email",description:"<p>Search against public email addresses.</p>",group:"Search",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"email",description:"<p>The email address</p>"}]}},examples:[{title:"async/await",content:"const result = await github.search.email({email})",type:"js"},{title:"Promise",content:"github.search.email({email}).then(result => {})",type:"js"},{title:"Callback",content:"github.search.email({email}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Search"},{type:"GET",url:"/search/issues",title:"issues",name:"issues",description:"<p>Search issues.</p>",group:"Search",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"q",description:"<p>Search Term</p>"},{group:"Parameter",type:"string",allowedValues:["comments","created","updated"],optional:!0,field:"sort",description:"<p>The sort field. Can be comments, created, or updated. Default: results are sorted by best match.</p>"},{group:"Parameter",type:"string",allowedValues:["asc","desc"],optional:!0,field:"order",defaultValue:"desc",description:"<p>asc or desc</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.search.issues({q, sort, order, page, per_page})",type:"js"},{title:"Promise",content:"github.search.issues({q, sort, order, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.search.issues({q, sort, order, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Search"},{type:"GET",url:"/search/repositories",title:"repos",name:"repos",description:"<p>Search repositories.</p>",group:"Search",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"q",description:"<p>Search Term</p>"},{group:"Parameter",type:"string",allowedValues:["stars","forks","updated"],optional:!0,field:"sort",description:"<p>stars, forks, or updated</p>"},{group:"Parameter",type:"string",allowedValues:["asc","desc"],optional:!0,field:"order",defaultValue:"desc",description:"<p>asc or desc</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.search.repos({q, sort, order, page, per_page})",type:"js"},{title:"Promise",content:"github.search.repos({q, sort, order, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.search.repos({q, sort, order, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Search"},{type:"GET",url:"/search/users",title:"users",name:"users",description:"<p>Search users.</p>",group:"Search",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"q",description:"<p>Search Term</p>"},{group:"Parameter",type:"string",allowedValues:["followers","repositories","joined"],optional:!0,field:"sort",description:"<p>The sort field. Can be followers, repositories, or joined. Default: results are sorted by best match.</p>"},{group:"Parameter",type:"string",allowedValues:["asc","desc"],optional:!0,field:"order",defaultValue:"desc",description:"<p>asc or desc</p>"},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.search.users({q, sort, order, page, per_page})",type:"js"},{title:"Promise",content:"github.search.users({q, sort, order, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.search.users({q, sort, order, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Search"},{type:"PATCH",url:"/user/repository_invitations/:invitation_id",title:"acceptRepoInvite",name:"acceptRepoInvite",description:"<p>Accept a repository invitation.</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"invitation_id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.users.acceptRepoInvite({invitation_id})",type:"js"},{title:"Promise",content:"github.users.acceptRepoInvite({invitation_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.acceptRepoInvite({invitation_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"POST",url:"/user/emails",title:"addEmails",name:"addEmails",description:"<p>Add email address(es).</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string[]",optional:!1,field:"emails",description:"<p>You can post a single email address or an array of addresses.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.users.addEmails({emails})",type:"js"},{title:"Promise",content:"github.users.addEmails({emails}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.addEmails({emails}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"PUT",url:"/user/installations/:installation_id/repositories/:repository_id",title:"addRepoToInstallation",name:"addRepoToInstallation",description:"<p>Add a single repository to an installation. (In preview period. See README.)</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"installation_id",description:""},{group:"Parameter",type:"string",optional:!1,field:"repository_id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.users.addRepoToInstallation({installation_id, repository_id})",type:"js"},{title:"Promise",content:"github.users.addRepoToInstallation({installation_id, repository_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.addRepoToInstallation({installation_id, repository_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"PUT",url:"/user/blocks/:username",title:"blockUser",name:"blockUser",description:"<p>Block a user. (In preview period. See README.)</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.users.blockUser({username})",type:"js"},{title:"Promise",content:"github.users.blockUser({username}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.blockUser({username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/user/blocks/:username",title:"checkBlockedUser",name:"checkBlockedUser",description:"<p>Check whether you've blocked a user. (In preview period. See README.)</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.users.checkBlockedUser({username})",type:"js"},{title:"Promise",content:"github.users.checkBlockedUser({username}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.checkBlockedUser({username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/user/following/:username",title:"checkFollowing",name:"checkFollowing",description:"<p>Check if you are following a user</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.users.checkFollowing({username})",type:"js"},{title:"Promise",content:"github.users.checkFollowing({username}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.checkFollowing({username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/users/:username/following/:target_user",title:"checkIfOneFollowersOther",name:"checkIfOneFollowersOther",description:"<p>Check if one user follows another</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""},{group:"Parameter",type:"string",optional:!1,field:"target_user",description:""}]}},examples:[{title:"async/await",content:"const result = await github.users.checkIfOneFollowersOther({username, target_user})",type:"js"},{title:"Promise",content:"github.users.checkIfOneFollowersOther({username, target_user}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.checkIfOneFollowersOther({username, target_user}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"POST",url:"/user/gpg_keys",title:"createGpgKey",name:"createGpgKey",description:"<p>Create a GPG key. (In preview period. See README.)</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"armored_public_key",description:"<p>GPG key contents</p>"}]}},examples:[{title:"async/await",content:"const result = await github.users.createGpgKey({armored_public_key})",type:"js"},{title:"Promise",content:"github.users.createGpgKey({armored_public_key}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.createGpgKey({armored_public_key}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"POST",url:"/user/keys",title:"createKey",name:"createKey",description:"<p>Create a public key</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"title",description:""},{group:"Parameter",type:"string",optional:!1,field:"key",description:""}]}},examples:[{title:"async/await",content:"const result = await github.users.createKey({title, key})",type:"js"},{title:"Promise",content:"github.users.createKey({title, key}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.createKey({title, key}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"DELETE",url:"/user/repository_invitations/:invitation_id",title:"declineRepoInvite",name:"declineRepoInvite",description:"<p>Decline a repository invitation.</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"invitation_id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.users.declineRepoInvite({invitation_id})",type:"js"},{title:"Promise",content:"github.users.declineRepoInvite({invitation_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.declineRepoInvite({invitation_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"DELETE",url:"/user/emails",title:"deleteEmails",name:"deleteEmails",description:"<p>Delete email address(es).</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string[]",optional:!1,field:"emails",description:"<p>You can post a single email address or an array of addresses.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.users.deleteEmails({emails})",type:"js"},{title:"Promise",content:"github.users.deleteEmails({emails}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.deleteEmails({emails}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"DELETE",url:"/user/gpg_keys/:id",title:"deleteGpgKey",name:"deleteGpgKey",description:"<p>Delete a GPG key. (In preview period. See README.)</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.users.deleteGpgKey({id})",type:"js"},{title:"Promise",content:"github.users.deleteGpgKey({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.deleteGpgKey({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"DELETE",url:"/user/keys/:id",title:"deleteKey",name:"deleteKey",description:"<p>Delete a public key</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.users.deleteKey({id})",type:"js"},{title:"Promise",content:"github.users.deleteKey({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.deleteKey({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"DELETE",url:"/users/:username/site_admin",title:"demote",name:"demote",description:"<p>Demote a site administrator to an ordinary user</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.users.demote({username})",type:"js"},{title:"Promise",content:"github.users.demote({username}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.demote({username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"PATCH",url:"/user/memberships/orgs/:org",title:"editOrgMembership",name:"editOrgMembership",description:"<p>Edit your organization membership.</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""},{group:"Parameter",type:"string",allowedValues:["active"],optional:!1,field:"state",description:"<p>The state that the membership should be in. Only &quot;active&quot; will be accepted.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.users.editOrgMembership({org, state})",type:"js"},{title:"Promise",content:"github.users.editOrgMembership({org, state}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.editOrgMembership({org, state}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"PUT",url:"/user/following/:username",title:"followUser",name:"followUser",description:"<p>Follow a user</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.users.followUser({username})",type:"js"},{title:"Promise",content:"github.users.followUser({username}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.followUser({username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/user",title:"get",name:"get",description:"<p>Get the authenticated user</p>",group:"Users",examples:[{title:"async/await",content:"const result = await github.users.get({})",type:"js"},{title:"Promise",content:"github.users.get({}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.get({}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/users",title:"getAll",name:"getAll",description:"<p>Get all users</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"number",optional:!0,field:"since",description:"<p>The integer ID of the last User that you\u2019ve seen.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.users.getAll({since})",type:"js"},{title:"Promise",content:"github.users.getAll({since}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getAll({since}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/user/blocks",title:"getBlockedUsers",name:"getBlockedUsers",description:"<p>List blocked users. (In preview period. See README.)</p>",group:"Users",examples:[{title:"async/await",content:"const result = await github.users.getBlockedUsers({})",type:"js"},{title:"Promise",content:"github.users.getBlockedUsers({}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getBlockedUsers({}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/user/:id",title:"getById",name:"getById",description:"<p>Get a single user by GitHub ID</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.users.getById({id})",type:"js"},{title:"Promise",content:"github.users.getById({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getById({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/user/emails",title:"getEmails",name:"getEmails",description:"<p>List email addresses for a user.</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.users.getEmails({page, per_page})",type:"js"},{title:"Promise",content:"github.users.getEmails({page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getEmails({page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/user/followers",title:"getFollowers",name:"getFollowers",description:"<p>List the authenticated user's followers</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.users.getFollowers({page, per_page})",type:"js"},{title:"Promise",content:"github.users.getFollowers({page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getFollowers({page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/users/:username/followers",title:"getFollowersForUser",name:"getFollowersForUser",description:"<p>List a user's followers</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.users.getFollowersForUser({username, page, per_page})",type:"js"},{title:"Promise",content:"github.users.getFollowersForUser({username, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getFollowersForUser({username, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/user/following",title:"getFollowing",name:"getFollowing",description:"<p>List who the authenticated user is following</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.users.getFollowing({page, per_page})",type:"js"},{title:"Promise",content:"github.users.getFollowing({page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getFollowing({page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/users/:username/following",title:"getFollowingForUser",name:"getFollowingForUser",description:"<p>List who a user is following</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.users.getFollowingForUser({username, page, per_page})",type:"js"},{title:"Promise",content:"github.users.getFollowingForUser({username, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getFollowingForUser({username, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/users/:username",title:"getForUser",name:"getForUser",description:"<p>Get a single user</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.users.getForUser({username})",type:"js"},{title:"Promise",content:"github.users.getForUser({username}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getForUser({username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/user/gpg_keys/:id",title:"getGpgKey",name:"getGpgKey",description:"<p>Get a single GPG key. (In preview period. See README.)</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.users.getGpgKey({id})",type:"js"},{title:"Promise",content:"github.users.getGpgKey({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getGpgKey({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/user/gpg_keys",title:"getGpgKeys",name:"getGpgKeys",description:"<p>List your GPG keys. (In preview period. See README.)</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.users.getGpgKeys({page, per_page})",type:"js"},{title:"Promise",content:"github.users.getGpgKeys({page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getGpgKeys({page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/users/:username/gpg_keys",title:"getGpgKeysForUser",name:"getGpgKeysForUser",description:"<p>Lists the GPG keys for a user. This information is accessible by anyone. (In preview period. See README.)</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.users.getGpgKeysForUser({username, page, per_page})",type:"js"},{title:"Promise",content:"github.users.getGpgKeysForUser({username, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getGpgKeysForUser({username, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/user/installations/:installation_id/repositories",title:"getInstallationRepos",name:"getInstallationRepos",description:"<p>List repositories accessible to the user for an installation. (In preview period. See README.)</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"installation_id",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.users.getInstallationRepos({installation_id, page, per_page})",type:"js"},{title:"Promise",content:"github.users.getInstallationRepos({installation_id, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getInstallationRepos({installation_id, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/user/installations",title:"getInstallations",name:"getInstallations",description:"<p>List installations. (In preview period. See README.)</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.users.getInstallations({page, per_page})",type:"js"},{title:"Promise",content:"github.users.getInstallations({page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getInstallations({page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/user/keys/:id",title:"getKey",name:"getKey",description:"<p>Get a single public key</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.users.getKey({id})",type:"js"},{title:"Promise",content:"github.users.getKey({id}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getKey({id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/user/keys",title:"getKeys",name:"getKeys",description:"<p>List your public keys</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.users.getKeys({page, per_page})",type:"js"},{title:"Promise",content:"github.users.getKeys({page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getKeys({page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/users/:username/keys",title:"getKeysForUser",name:"getKeysForUser",description:"<p>List public keys for a user</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""},{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.users.getKeysForUser({username, page, per_page})",type:"js"},{title:"Promise",content:"github.users.getKeysForUser({username, page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getKeysForUser({username, page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/user/marketplace_purchases",title:"getMarketplacePurchases",name:"getMarketplacePurchases",description:"<p>Get a user's Marketplace purchases. (In preview period. See README.)</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.users.getMarketplacePurchases({page, per_page})",type:"js"},{title:"Promise",content:"github.users.getMarketplacePurchases({page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getMarketplacePurchases({page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/user/marketplace_purchases/stubbed",title:"getMarketplaceStubbedPurchases",name:"getMarketplaceStubbedPurchases",description:"<p>Get a user's stubbed Marketplace purchases. (In preview period. See README.)</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.users.getMarketplaceStubbedPurchases({page, per_page})",type:"js"},{title:"Promise",content:"github.users.getMarketplaceStubbedPurchases({page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getMarketplaceStubbedPurchases({page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/user/memberships/orgs/:org",title:"getOrgMembership",name:"getOrgMembership",description:"<p>Get your organization membership</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"org",description:""}]}},examples:[{title:"async/await",content:"const result = await github.users.getOrgMembership({org})",type:"js"},{title:"Promise",content:"github.users.getOrgMembership({org}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getOrgMembership({org}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/user/memberships/orgs",title:"getOrgMemberships",name:"getOrgMemberships",description:"<p>List your organization memberships</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",allowedValues:["active","pending"],optional:!0,field:"state",description:"<p>Indicates the state of the memberships to return. Can be either active or pending. If not specified, both active and pending memberships are returned.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.users.getOrgMemberships({state})",type:"js"},{title:"Promise",content:"github.users.getOrgMemberships({state}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getOrgMemberships({state}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/user/orgs",title:"getOrgs",name:"getOrgs",description:"<p>List organizations for the authenticated user.</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.users.getOrgs({page, per_page})",type:"js"},{title:"Promise",content:"github.users.getOrgs({page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getOrgs({page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/user/public_emails",title:"getPublicEmails",name:"getPublicEmails",description:"<p>List public email addresses for a user.</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.users.getPublicEmails({page, per_page})",type:"js"},{title:"Promise",content:"github.users.getPublicEmails({page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getPublicEmails({page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/user/repository_invitations",title:"getRepoInvites",name:"getRepoInvites",description:"<p>List a user's repository invitations.</p>",group:"Users",examples:[{title:"async/await",content:"const result = await github.users.getRepoInvites({})",type:"js"},{title:"Promise",content:"github.users.getRepoInvites({}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getRepoInvites({}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"GET",url:"/user/teams",title:"getTeams",name:"getTeams",description:"<p>Get your teams.</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"number",optional:!0,field:"page",description:"<p>Page number of the results to fetch.</p>"},{group:"Parameter",type:"number",optional:!0,field:"per_page",defaultValue:"30",description:"<p>A custom page size up to 100. Default is 30.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.users.getTeams({page, per_page})",type:"js"},{title:"Promise",content:"github.users.getTeams({page, per_page}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.getTeams({page, per_page}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"PUT",url:"/users/:username/site_admin",title:"promote",name:"promote",description:"<p>Promote an ordinary user to a site administrator</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.users.promote({username})",type:"js"},{title:"Promise",content:"github.users.promote({username}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.promote({username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"DELETE",url:"/user/installations/:installation_id/repositories/:repository_id",title:"removeRepoFromInstallation",name:"removeRepoFromInstallation",description:"<p>Remove a single repository from an installation. (In preview period. See README.)</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"installation_id",description:""},{group:"Parameter",type:"string",optional:!1,field:"repository_id",description:""}]}},examples:[{title:"async/await",content:"const result = await github.users.removeRepoFromInstallation({installation_id, repository_id})",type:"js"},{title:"Promise",content:"github.users.removeRepoFromInstallation({installation_id, repository_id}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.removeRepoFromInstallation({installation_id, repository_id}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"PUT",url:"/users/:username/suspended",title:"suspend",name:"suspend",description:"<p>Suspend a user</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.users.suspend({username})",type:"js"},{title:"Promise",content:"github.users.suspend({username}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.suspend({username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"PATCH",url:"/user/email/visibility",title:"togglePrimaryEmailVisibility",name:"togglePrimaryEmailVisibility",description:"<p>Toggle primary email visibility.</p>",group:"Users",examples:[{title:"async/await",content:"const result = await github.users.togglePrimaryEmailVisibility({})",type:"js"},{title:"Promise",content:"github.users.togglePrimaryEmailVisibility({}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.togglePrimaryEmailVisibility({}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"DELETE",url:"/user/blocks/:username",title:"unblockUser",name:"unblockUser",description:"<p>Unblock a user. (In preview period. See README.)</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.users.unblockUser({username})",type:"js"},{title:"Promise",content:"github.users.unblockUser({username}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.unblockUser({username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"DELETE",url:"/user/following/:username",title:"unfollowUser",name:"unfollowUser",description:"<p>Unfollow a user</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.users.unfollowUser({username})",type:"js"},{title:"Promise",content:"github.users.unfollowUser({username}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.unfollowUser({username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"DELETE",url:"/users/:username/suspended",title:"unsuspend",name:"unsuspend",description:"<p>Unsuspend a user</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!1,field:"username",description:""}]}},examples:[{title:"async/await",content:"const result = await github.users.unsuspend({username})",type:"js"},{title:"Promise",content:"github.users.unsuspend({username}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.unsuspend({username}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"},{type:"PATCH",url:"/user",title:"update",name:"update",description:"<p>Update the authenticated user</p>",group:"Users",parameter:{fields:{Parameter:[{group:"Parameter",type:"string",optional:!0,field:"name",description:"<p>The new name of the user</p>"},{group:"Parameter",type:"string",optional:!0,field:"email",description:"<p>Publicly visible email address.</p>"},{group:"Parameter",type:"string",optional:!0,field:"blog",description:"<p>The new blog URL of the user.</p>"},{group:"Parameter",type:"string",optional:!0,field:"company",description:"<p>The new company of the user.</p>"},{group:"Parameter",type:"string",optional:!0,field:"location",description:"<p>The new location of the user.</p>"},{group:"Parameter",type:"boolean",optional:!0,field:"hireable",description:"<p>The new hiring availability of the user.</p>"},{group:"Parameter",type:"string",optional:!0,field:"bio",description:"<p>The new short biography of the user.</p>"}]}},examples:[{title:"async/await",content:"const result = await github.users.update({name, email, blog, company, location, hireable, bio})",type:"js"},{title:"Promise",content:"github.users.update({name, email, blog, company, location, hireable, bio}).then(result => {})",type:"js"},{title:"Callback",content:"github.users.update({name, email, blog, company, location, hireable, bio}, (error, result) => {})",type:"js"}],version:"0.0.0",filename:"apidoc.js",groupTitle:"Users"}];const le={name:"@octokit/rest",version:"0.0.0-development",description:"GitHub REST API client for Node.js",template:{withCompare:!1},sampleUrl:!1,defaultVersion:"0.0.0",apidoc:"0.3.0",generator:{name:"apidoc",time:"Fri Nov 25 2022 01:08:15 GMT+0500 (Pakistan Standard Time)",url:"https://apidocjs.com",version:"0.53.1"}};Ge();const Ce=p().compile(b()("#template-header").html()),je=p().compile(b()("#template-footer").html()),oe=p().compile(b()("#template-article").html()),ye=p().compile(b()("#template-compare-article").html()),he=p().compile(b()("#template-generator").html()),we=p().compile(b()("#template-project").html()),Xe=p().compile(b()("#template-sections").html()),qe=p().compile(b()("#template-sidenav").html()),Je={aloneDisplay:!1,showRequiredLabels:!1,withGenerator:!0,withCompare:!0};le.template=Object.assign(Je,(X=le.template)!=null?X:{}),le.template.forceLanguage&&Le(le.template.forceLanguage);const _e=(0,s.groupBy)(Oe,Y=>Y.group),$e={};b().each(_e,(Y,H)=>{$e[Y]=(0,s.groupBy)(H,Z=>Z.name)});const Qe=[];b().each($e,(Y,H)=>{let Z=[];b().each(H,(ee,ae)=>{const de=ae[0].title;de&&Z.push(de.toLowerCase()+"#~#"+ee)}),Z.sort(),le.order&&(Z=M(Z,le.order,"#~#")),Z.forEach(ee=>{const de=ee.split("#~#")[1];H[de].forEach(me=>{Qe.push(me)})})}),Oe=Qe;let Ze={};const Ut={};let Lt={};Lt[le.version]=1,b().each(Oe,(Y,H)=>{Ze[H.group]=1,Ut[H.group]=H.groupTitle||H.group,Lt[H.version]=1}),Ze=Object.keys(Ze),Ze.sort(),le.order&&(Ze=$(Ut,le.order)),Lt=Object.keys(Lt),Lt.sort(i().compare),Lt.reverse();const Ct=[];Ze.forEach(Y=>{Ct.push({group:Y,isHeader:!0,title:Ut[Y]});let H="";Oe.forEach(Z=>{Z.group===Y&&(H!==Z.name?Ct.push({title:Z.title,group:Y,name:Z.name,type:Z.type,version:Z.version,url:Z.url}):Ct.push({title:Z.title,group:Y,hidden:!0,name:Z.name,type:Z.type,version:Z.version,url:Z.url}),H=Z.name)})});function _r(Y,H,Z){let ee=!1;if(!H)return ee;const ae=H.match(/<h(1|2).*?>(.+?)<\/h(1|2)>/gi);return ae&&ae.forEach(function(de){const me=de.substring(2,3),Ee=de.replace(/<.+?>/g,""),Ae=de.match(/id="api-([^-]+)(?:-(.+))?"/),Ie=Ae?Ae[1]:null,We=Ae?Ae[2]:null;me==="1"&&Ee&&Ie&&(Y.splice(Z,0,{group:Ie,isHeader:!0,title:Ee,isFixed:!0}),Z++,ee=!0),me==="2"&&Ee&&Ie&&We&&(Y.splice(Z,0,{group:Ie,name:We,isHeader:!1,title:Ee,isFixed:!1,version:"1.0"}),Z++)}),ee}let nr;if(le.header&&(nr=_r(Ct,le.header.content,0),nr||Ct.unshift({group:"_header",isHeader:!0,title:le.header.title==null?Pe("General"):le.header.title,isFixed:!0})),le.footer){const Y=Ct.length;nr=_r(Ct,le.footer.content,Ct.length),!nr&&le.footer.title!=null&&Ct.splice(Y,0,{group:"_footer",isHeader:!0,title:le.footer.title,isFixed:!0})}const Ht=le.title?le.title:"apiDoc: "+le.name+" - "+le.version;b()(document).attr("title",Ht),b()("#loader").remove();const gr={nav:Ct};b()("#sidenav").append(qe(gr)),b()("#generator").append(he(le)),(0,s.extend)(le,{versions:Lt}),b()("#project").append(we(le)),le.header&&b()("#header").append(Ce(le.header)),le.footer&&(b()("#footer").append(je(le.footer)),le.template.aloneDisplay&&document.getElementById("api-_footer").classList.add("hide"));const Mt={};let fr="";Ze.forEach(function(Y){const H=[];let Z="",ee={},ae=Y,de="";Mt[Y]={},Oe.forEach(function(me){Y===me.group&&(Z!==me.name?(Oe.forEach(function(Ee){Y===Ee.group&&me.name===Ee.name&&(Object.prototype.hasOwnProperty.call(Mt[me.group],me.name)||(Mt[me.group][me.name]=[]),Mt[me.group][me.name].push(Ee.version))}),ee={article:me,versions:Mt[me.group][me.name]}):ee={article:me,hidden:!0,versions:Mt[me.group][me.name]},le.sampleUrl&&le.sampleUrl===!0&&(le.sampleUrl=window.location.origin),le.url&&ee.article.url.substr(0,4).toLowerCase()!=="http"&&(ee.article.url=le.url+ee.article.url),Rr(ee,me),me.groupTitle&&(ae=me.groupTitle),me.groupDescription&&(de=me.groupDescription),H.push({article:oe(ee),group:me.group,name:me.name,aloneDisplay:le.template.aloneDisplay}),Z=me.name)}),ee={group:Y,title:ae,description:de,articles:H,aloneDisplay:le.template.aloneDisplay},fr+=Xe(ee)}),b()("#sections").append(fr),le.template.aloneDisplay||(document.body.dataset.spy="scroll",b()("body").scrollspy({target:"#scrollingNav"})),b()(".form-control").on("focus change",function(){b()(this).removeClass("border-danger")}),b()(".sidenav").find("a").on("click",function(Y){Y.preventDefault();const H=this.getAttribute("href");if(le.template.aloneDisplay){const Z=document.querySelector(".sidenav > li.active");Z&&Z.classList.remove("active"),this.parentNode.classList.add("active")}else{const Z=document.querySelector(H);Z&&b()("html,body").animate({scrollTop:Z.offsetTop},400)}window.location.hash=H});function yt(Y){let H=!1;return b().each(Y,Z=>{H=H||(0,s.some)(Y[Z],ee=>ee.type)}),H}function Ar(){b()('button[data-toggle="popover"]').popover().click(function(H){H.preventDefault()});const Y=b()("#version strong").html();if(b()("#sidenav li").removeClass("is-new"),le.template.withCompare&&b()("#sidenav li[data-version='"+Y+"']").each(function(){const H=b()(this).data("group"),Z=b()(this).data("name"),ee=b()("#sidenav li[data-group='"+H+"'][data-name='"+Z+"']").length,ae=b()("#sidenav li[data-group='"+H+"'][data-name='"+Z+"']").index(b()(this));(ee===1||ae===ee-1)&&b()(this).addClass("is-new")}),b()(".nav-tabs-examples a").click(function(H){H.preventDefault(),b()(this).tab("show")}),b()(".nav-tabs-examples").find("a:first").tab("show"),b()(".sample-request-content-type-switch").change(function(){b()(this).val()==="body-form-data"?(b()("#sample-request-body-json-input-"+b()(this).data("id")).hide(),b()("#sample-request-body-form-input-"+b()(this).data("id")).show()):(b()("#sample-request-body-form-input-"+b()(this).data("id")).hide(),b()("#sample-request-body-json-input-"+b()(this).data("id")).show())}),le.template.aloneDisplay&&(b()(".show-group").click(function(){const H="."+b()(this).attr("data-group")+"-group",Z="."+b()(this).attr("data-group")+"-article";b()(".show-api-group").addClass("hide"),b()(H).removeClass("hide"),b()(".show-api-article").addClass("hide"),b()(Z).removeClass("hide")}),b()(".show-api").click(function(){const H=this.getAttribute("href").substring(1),Z=document.getElementById("version").textContent.trim(),ee=`.${this.dataset.name}-article`,ae=`[id="${H}-${Z}"]`,de=`.${this.dataset.group}-group`;b()(".show-api-group").addClass("hide"),b()(de).removeClass("hide"),b()(".show-api-article").addClass("hide");let me=b()(ee);b()(ae).length&&(me=b()(ae).parent()),me.removeClass("hide"),H.match(/_(header|footer)/)&&document.getElementById(H).classList.remove("hide")})),le.template.aloneDisplay||b()("body").scrollspy("refresh"),le.template.aloneDisplay){const H=decodeURI(window.location.hash);if(H!=null&&H.length!==0){const Z=document.getElementById("version").textContent.trim(),ee=document.querySelector(`li .${H.slice(1)}-init`),ae=document.querySelector(`li[data-version="${Z}"] .show-api.${H.slice(1)}-init`);let de=ee;ae&&(de=ae),de.click()}}}function Or(Y){typeof Y=="undefined"?Y=b()("#version strong").html():b()("#version strong").html(Y),b()("article").addClass("hide"),b()("#sidenav li:not(.nav-fixed)").addClass("hide");const H={};document.querySelectorAll("article[data-version]").forEach(Z=>{const ee=Z.dataset.group,ae=Z.dataset.name,de=Z.dataset.version,me=ee+ae;!H[me]&&i().lte(de,Y)&&(H[me]=!0,document.querySelector(`article[data-group="${ee}"][data-name="${ae}"][data-version="${de}"]`).classList.remove("hide"),document.querySelector(`#sidenav li[data-group="${ee}"][data-name="${ae}"][data-version="${de}"]`).classList.remove("hide"),document.querySelector(`#sidenav li.nav-header[data-group="${ee}"]`).classList.remove("hide"))}),b()("article[data-version]").each(function(Z){const ee=b()(this).data("group");b()("section#api-"+ee).removeClass("hide"),b()("section#api-"+ee+" article:visible").length===0?b()("section#api-"+ee).addClass("hide"):b()("section#api-"+ee).removeClass("hide")})}if(Or(),b()("#versions li.version a").on("click",function(Y){Y.preventDefault(),Or(b()(this).html())}),b()("#compareAllWithPredecessor").on("click",Nr),b()("article .versions li.version a").on("click",lr),b().urlParam=function(Y){const H=new RegExp("[\\?&amp;]"+Y+"=([^&amp;#]*)").exec(window.location.href);return H&&H[1]?H[1]:null},b().urlParam("compare")&&b()("#compareAllWithPredecessor").trigger("click"),window.location.hash){const Y=decodeURI(window.location.hash);b()(Y).length>0&&b()("html,body").animate({scrollTop:parseInt(b()(Y).offset().top)},0)}b()("#scrollingNav .sidenav-search input.search").focus(),b()('[data-action="filter-search"]').on("keyup",Y=>{const H=Y.currentTarget.value.toLowerCase();b()(".sidenav").find("a.nav-list-item").each((Z,ee)=>{b()(ee).show(),ee.innerText.toLowerCase().includes(H)||b()(ee).hide()})}),b()("span.search-reset").on("click",function(){b()("#scrollingNav .sidenav-search input.search").val("").focus(),b()(".sidenav").find("a.nav-list-item").show()});function lr(Y){Y.preventDefault();const H=b()(this).parents("article"),Z=b()(this).html(),ee=H.find(".version"),ae=ee.find("strong").html();ee.find("strong").html(Z);const de=H.data("group"),me=H.data("name"),Ee=H.data("version"),Ae=H.data("compare-version");if(Ae!==Z&&!(!Ae&&Ee===Z)){if(Ae&&Mt[de][me][0]===Z||Ee===Z)Kr(de,me,Ee);else{let Ie={},We={};b().each($e[de][me],function(ot,Yt){Yt.version===Ee&&(Ie=Yt),Yt.version===Z&&(We=Yt)});const be={article:Ie,compare:We,versions:Mt[de][me]};be.article.id=be.article.group+"-"+be.article.name+"-"+be.article.version,be.article.id=be.article.id.replace(/\./g,"_"),be.compare.id=be.compare.group+"-"+be.compare.name+"-"+be.compare.version,be.compare.id=be.compare.id.replace(/\./g,"_");let Me=Ie;Me.parameter&&Me.parameter.fields&&(be._hasTypeInParameterFields=yt(Me.parameter.fields)),Me.error&&Me.error.fields&&(be._hasTypeInErrorFields=yt(Me.error.fields)),Me.success&&Me.success.fields&&(be._hasTypeInSuccessFields=yt(Me.success.fields)),Me.info&&Me.info.fields&&(be._hasTypeInInfoFields=yt(Me.info.fields)),Me=We,be._hasTypeInParameterFields!==!0&&Me.parameter&&Me.parameter.fields&&(be._hasTypeInParameterFields=yt(Me.parameter.fields)),be._hasTypeInErrorFields!==!0&&Me.error&&Me.error.fields&&(be._hasTypeInErrorFields=yt(Me.error.fields)),be._hasTypeInSuccessFields!==!0&&Me.success&&Me.success.fields&&(be._hasTypeInSuccessFields=yt(Me.success.fields)),be._hasTypeInInfoFields!==!0&&Me.info&&Me.info.fields&&(be._hasTypeInInfoFields=yt(Me.info.fields));const bt=ye(be);H.after(bt),H.next().find(".versions li.version a").on("click",lr),b()("#sidenav li[data-group='"+de+"'][data-name='"+me+"'][data-version='"+ae+"']").addClass("has-modifications"),H.remove()}h().highlightAll()}}function Nr(Y){Y.preventDefault(),b()("article:visible .versions").each(function(){const Z=b()(this).parents("article").data("version");let ee=null;b()(this).find("li.version a").each(function(){b()(this).html()<Z&&!ee&&(ee=b()(this))}),ee&&ee.trigger("click")})}function Rr(Y,H){Y.id=Y.article.group+"-"+Y.article.name+"-"+Y.article.version,Y.id=Y.id.replace(/\./g,"_"),H.header&&H.header.fields&&(Y._hasTypeInHeaderFields=yt(H.header.fields)),H.parameter&&H.parameter.fields&&(Y._hasTypeInParameterFields=yt(H.parameter.fields)),H.error&&H.error.fields&&(Y._hasTypeInErrorFields=yt(H.error.fields)),H.success&&H.success.fields&&(Y._hasTypeInSuccessFields=yt(H.success.fields)),H.info&&H.info.fields&&(Y._hasTypeInInfoFields=yt(H.info.fields)),Y.template=le.template}function ai(Y,H,Z){let ee={};b().each($e[Y][H],function(de,me){me.version===Z&&(ee=me)});const ae={article:ee,versions:Mt[Y][H]};return Rr(ae,ee),oe(ae)}function Kr(Y,H,Z){const ee=b()("article[data-group='"+Y+"'][data-name='"+H+"']:visible"),ae=ai(Y,H,Z);ee.after(ae),ee.next().find(".versions li.version a").on("click",lr),b()("#sidenav li[data-group='"+Y+"'][data-name='"+H+"'][data-version='"+Z+"']").removeClass("has-modifications"),ee.remove()}function M(Y,H,Z){const ee=[];return H.forEach(function(ae){Z?Y.forEach(function(de){const me=de.split(Z);(me[0]===ae||me[1]===ae)&&ee.push(de)}):Y.forEach(function(de){de===ae&&ee.push(ae)})}),Y.forEach(function(ae){ee.indexOf(ae)===-1&&ee.push(ae)}),ee}function $(Y,H){const Z=[];return H.forEach(ee=>{Object.keys(Y).forEach(ae=>{Y[ae].replace(/_/g," ")===ee&&Z.push(ae)})}),Object.keys(Y).forEach(ee=>{Z.indexOf(ee)===-1&&Z.push(ee)}),Z}Ar()}})()})();
